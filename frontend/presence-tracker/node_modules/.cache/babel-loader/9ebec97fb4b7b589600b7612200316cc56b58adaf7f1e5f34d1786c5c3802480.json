{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarComponent.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = ({\n  userEmail\n}) => {\n  _s();\n  var _monthlyPresenceData$, _monthlyPresenceData$2, _monthlyPresenceData$3, _monthlyPresenceData$4, _monthlyPresenceData$5, _monthlyPresenceData$6, _monthlyPresenceData$7, _monthlyPresenceData$8, _monthlyPresenceData$9, _monthlyPresenceData$10, _monthlyPresenceData$11;\n  const [date, setDate] = useState(new Date());\n  const [defaultTimes, setDefaultTimes] = useState({\n    entry_time_morning: '',\n    exit_time_morning: '',\n    entry_time_afternoon: '',\n    exit_time_afternoon: ''\n  });\n  const [dailyPresence, setDailyPresence] = useState([]);\n  const [monthlyPresenceData, setMonthlyPresenceData] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [error, setError] = useState('');\n  const [isMonthChanged, setIsMonthChanged] = useState(true);\n  const userId = localStorage.getItem('user_id');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isMonthChanged) return;\n    const fetchDefaultTimes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/get-default-hours', {\n          params: {\n            user_id: userId,\n            submitted_by_id: userId\n          }\n        });\n        setDefaultTimes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching default times.\");\n      }\n    };\n    const fetchDailyPresence = async () => {\n      try {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const response = await axios.get(`http://localhost:8000/employee-presence/${userId}/${year}/${month}`);\n        const presenceData = response.data;\n        if (presenceData.length === 0) {\n          console.warn(\"No presence data found for this month. Using default hours.\");\n          // Fill the month with default hours\n          const daysInMonth = new Date(year, date.getMonth() + 1, 0).getDate();\n          const defaultData = Array.from({\n            length: daysInMonth\n          }, (_, dayIndex) => {\n            const dayDate = new Date(year, date.getMonth(), dayIndex + 1).toLocaleDateString('en-CA');\n            const isWeekend = [0, 6].includes(new Date(dayDate).getDay());\n            return {\n              date: dayDate,\n              ...defaultTimes,\n              national_holiday: false,\n              weekend: isWeekend,\n              day_off: false,\n              time_off: \"00:00\",\n              extra_hours: \"00:00\",\n              illness: \"\",\n              notes: \"\"\n            };\n          });\n          setDailyPresence(defaultData);\n          const mappedDefaults = defaultData.reduce((acc, dayData) => {\n            acc[dayData.date] = dayData;\n            return acc;\n          }, {});\n          setMonthlyPresenceData(mappedDefaults);\n        } else {\n          setDailyPresence(presenceData);\n          const mappedData = presenceData.reduce((acc, dayData) => {\n            acc[dayData.date] = dayData;\n            return acc;\n          }, {});\n          setMonthlyPresenceData(mappedData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching presence data:\", error);\n      }\n    };\n    fetchDefaultTimes();\n    fetchDailyPresence();\n    setIsMonthChanged(false);\n  }, [date, userEmail]);\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    navigate('/login'); // Redirect to login page\n  };\n  const checkTokenExpiration = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // Redirect to login if token is missing\n      return;\n    }\n    try {\n      const decodedToken = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decodedToken.exp < currentTime) {\n        // Token is expired, redirect to login\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      localStorage.removeItem('token'); // Clear invalid token\n      navigate('/login'); // Redirect to login on error\n    }\n  };\n  useEffect(() => {\n    checkTokenExpiration();\n  }, []);\n  const handleMonthChange = newDate => {\n    setDate(newDate);\n    setIsMonthChanged(true);\n  };\n  const openPopup = day => {\n    console.log(\"Selected day:\", day);\n    const dayString = day.toLocaleDateString('en-CA');\n    const isWeekend = [0, 6].includes(day.getDay());\n    const presence = monthlyPresenceData[dayString] || dailyPresence.find(p => p.date === dayString) || {\n      ...defaultTimes,\n      national_holiday: false,\n      weekend: isWeekend,\n      day_off: false,\n      time_off: '00:00',\n      extra_hours: '00:00',\n      illness: '',\n      notes: ''\n    };\n    setSelectedDay(day);\n    setMonthlyPresenceData(prevData => ({\n      ...prevData,\n      [dayString]: presence\n    }));\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    if (selectedDay) {\n      const dayString = selectedDay.toLocaleDateString('en-CA');\n      setMonthlyPresenceData(prevData => ({\n        ...prevData,\n        [dayString]: {\n          ...prevData[dayString],\n          ...monthlyPresenceData[dayString]\n        }\n      }));\n    }\n    setShowPopup(false);\n    setSelectedDay(null);\n  };\n  const handlePresenceChange = (field, value) => {\n    if (selectedDay) {\n      const dayString = selectedDay.toLocaleDateString('en-CA');\n      setMonthlyPresenceData(prevData => ({\n        ...prevData,\n        [dayString]: {\n          ...prevData[dayString],\n          [field]: value\n        }\n      }));\n    }\n  };\n  const isDataChanged = dayString => {\n    const savedData = dailyPresence.find(p => p.date === dayString);\n    const currentData = monthlyPresenceData[dayString];\n    if (!currentData) return false;\n    if (!savedData) return true;\n    return savedData.entry_time_morning !== currentData.entry_time_morning || savedData.exit_time_morning !== currentData.exit_time_morning || savedData.entry_time_afternoon !== currentData.entry_time_afternoon || savedData.exit_time_afternoon !== currentData.exit_time_afternoon || savedData.national_holiday !== currentData.national_holiday || savedData.weekend !== currentData.weekend || savedData.day_off !== currentData.day_off || savedData.time_off !== currentData.time_off || savedData.extra_hours !== currentData.extra_hours || savedData.illness !== currentData.illness || savedData.notes !== currentData.notes;\n  };\n  const isMonthDataChanged = () => {\n    return Object.keys(monthlyPresenceData).some(dayString => {\n      const savedData = dailyPresence.find(p => p.date === dayString);\n      const currentData = monthlyPresenceData[dayString];\n      if (!savedData) return true;\n      return savedData.entry_time_morning !== currentData.entry_time_morning || savedData.exit_time_morning !== currentData.exit_time_morning || savedData.entry_time_afternoon !== currentData.entry_time_afternoon || savedData.exit_time_afternoon !== currentData.exit_time_afternoon || savedData.national_holiday !== currentData.national_holiday || savedData.weekend !== currentData.weekend || savedData.day_off !== currentData.day_off || savedData.time_off !== currentData.time_off || savedData.extra_hours !== currentData.extra_hours || savedData.illness !== currentData.illness || savedData.notes !== currentData.notes;\n    });\n  };\n  const handleSaveMonthlyPresence = async () => {\n    const dataHasChanged = isMonthDataChanged();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const allDaysOfMonth = Array.from({\n      length: daysInMonth\n    }, (_, i) => {\n      const day = new Date(year, month, i + 1);\n      return day.toLocaleDateString('en-CA');\n    });\n    if (!dataHasChanged) {\n      const confirmSubmit = window.confirm(\"No changes detected. Do you want to submit the presence data with default values?\");\n      if (!confirmSubmit) return;\n    }\n    const presenceDataList = allDaysOfMonth.map(day => {\n      const savedData = monthlyPresenceData[day] || dailyPresence.find(p => p.date === day) || {\n        ...defaultTimes,\n        national_holiday: false,\n        weekend: [0, 6].includes(new Date(day).getDay()),\n        // Mark weekends as true\n        day_off: false,\n        time_off: \"00:00\",\n        extra_hours: \"00:00\",\n        illness: \"\",\n        notes: \"\"\n      };\n      return {\n        ...savedData,\n        employee_id: userId,\n        date: day,\n        time_off: savedData.time_off || \"00:00\",\n        extra_hours: savedData.extra_hours || \"00:00\"\n      };\n    });\n    try {\n      await axios.post(`http://localhost:8000/employee-dashboard?user_id=${userId}`, presenceDataList);\n      alert('Monthly presence data saved successfully!');\n    } catch (error) {\n      console.error(\"Error saving monthly presence data:\", error);\n      alert(\"There was an error saving the data. Please try again.\");\n    }\n  };\n  const handleDefaultHoursSave = async () => {\n    const defaultHoursData = {\n      user_id: userId,\n      submitted_by_id: userId,\n      entry_time_morning: defaultTimes.entry_time_morning,\n      exit_time_morning: defaultTimes.exit_time_morning,\n      entry_time_afternoon: defaultTimes.entry_time_afternoon,\n      exit_time_afternoon: defaultTimes.exit_time_afternoon\n    };\n    try {\n      const response = await axios.get('http://localhost:8000/get-default-hours', {\n        params: {\n          user_id: userId,\n          submitted_by_id: userId\n        }\n      });\n      if (response.data) {\n        await axios.put('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours updated successfully!');\n      } else {\n        await axios.post('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours saved successfully!');\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        // Handle the case where no data was found (404)\n        await axios.post('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours saved successfully!');\n      } else {\n        console.error(\"Error saving default hours:\", error);\n        alert(\"Error occurred while saving default hours.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Presence Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignOut,\n      className: \"sign-out-button\",\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setDate,\n      value: date,\n      onActiveStartDateChange: ({\n        activeStartDate\n      }) => handleMonthChange(activeStartDate),\n      tileContent: ({\n        date\n      }) => {\n        const dayString = date.toLocaleDateString('en-CA');\n        const hasCustomData = isDataChanged(dayString);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openPopup(date),\n          style: {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 1,\n            cursor: 'pointer'\n          },\n          children: hasCustomData ? '✔' : 'default'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this);\n      },\n      view: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), showPopup && selectedDay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Edit Presence for \", selectedDay.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Morning Entry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$ = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$ === void 0 ? void 0 : _monthlyPresenceData$.entry_time_morning) || '',\n          onChange: e => handlePresenceChange('entry_time_morning', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Morning Exit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$2 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$2 === void 0 ? void 0 : _monthlyPresenceData$2.exit_time_morning) || '',\n          onChange: e => handlePresenceChange('exit_time_morning', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Afternoon Entry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$3 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$3 === void 0 ? void 0 : _monthlyPresenceData$3.entry_time_afternoon) || '',\n          onChange: e => handlePresenceChange('entry_time_afternoon', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Afternoon Exit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$4 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$4 === void 0 ? void 0 : _monthlyPresenceData$4.exit_time_afternoon) || '',\n          onChange: e => handlePresenceChange('exit_time_afternoon', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"National Holiday:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: ((_monthlyPresenceData$5 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$5 === void 0 ? void 0 : _monthlyPresenceData$5.national_holiday) || false,\n          onChange: e => handlePresenceChange('national_holiday', e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Weekend:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: ((_monthlyPresenceData$6 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$6 === void 0 ? void 0 : _monthlyPresenceData$6.weekend) || false,\n          onChange: e => handlePresenceChange('weekend', e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Day Off:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: ((_monthlyPresenceData$7 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$7 === void 0 ? void 0 : _monthlyPresenceData$7.day_off) || false,\n          onChange: e => handlePresenceChange('day_off', e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time Off:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$8 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$8 === void 0 ? void 0 : _monthlyPresenceData$8.time_off) || '',\n          onChange: e => handlePresenceChange('time_off', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Extra hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: ((_monthlyPresenceData$9 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$9 === void 0 ? void 0 : _monthlyPresenceData$9.extra_hours) || '',\n          onChange: e => handlePresenceChange('extra_hours', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Illness Certificate NO.:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ((_monthlyPresenceData$10 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$10 === void 0 ? void 0 : _monthlyPresenceData$10.illness) || '',\n          onChange: e => handlePresenceChange('notes', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ((_monthlyPresenceData$11 = monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]) === null || _monthlyPresenceData$11 === void 0 ? void 0 : _monthlyPresenceData$11.notes) || '',\n          onChange: e => handlePresenceChange('notes', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"default-times\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Default Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Morning Entry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: defaultTimes.entry_time_morning,\n          onChange: e => setDefaultTimes({\n            ...defaultTimes,\n            entry_time_morning: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Morning Exit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: defaultTimes.exit_time_morning,\n          onChange: e => setDefaultTimes({\n            ...defaultTimes,\n            exit_time_morning: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Afternoon Entry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: defaultTimes.entry_time_afternoon,\n          onChange: e => setDefaultTimes({\n            ...defaultTimes,\n            entry_time_afternoon: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Afternoon Exit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: defaultTimes.exit_time_afternoon,\n          onChange: e => setDefaultTimes({\n            ...defaultTimes,\n            exit_time_afternoon: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: handleSaveMonthlyPresence,\n        children: \"Save Presence for Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"default-hours-button\",\n        onClick: handleDefaultHoursSave,\n        children: \"Save Default Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"dUHo6Ou0W/F+jF8i954ZE1BS5f8=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","useNavigate","jwtDecode","jsxDEV","_jsxDEV","CalendarComponent","userEmail","_s","_monthlyPresenceData$","_monthlyPresenceData$2","_monthlyPresenceData$3","_monthlyPresenceData$4","_monthlyPresenceData$5","_monthlyPresenceData$6","_monthlyPresenceData$7","_monthlyPresenceData$8","_monthlyPresenceData$9","_monthlyPresenceData$10","_monthlyPresenceData$11","date","setDate","Date","defaultTimes","setDefaultTimes","entry_time_morning","exit_time_morning","entry_time_afternoon","exit_time_afternoon","dailyPresence","setDailyPresence","monthlyPresenceData","setMonthlyPresenceData","showPopup","setShowPopup","selectedDay","setSelectedDay","error","setError","isMonthChanged","setIsMonthChanged","userId","localStorage","getItem","navigate","fetchDefaultTimes","response","get","params","user_id","submitted_by_id","data","console","fetchDailyPresence","year","getFullYear","month","String","getMonth","padStart","presenceData","length","warn","daysInMonth","getDate","defaultData","Array","from","_","dayIndex","dayDate","toLocaleDateString","isWeekend","includes","getDay","national_holiday","weekend","day_off","time_off","extra_hours","illness","notes","mappedDefaults","reduce","acc","dayData","mappedData","handleSignOut","removeItem","checkTokenExpiration","token","decodedToken","currentTime","now","exp","handleMonthChange","newDate","openPopup","day","log","dayString","presence","find","p","prevData","closePopup","handlePresenceChange","field","value","isDataChanged","savedData","currentData","isMonthDataChanged","Object","keys","some","handleSaveMonthlyPresence","dataHasChanged","allDaysOfMonth","i","confirmSubmit","window","confirm","presenceDataList","map","employee_id","post","alert","handleDefaultHoursSave","defaultHoursData","put","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onActiveStartDateChange","activeStartDate","tileContent","hasCustomData","style","width","height","display","alignItems","justifyContent","zIndex","cursor","view","toDateString","type","e","target","checked","_c","$RefreshReg$"],"sources":["/app/src/components/CalendarComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarComponent.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\n\nconst CalendarComponent = ({ userEmail }) => {\n  const [date, setDate] = useState(new Date());\n  const [defaultTimes, setDefaultTimes] = useState({\n    entry_time_morning: '',\n    exit_time_morning: '',\n    entry_time_afternoon: '',\n    exit_time_afternoon: '',\n  });\n  const [dailyPresence, setDailyPresence] = useState([]);\n  const [monthlyPresenceData, setMonthlyPresenceData] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [error, setError] = useState('');\n  const [isMonthChanged, setIsMonthChanged] = useState(true);\n  const userId = localStorage.getItem('user_id');\n  const navigate = useNavigate(); \n\n  useEffect(() => {\n    if (!isMonthChanged) return;\n    \n    const fetchDefaultTimes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/get-default-hours', {\n          params: { user_id: userId, submitted_by_id: userId }\n        });\n        setDefaultTimes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching default times.\");\n      }\n    };\n\n    const fetchDailyPresence = async () => {\n      try {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const response = await axios.get(`http://localhost:8000/employee-presence/${userId}/${year}/${month}`);\n        const presenceData = response.data;\n    \n        if (presenceData.length === 0) {\n          console.warn(\"No presence data found for this month. Using default hours.\");\n          // Fill the month with default hours\n          const daysInMonth = new Date(year, date.getMonth() + 1, 0).getDate();\n          const defaultData = Array.from({ length: daysInMonth }, (_, dayIndex) => {\n            const dayDate = new Date(year, date.getMonth(), dayIndex + 1).toLocaleDateString('en-CA');\n            const isWeekend = [0, 6].includes(new Date(dayDate).getDay());\n            return {\n              date: dayDate,\n              ...defaultTimes,\n              national_holiday: false,\n              weekend: isWeekend,\n              day_off: false,\n              time_off: \"00:00\",\n              extra_hours: \"00:00\",\n              illness: \"\",\n              notes: \"\",\n            };\n          });\n    \n          setDailyPresence(defaultData);\n          const mappedDefaults = defaultData.reduce((acc, dayData) => {\n            acc[dayData.date] = dayData;\n            return acc;\n          }, {});\n          setMonthlyPresenceData(mappedDefaults);\n        } else {\n          setDailyPresence(presenceData);\n          const mappedData = presenceData.reduce((acc, dayData) => {\n            acc[dayData.date] = dayData;\n            return acc;\n          }, {});\n          setMonthlyPresenceData(mappedData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching presence data:\", error);\n      }\n    };\n    \n    \n\n    fetchDefaultTimes();\n    fetchDailyPresence();\n    setIsMonthChanged(false);\n  }, [date, userEmail]);\n\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    navigate('/login'); // Redirect to login page\n  };\n\n  const checkTokenExpiration = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // Redirect to login if token is missing\n      return;\n    }\n\n    try {\n      const decodedToken = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decodedToken.exp < currentTime) {\n        // Token is expired, redirect to login\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      localStorage.removeItem('token'); // Clear invalid token\n      navigate('/login'); // Redirect to login on error\n    }\n  };\n  \n  useEffect(() => {\n    checkTokenExpiration();\n  }, []);\n\n  const handleMonthChange = (newDate) => {\n    setDate(newDate);\n    setIsMonthChanged(true); \n  };\n\n  const openPopup = (day) => {\n    console.log(\"Selected day:\", day);\n    const dayString = day.toLocaleDateString('en-CA');\n    const isWeekend = [0, 6].includes(day.getDay());\n\n    const presence = monthlyPresenceData[dayString] || dailyPresence.find(p => p.date === dayString) || {\n      ...defaultTimes,\n      national_holiday: false,\n      weekend: isWeekend,\n      day_off: false,\n      time_off: '00:00',\n      extra_hours: '00:00',\n      illness: '',\n      notes: '',\n    };\n\n    setSelectedDay(day);\n    setMonthlyPresenceData(prevData => ({\n      ...prevData,\n      [dayString]: presence,\n    }));\n    setShowPopup(true);\n  };\n\n  const closePopup = () => {\n    if (selectedDay) {\n      const dayString = selectedDay.toLocaleDateString('en-CA');\n      setMonthlyPresenceData(prevData => ({\n        ...prevData,\n        [dayString]: {\n          ...prevData[dayString],\n          ...monthlyPresenceData[dayString], \n        },\n      }));\n    }\n    setShowPopup(false);\n    setSelectedDay(null);\n  };\n\n  const handlePresenceChange = (field, value) => {\n    if (selectedDay) {\n      const dayString = selectedDay.toLocaleDateString('en-CA');\n      setMonthlyPresenceData(prevData => ({\n        ...prevData,\n        [dayString]: {\n          ...prevData[dayString],\n          [field]: value,\n        },\n      }));\n    }\n  };\n  \n\n  const isDataChanged = (dayString) => {\n    const savedData = dailyPresence.find(p => p.date === dayString);\n    const currentData = monthlyPresenceData[dayString];\n  \n    if (!currentData) return false; \n    if (!savedData) return true; \n  \n    return (\n      savedData.entry_time_morning !== currentData.entry_time_morning ||\n      savedData.exit_time_morning !== currentData.exit_time_morning ||\n      savedData.entry_time_afternoon !== currentData.entry_time_afternoon ||\n      savedData.exit_time_afternoon !== currentData.exit_time_afternoon ||\n      savedData.national_holiday !== currentData.national_holiday ||\n      savedData.weekend !== currentData.weekend ||\n      savedData.day_off !== currentData.day_off ||\n      savedData.time_off !== currentData.time_off ||\n      savedData.extra_hours !== currentData.extra_hours ||\n      savedData.illness !== currentData.illness ||\n      savedData.notes !== currentData.notes\n    );\n  };\n\n  const isMonthDataChanged = () => {\n    return Object.keys(monthlyPresenceData).some(dayString => {\n      const savedData = dailyPresence.find(p => p.date === dayString);\n      const currentData = monthlyPresenceData[dayString];\n  \n      if (!savedData) return true;\n      return (\n        savedData.entry_time_morning !== currentData.entry_time_morning ||\n        savedData.exit_time_morning !== currentData.exit_time_morning ||\n        savedData.entry_time_afternoon !== currentData.entry_time_afternoon ||\n        savedData.exit_time_afternoon !== currentData.exit_time_afternoon ||\n        savedData.national_holiday !== currentData.national_holiday ||\n        savedData.weekend !== currentData.weekend ||\n        savedData.day_off !== currentData.day_off ||\n        savedData.time_off !== currentData.time_off ||\n        savedData.extra_hours !== currentData.extra_hours ||\n        savedData.illness !== currentData.illness ||\n        savedData.notes !== currentData.notes\n      );\n    });\n  };\n\n  const handleSaveMonthlyPresence = async () => {\n    const dataHasChanged = isMonthDataChanged();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n  \n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n    const allDaysOfMonth = Array.from({ length: daysInMonth }, (_, i) => {\n      const day = new Date(year, month, i + 1);\n      return day.toLocaleDateString('en-CA');});\n      \n    if (!dataHasChanged) {\n      const confirmSubmit = window.confirm(\n        \"No changes detected. Do you want to submit the presence data with default values?\"\n      );\n      if (!confirmSubmit) return;\n\n    }\n\n    const presenceDataList = allDaysOfMonth.map(day => {\n      const savedData = monthlyPresenceData[day] || dailyPresence.find(p => p.date === day) || {\n        ...defaultTimes,\n        national_holiday: false,\n        weekend: [0, 6].includes(new Date(day).getDay()),  // Mark weekends as true\n        day_off: false,\n        time_off: \"00:00\",\n        extra_hours: \"00:00\",\n        illness: \"\",\n        notes: \"\",\n      };\n  \n      return {\n        ...savedData,\n        employee_id: userId,\n        date: day,\n        time_off: savedData.time_off || \"00:00\",\n        extra_hours: savedData.extra_hours || \"00:00\",\n      };\n    });\n\n\n    try {\n      await axios.post(\n        `http://localhost:8000/employee-dashboard?user_id=${userId}`,\n        presenceDataList\n      );\n      alert('Monthly presence data saved successfully!');\n    } catch (error) {\n      console.error(\"Error saving monthly presence data:\", error);\n      alert(\"There was an error saving the data. Please try again.\");\n    }\n  };\n\n  \n\n  const handleDefaultHoursSave = async () => {\n    const defaultHoursData = {\n      user_id: userId,\n      submitted_by_id: userId,\n      entry_time_morning: defaultTimes.entry_time_morning,\n      exit_time_morning: defaultTimes.exit_time_morning,\n      entry_time_afternoon: defaultTimes.entry_time_afternoon,\n      exit_time_afternoon: defaultTimes.exit_time_afternoon,\n    };\n\n    try {\n      const response = await axios.get('http://localhost:8000/get-default-hours', {\n        params: { user_id: userId, submitted_by_id: userId }\n      });\n\n      if (response.data) {\n        await axios.put('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours updated successfully!');\n      } else {\n        await axios.post('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours saved successfully!');\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        // Handle the case where no data was found (404)\n        await axios.post('http://localhost:8000/default-hours', defaultHoursData);\n        alert('Default hours saved successfully!');\n      } else {\n        console.error(\"Error saving default hours:\", error);\n        alert(\"Error occurred while saving default hours.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"calendar-container\">\n      <h1>Monthly Presence Tracker</h1>\n      {/* Sign Out Button */}\n      <button onClick={handleSignOut} className=\"sign-out-button\">Sign Out</button>\n      {error && <p className=\"error-message\">{error}</p>}\n      <Calendar\n        onChange={setDate}\n        value={date}\n        onActiveStartDateChange={({ activeStartDate }) => handleMonthChange(activeStartDate)}\n        tileContent={({ date }) => {\n          const dayString = date.toLocaleDateString('en-CA');\n          const hasCustomData = isDataChanged(dayString);\n          return (\n            <div onClick={() => openPopup(date)}\n                 style={{width: '100%',\n                   height: '100%',\n                   display: 'flex',\n                   alignItems: 'center',\n                   justifyContent: 'center',\n                   zIndex: 1,\n                   cursor: 'pointer', }}>\n                   {hasCustomData ? '✔' : 'default'}\n                 </div>\n              );\n        }}\n        view=\"month\"\n      />\n\n      {showPopup && selectedDay && (\n        <div className=\"popup\">\n          <h2>Edit Presence for {selectedDay.toDateString()}</h2>\n          <div>\n            <label>Morning Entry:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.entry_time_morning || ''}\n              onChange={(e) => handlePresenceChange('entry_time_morning', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Morning Exit:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.exit_time_morning || ''}\n              onChange={(e) => handlePresenceChange('exit_time_morning', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Afternoon Entry:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.entry_time_afternoon || ''}\n              onChange={(e) => handlePresenceChange('entry_time_afternoon', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Afternoon Exit:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.exit_time_afternoon || ''}\n              onChange={(e) => handlePresenceChange('exit_time_afternoon', e.target.value)}\n            />\n          </div>\n\n          <div>\n            <label>National Holiday:</label>\n            <input\n              type=\"checkbox\"\n              checked={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.national_holiday || false}\n              onChange={(e) => handlePresenceChange('national_holiday', e.target.checked)}\n            />\n          </div>\n          <div>\n            <label>Weekend:</label>\n            <input\n              type=\"checkbox\"\n              checked={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.weekend || false}\n              onChange={(e) => handlePresenceChange('weekend', e.target.checked)}\n            />\n          </div>\n          <div>\n            <label>Day Off:</label>\n            <input\n              type=\"checkbox\"\n              checked={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.day_off || false}\n              onChange={(e) => handlePresenceChange('day_off', e.target.checked)}\n            />\n          </div>\n          <div>\n            <label>Time Off:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.time_off || ''}\n              onChange={(e) => handlePresenceChange('time_off', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Extra hours:</label>\n            <input\n              type=\"time\"\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.extra_hours || ''}\n              onChange={(e) => handlePresenceChange('extra_hours', e.target.value)}\n            />\n          </div>\n            <div>\n            <label>Illness Certificate NO.:</label>\n            <textarea\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.illness || ''}\n              onChange={(e) => handlePresenceChange('notes', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Notes:</label>\n            <textarea\n              value={monthlyPresenceData[selectedDay.toLocaleDateString('en-CA')]?.notes || ''}\n              onChange={(e) => handlePresenceChange('notes', e.target.value)}\n            />\n          </div>\n          <button onClick={closePopup}>Close</button>\n        </div>\n      )}\n\n      <div className=\"default-times\">\n              <h2>Default Times</h2>\n              <div>\n                <label>Morning Entry:</label>\n                <input\n                  type=\"time\"\n                  value={defaultTimes.entry_time_morning}\n                  onChange={(e) => setDefaultTimes({ ...defaultTimes, entry_time_morning: e.target.value })}\n                />\n              </div>\n              <div>\n                <label>Morning Exit:</label>\n                <input\n                  type=\"time\"\n                  value={defaultTimes.exit_time_morning}\n                  onChange={(e) => setDefaultTimes({ ...defaultTimes, exit_time_morning: e.target.value })}\n                />\n              </div>\n              <div>\n                <label>Afternoon Entry:</label>\n                <input\n                  type=\"time\"\n                  value={defaultTimes.entry_time_afternoon}\n                  onChange={(e) => setDefaultTimes({ ...defaultTimes, entry_time_afternoon: e.target.value })}\n                />\n              </div>\n              <div>\n                <label>Afternoon Exit:</label>\n                <input\n                  type=\"time\"\n                  value={defaultTimes.exit_time_afternoon}\n                  onChange={(e) => setDefaultTimes({ ...defaultTimes, exit_time_afternoon: e.target.value })}\n                />\n              </div>\n              <button className=\"save-button\" onClick={handleSaveMonthlyPresence}>Save Presence for Month</button>\n              <button className=\"default-hours-button\" onClick={handleDefaultHoursSave}>Save Default Hours</button>\n            </div>\n          </div>\n  );\n};\n\nexport default CalendarComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}