{"ast":null,"code":"// src/js/intl-tel-input/data.ts\nvar rawCountryData = [[\"af\",\n// Afghanistan\n\"93\"], [\"ax\",\n// Åland Islands\n\"358\", 1], [\"al\",\n// Albania\n\"355\"], [\"dz\",\n// Algeria\n\"213\"], [\"as\",\n// American Samoa\n\"1\", 5, [\"684\"]], [\"ad\",\n// Andorra\n\"376\"], [\"ao\",\n// Angola\n\"244\"], [\"ai\",\n// Anguilla\n\"1\", 6, [\"264\"]], [\"ag\",\n// Antigua and Barbuda\n\"1\", 7, [\"268\"]], [\"ar\",\n// Argentina\n\"54\"], [\"am\",\n// Armenia\n\"374\"], [\"aw\",\n// Aruba\n\"297\"], [\"ac\",\n// Ascension Island\n\"247\"], [\"au\",\n// Australia\n\"61\", 0, null, \"0\"], [\"at\",\n// Austria\n\"43\"], [\"az\",\n// Azerbaijan\n\"994\"], [\"bs\",\n// Bahamas\n\"1\", 8, [\"242\"]], [\"bh\",\n// Bahrain\n\"973\"], [\"bd\",\n// Bangladesh\n\"880\"], [\"bb\",\n// Barbados\n\"1\", 9, [\"246\"]], [\"by\",\n// Belarus\n\"375\"], [\"be\",\n// Belgium\n\"32\"], [\"bz\",\n// Belize\n\"501\"], [\"bj\",\n// Benin\n\"229\"], [\"bm\",\n// Bermuda\n\"1\", 10, [\"441\"]], [\"bt\",\n// Bhutan\n\"975\"], [\"bo\",\n// Bolivia\n\"591\"], [\"ba\",\n// Bosnia and Herzegovina\n\"387\"], [\"bw\",\n// Botswana\n\"267\"], [\"br\",\n// Brazil\n\"55\"], [\"io\",\n// British Indian Ocean Territory\n\"246\"], [\"vg\",\n// British Virgin Islands\n\"1\", 11, [\"284\"]], [\"bn\",\n// Brunei\n\"673\"], [\"bg\",\n// Bulgaria\n\"359\"], [\"bf\",\n// Burkina Faso\n\"226\"], [\"bi\",\n// Burundi\n\"257\"], [\"kh\",\n// Cambodia\n\"855\"], [\"cm\",\n// Cameroon\n\"237\"], [\"ca\",\n// Canada\n\"1\", 1, [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"879\", \"902\", \"905\"]], [\"cv\",\n// Cape Verde\n\"238\"], [\"bq\",\n// Caribbean Netherlands\n\"599\", 1, [\"3\", \"4\", \"7\"]], [\"ky\",\n// Cayman Islands\n\"1\", 12, [\"345\"]], [\"cf\",\n// Central African Republic\n\"236\"], [\"td\",\n// Chad\n\"235\"], [\"cl\",\n// Chile\n\"56\"], [\"cn\",\n// China\n\"86\"], [\"cx\",\n// Christmas Island\n\"61\", 2, [\"89164\"], \"0\"], [\"cc\",\n// Cocos (Keeling) Islands\n\"61\", 1, [\"89162\"], \"0\"], [\"co\",\n// Colombia\n\"57\"], [\"km\",\n// Comoros\n\"269\"], [\"cg\",\n// Congo (Brazzaville)\n\"242\"], [\"cd\",\n// Congo (Kinshasa)\n\"243\"], [\"ck\",\n// Cook Islands\n\"682\"], [\"cr\",\n// Costa Rica\n\"506\"], [\"ci\",\n// Côte d'Ivoire\n\"225\"], [\"hr\",\n// Croatia\n\"385\"], [\"cu\",\n// Cuba\n\"53\"], [\"cw\",\n// Curaçao\n\"599\", 0], [\"cy\",\n// Cyprus\n\"357\"], [\"cz\",\n// Czech Republic\n\"420\"], [\"dk\",\n// Denmark\n\"45\"], [\"dj\",\n// Djibouti\n\"253\"], [\"dm\",\n// Dominica\n\"1\", 13, [\"767\"]], [\"do\",\n// Dominican Republic\n\"1\", 2, [\"809\", \"829\", \"849\"]], [\"ec\",\n// Ecuador\n\"593\"], [\"eg\",\n// Egypt\n\"20\"], [\"sv\",\n// El Salvador\n\"503\"], [\"gq\",\n// Equatorial Guinea\n\"240\"], [\"er\",\n// Eritrea\n\"291\"], [\"ee\",\n// Estonia\n\"372\"], [\"sz\",\n// Eswatini\n\"268\"], [\"et\",\n// Ethiopia\n\"251\"], [\"fk\",\n// Falkland Islands (Malvinas)\n\"500\"], [\"fo\",\n// Faroe Islands\n\"298\"], [\"fj\",\n// Fiji\n\"679\"], [\"fi\",\n// Finland\n\"358\", 0], [\"fr\",\n// France\n\"33\"], [\"gf\",\n// French Guiana\n\"594\"], [\"pf\",\n// French Polynesia\n\"689\"], [\"ga\",\n// Gabon\n\"241\"], [\"gm\",\n// Gambia\n\"220\"], [\"ge\",\n// Georgia\n\"995\"], [\"de\",\n// Germany\n\"49\"], [\"gh\",\n// Ghana\n\"233\"], [\"gi\",\n// Gibraltar\n\"350\"], [\"gr\",\n// Greece\n\"30\"], [\"gl\",\n// Greenland\n\"299\"], [\"gd\",\n// Grenada\n\"1\", 14, [\"473\"]], [\"gp\",\n// Guadeloupe\n\"590\", 0], [\"gu\",\n// Guam\n\"1\", 15, [\"671\"]], [\"gt\",\n// Guatemala\n\"502\"], [\"gg\",\n// Guernsey\n\"44\", 1, [\"1481\", \"7781\", \"7839\", \"7911\"], \"0\"], [\"gn\",\n// Guinea\n\"224\"], [\"gw\",\n// Guinea-Bissau\n\"245\"], [\"gy\",\n// Guyana\n\"592\"], [\"ht\",\n// Haiti\n\"509\"], [\"hn\",\n// Honduras\n\"504\"], [\"hk\",\n// Hong Kong SAR China\n\"852\"], [\"hu\",\n// Hungary\n\"36\"], [\"is\",\n// Iceland\n\"354\"], [\"in\",\n// India\n\"91\"], [\"id\",\n// Indonesia\n\"62\"], [\"ir\",\n// Iran\n\"98\"], [\"iq\",\n// Iraq\n\"964\"], [\"ie\",\n// Ireland\n\"353\"], [\"im\",\n// Isle of Man\n\"44\", 2, [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"], \"0\"], [\"il\",\n// Israel\n\"972\"], [\"it\",\n// Italy\n\"39\", 0], [\"jm\",\n// Jamaica\n\"1\", 4, [\"876\", \"658\"]], [\"jp\",\n// Japan\n\"81\"], [\"je\",\n// Jersey\n\"44\", 3, [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"], \"0\"], [\"jo\",\n// Jordan\n\"962\"], [\"kz\",\n// Kazakhstan\n\"7\", 1, [\"33\", \"7\"], \"8\"], [\"ke\",\n// Kenya\n\"254\"], [\"ki\",\n// Kiribati\n\"686\"], [\"xk\",\n// Kosovo\n\"383\"], [\"kw\",\n// Kuwait\n\"965\"], [\"kg\",\n// Kyrgyzstan\n\"996\"], [\"la\",\n// Laos\n\"856\"], [\"lv\",\n// Latvia\n\"371\"], [\"lb\",\n// Lebanon\n\"961\"], [\"ls\",\n// Lesotho\n\"266\"], [\"lr\",\n// Liberia\n\"231\"], [\"ly\",\n// Libya\n\"218\"], [\"li\",\n// Liechtenstein\n\"423\"], [\"lt\",\n// Lithuania\n\"370\"], [\"lu\",\n// Luxembourg\n\"352\"], [\"mo\",\n// Macao SAR China\n\"853\"], [\"mg\",\n// Madagascar\n\"261\"], [\"mw\",\n// Malawi\n\"265\"], [\"my\",\n// Malaysia\n\"60\"], [\"mv\",\n// Maldives\n\"960\"], [\"ml\",\n// Mali\n\"223\"], [\"mt\",\n// Malta\n\"356\"], [\"mh\",\n// Marshall Islands\n\"692\"], [\"mq\",\n// Martinique\n\"596\"], [\"mr\",\n// Mauritania\n\"222\"], [\"mu\",\n// Mauritius\n\"230\"], [\"yt\",\n// Mayotte\n\"262\", 1, [\"269\", \"639\"], \"0\"], [\"mx\",\n// Mexico\n\"52\"], [\"fm\",\n// Micronesia\n\"691\"], [\"md\",\n// Moldova\n\"373\"], [\"mc\",\n// Monaco\n\"377\"], [\"mn\",\n// Mongolia\n\"976\"], [\"me\",\n// Montenegro\n\"382\"], [\"ms\",\n// Montserrat\n\"1\", 16, [\"664\"]], [\"ma\",\n// Morocco\n\"212\", 0, null, \"0\"], [\"mz\",\n// Mozambique\n\"258\"], [\"mm\",\n// Myanmar (Burma)\n\"95\"], [\"na\",\n// Namibia\n\"264\"], [\"nr\",\n// Nauru\n\"674\"], [\"np\",\n// Nepal\n\"977\"], [\"nl\",\n// Netherlands\n\"31\"], [\"nc\",\n// New Caledonia\n\"687\"], [\"nz\",\n// New Zealand\n\"64\"], [\"ni\",\n// Nicaragua\n\"505\"], [\"ne\",\n// Niger\n\"227\"], [\"ng\",\n// Nigeria\n\"234\"], [\"nu\",\n// Niue\n\"683\"], [\"nf\",\n// Norfolk Island\n\"672\"], [\"kp\",\n// North Korea\n\"850\"], [\"mk\",\n// North Macedonia\n\"389\"], [\"mp\",\n// Northern Mariana Islands\n\"1\", 17, [\"670\"]], [\"no\",\n// Norway\n\"47\", 0], [\"om\",\n// Oman\n\"968\"], [\"pk\",\n// Pakistan\n\"92\"], [\"pw\",\n// Palau\n\"680\"], [\"ps\",\n// Palestinian Territories\n\"970\"], [\"pa\",\n// Panama\n\"507\"], [\"pg\",\n// Papua New Guinea\n\"675\"], [\"py\",\n// Paraguay\n\"595\"], [\"pe\",\n// Peru\n\"51\"], [\"ph\",\n// Philippines\n\"63\"], [\"pl\",\n// Poland\n\"48\"], [\"pt\",\n// Portugal\n\"351\"], [\"pr\",\n// Puerto Rico\n\"1\", 3, [\"787\", \"939\"]], [\"qa\",\n// Qatar\n\"974\"], [\"re\",\n// Réunion\n\"262\", 0, null, \"0\"], [\"ro\",\n// Romania\n\"40\"], [\"ru\",\n// Russia\n\"7\", 0, null, \"8\"], [\"rw\",\n// Rwanda\n\"250\"], [\"ws\",\n// Samoa\n\"685\"], [\"sm\",\n// San Marino\n\"378\"], [\"st\",\n// São Tomé & Príncipe\n\"239\"], [\"sa\",\n// Saudi Arabia\n\"966\"], [\"sn\",\n// Senegal\n\"221\"], [\"rs\",\n// Serbia\n\"381\"], [\"sc\",\n// Seychelles\n\"248\"], [\"sl\",\n// Sierra Leone\n\"232\"], [\"sg\",\n// Singapore\n\"65\"], [\"sx\",\n// Sint Maarten\n\"1\", 21, [\"721\"]], [\"sk\",\n// Slovakia\n\"421\"], [\"si\",\n// Slovenia\n\"386\"], [\"sb\",\n// Solomon Islands\n\"677\"], [\"so\",\n// Somalia\n\"252\"], [\"za\",\n// South Africa\n\"27\"], [\"kr\",\n// South Korea\n\"82\"], [\"ss\",\n// South Sudan\n\"211\"], [\"es\",\n// Spain\n\"34\"], [\"lk\",\n// Sri Lanka\n\"94\"], [\"bl\",\n// St. Barthélemy\n\"590\", 1], [\"sh\",\n// St. Helena\n\"290\"], [\"kn\",\n// St. Kitts & Nevis\n\"1\", 18, [\"869\"]], [\"lc\",\n// St. Lucia\n\"1\", 19, [\"758\"]], [\"mf\",\n// St. Martin\n\"590\", 2], [\"pm\",\n// St. Pierre & Miquelon\n\"508\"], [\"vc\",\n// St. Vincent & Grenadines\n\"1\", 20, [\"784\"]], [\"sd\",\n// Sudan\n\"249\"], [\"sr\",\n// Suriname\n\"597\"], [\"sj\",\n// Svalbard & Jan Mayen\n\"47\", 1, [\"79\"]], [\"se\",\n// Sweden\n\"46\"], [\"ch\",\n// Switzerland\n\"41\"], [\"sy\",\n// Syria\n\"963\"], [\"tw\",\n// Taiwan\n\"886\"], [\"tj\",\n// Tajikistan\n\"992\"], [\"tz\",\n// Tanzania\n\"255\"], [\"th\",\n// Thailand\n\"66\"], [\"tl\",\n// Timor-Leste\n\"670\"], [\"tg\",\n// Togo\n\"228\"], [\"tk\",\n// Tokelau\n\"690\"], [\"to\",\n// Tonga\n\"676\"], [\"tt\",\n// Trinidad & Tobago\n\"1\", 22, [\"868\"]], [\"tn\",\n// Tunisia\n\"216\"], [\"tr\",\n// Turkey\n\"90\"], [\"tm\",\n// Turkmenistan\n\"993\"], [\"tc\",\n// Turks & Caicos Islands\n\"1\", 23, [\"649\"]], [\"tv\",\n// Tuvalu\n\"688\"], [\"ug\",\n// Uganda\n\"256\"], [\"ua\",\n// Ukraine\n\"380\"], [\"ae\",\n// United Arab Emirates\n\"971\"], [\"gb\",\n// United Kingdom\n\"44\", 0, null, \"0\"], [\"us\",\n// United States\n\"1\", 0], [\"uy\",\n// Uruguay\n\"598\"], [\"vi\",\n// U.S. Virgin Islands\n\"1\", 24, [\"340\"]], [\"uz\",\n// Uzbekistan\n\"998\"], [\"vu\",\n// Vanuatu\n\"678\"], [\"va\",\n// Vatican City\n\"39\", 1, [\"06698\"]], [\"ve\",\n// Venezuela\n\"58\"], [\"vn\",\n// Vietnam\n\"84\"], [\"wf\",\n// Wallis & Futuna\n\"681\"], [\"eh\",\n// Western Sahara\n\"212\", 1, [\"5288\", \"5289\"], \"0\"], [\"ye\",\n// Yemen\n\"967\"], [\"zm\",\n// Zambia\n\"260\"], [\"zw\",\n// Zimbabwe\n\"263\"]];\nvar allCountries = [];\nfor (let i = 0; i < rawCountryData.length; i++) {\n  const c = rawCountryData[i];\n  allCountries[i] = {\n    name: \"\",\n    // this is now populated in the plugin\n    iso2: c[0],\n    dialCode: c[1],\n    priority: c[2] || 0,\n    areaCodes: c[3] || null,\n    nodeById: {},\n    nationalPrefix: c[4] || null\n  };\n}\nvar data_default = allCountries;\n\n// src/js/intl-tel-input/i18n/en/countries.ts\nvar countryTranslations = {\n  ad: \"Andorra\",\n  ae: \"United Arab Emirates\",\n  af: \"Afghanistan\",\n  ag: \"Antigua & Barbuda\",\n  ai: \"Anguilla\",\n  al: \"Albania\",\n  am: \"Armenia\",\n  ao: \"Angola\",\n  ar: \"Argentina\",\n  as: \"American Samoa\",\n  at: \"Austria\",\n  au: \"Australia\",\n  aw: \"Aruba\",\n  ax: \"\\xC5land Islands\",\n  az: \"Azerbaijan\",\n  ba: \"Bosnia & Herzegovina\",\n  bb: \"Barbados\",\n  bd: \"Bangladesh\",\n  be: \"Belgium\",\n  bf: \"Burkina Faso\",\n  bg: \"Bulgaria\",\n  bh: \"Bahrain\",\n  bi: \"Burundi\",\n  bj: \"Benin\",\n  bl: \"St. Barth\\xE9lemy\",\n  bm: \"Bermuda\",\n  bn: \"Brunei\",\n  bo: \"Bolivia\",\n  bq: \"Caribbean Netherlands\",\n  br: \"Brazil\",\n  bs: \"Bahamas\",\n  bt: \"Bhutan\",\n  bw: \"Botswana\",\n  by: \"Belarus\",\n  bz: \"Belize\",\n  ca: \"Canada\",\n  cc: \"Cocos (Keeling) Islands\",\n  cd: \"Congo - Kinshasa\",\n  cf: \"Central African Republic\",\n  cg: \"Congo - Brazzaville\",\n  ch: \"Switzerland\",\n  ci: \"C\\xF4te d\\u2019Ivoire\",\n  ck: \"Cook Islands\",\n  cl: \"Chile\",\n  cm: \"Cameroon\",\n  cn: \"China\",\n  co: \"Colombia\",\n  cr: \"Costa Rica\",\n  cu: \"Cuba\",\n  cv: \"Cape Verde\",\n  cw: \"Cura\\xE7ao\",\n  cx: \"Christmas Island\",\n  cy: \"Cyprus\",\n  cz: \"Czechia\",\n  de: \"Germany\",\n  dj: \"Djibouti\",\n  dk: \"Denmark\",\n  dm: \"Dominica\",\n  do: \"Dominican Republic\",\n  dz: \"Algeria\",\n  ec: \"Ecuador\",\n  ee: \"Estonia\",\n  eg: \"Egypt\",\n  eh: \"Western Sahara\",\n  er: \"Eritrea\",\n  es: \"Spain\",\n  et: \"Ethiopia\",\n  fi: \"Finland\",\n  fj: \"Fiji\",\n  fk: \"Falkland Islands\",\n  fm: \"Micronesia\",\n  fo: \"Faroe Islands\",\n  fr: \"France\",\n  ga: \"Gabon\",\n  gb: \"United Kingdom\",\n  gd: \"Grenada\",\n  ge: \"Georgia\",\n  gf: \"French Guiana\",\n  gg: \"Guernsey\",\n  gh: \"Ghana\",\n  gi: \"Gibraltar\",\n  gl: \"Greenland\",\n  gm: \"Gambia\",\n  gn: \"Guinea\",\n  gp: \"Guadeloupe\",\n  gq: \"Equatorial Guinea\",\n  gr: \"Greece\",\n  gt: \"Guatemala\",\n  gu: \"Guam\",\n  gw: \"Guinea-Bissau\",\n  gy: \"Guyana\",\n  hk: \"Hong Kong SAR China\",\n  hn: \"Honduras\",\n  hr: \"Croatia\",\n  ht: \"Haiti\",\n  hu: \"Hungary\",\n  id: \"Indonesia\",\n  ie: \"Ireland\",\n  il: \"Israel\",\n  im: \"Isle of Man\",\n  in: \"India\",\n  io: \"British Indian Ocean Territory\",\n  iq: \"Iraq\",\n  ir: \"Iran\",\n  is: \"Iceland\",\n  it: \"Italy\",\n  je: \"Jersey\",\n  jm: \"Jamaica\",\n  jo: \"Jordan\",\n  jp: \"Japan\",\n  ke: \"Kenya\",\n  kg: \"Kyrgyzstan\",\n  kh: \"Cambodia\",\n  ki: \"Kiribati\",\n  km: \"Comoros\",\n  kn: \"St. Kitts & Nevis\",\n  kp: \"North Korea\",\n  kr: \"South Korea\",\n  kw: \"Kuwait\",\n  ky: \"Cayman Islands\",\n  kz: \"Kazakhstan\",\n  la: \"Laos\",\n  lb: \"Lebanon\",\n  lc: \"St. Lucia\",\n  li: \"Liechtenstein\",\n  lk: \"Sri Lanka\",\n  lr: \"Liberia\",\n  ls: \"Lesotho\",\n  lt: \"Lithuania\",\n  lu: \"Luxembourg\",\n  lv: \"Latvia\",\n  ly: \"Libya\",\n  ma: \"Morocco\",\n  mc: \"Monaco\",\n  md: \"Moldova\",\n  me: \"Montenegro\",\n  mf: \"St. Martin\",\n  mg: \"Madagascar\",\n  mh: \"Marshall Islands\",\n  mk: \"North Macedonia\",\n  ml: \"Mali\",\n  mm: \"Myanmar (Burma)\",\n  mn: \"Mongolia\",\n  mo: \"Macao SAR China\",\n  mp: \"Northern Mariana Islands\",\n  mq: \"Martinique\",\n  mr: \"Mauritania\",\n  ms: \"Montserrat\",\n  mt: \"Malta\",\n  mu: \"Mauritius\",\n  mv: \"Maldives\",\n  mw: \"Malawi\",\n  mx: \"Mexico\",\n  my: \"Malaysia\",\n  mz: \"Mozambique\",\n  na: \"Namibia\",\n  nc: \"New Caledonia\",\n  ne: \"Niger\",\n  nf: \"Norfolk Island\",\n  ng: \"Nigeria\",\n  ni: \"Nicaragua\",\n  nl: \"Netherlands\",\n  no: \"Norway\",\n  np: \"Nepal\",\n  nr: \"Nauru\",\n  nu: \"Niue\",\n  nz: \"New Zealand\",\n  om: \"Oman\",\n  pa: \"Panama\",\n  pe: \"Peru\",\n  pf: \"French Polynesia\",\n  pg: \"Papua New Guinea\",\n  ph: \"Philippines\",\n  pk: \"Pakistan\",\n  pl: \"Poland\",\n  pm: \"St. Pierre & Miquelon\",\n  pr: \"Puerto Rico\",\n  ps: \"Palestinian Territories\",\n  pt: \"Portugal\",\n  pw: \"Palau\",\n  py: \"Paraguay\",\n  qa: \"Qatar\",\n  re: \"R\\xE9union\",\n  ro: \"Romania\",\n  rs: \"Serbia\",\n  ru: \"Russia\",\n  rw: \"Rwanda\",\n  sa: \"Saudi Arabia\",\n  sb: \"Solomon Islands\",\n  sc: \"Seychelles\",\n  sd: \"Sudan\",\n  se: \"Sweden\",\n  sg: \"Singapore\",\n  sh: \"St. Helena\",\n  si: \"Slovenia\",\n  sj: \"Svalbard & Jan Mayen\",\n  sk: \"Slovakia\",\n  sl: \"Sierra Leone\",\n  sm: \"San Marino\",\n  sn: \"Senegal\",\n  so: \"Somalia\",\n  sr: \"Suriname\",\n  ss: \"South Sudan\",\n  st: \"S\\xE3o Tom\\xE9 & Pr\\xEDncipe\",\n  sv: \"El Salvador\",\n  sx: \"Sint Maarten\",\n  sy: \"Syria\",\n  sz: \"Eswatini\",\n  tc: \"Turks & Caicos Islands\",\n  td: \"Chad\",\n  tg: \"Togo\",\n  th: \"Thailand\",\n  tj: \"Tajikistan\",\n  tk: \"Tokelau\",\n  tl: \"Timor-Leste\",\n  tm: \"Turkmenistan\",\n  tn: \"Tunisia\",\n  to: \"Tonga\",\n  tr: \"Turkey\",\n  tt: \"Trinidad & Tobago\",\n  tv: \"Tuvalu\",\n  tw: \"Taiwan\",\n  tz: \"Tanzania\",\n  ua: \"Ukraine\",\n  ug: \"Uganda\",\n  us: \"United States\",\n  uy: \"Uruguay\",\n  uz: \"Uzbekistan\",\n  va: \"Vatican City\",\n  vc: \"St. Vincent & Grenadines\",\n  ve: \"Venezuela\",\n  vg: \"British Virgin Islands\",\n  vi: \"U.S. Virgin Islands\",\n  vn: \"Vietnam\",\n  vu: \"Vanuatu\",\n  wf: \"Wallis & Futuna\",\n  ws: \"Samoa\",\n  ye: \"Yemen\",\n  yt: \"Mayotte\",\n  za: \"South Africa\",\n  zm: \"Zambia\",\n  zw: \"Zimbabwe\"\n};\nvar countries_default = countryTranslations;\n\n// src/js/intl-tel-input/i18n/en/interface.ts\nvar interfaceTranslations = {\n  selectedCountryAriaLabel: \"Selected country\",\n  noCountrySelected: \"No country selected\",\n  countryListAriaLabel: \"List of countries\",\n  searchPlaceholder: \"Search\",\n  zeroSearchResults: \"No results found\",\n  oneSearchResult: \"1 result found\",\n  multipleSearchResults: \"${count} results found\",\n  // additional countries (not supported by country-list library)\n  ac: \"Ascension Island\",\n  xk: \"Kosovo\"\n};\nvar interface_default = interfaceTranslations;\n\n// src/js/intl-tel-input/i18n/en/index.ts\nvar allTranslations = {\n  ...countries_default,\n  ...interface_default\n};\nvar en_default = allTranslations;\n\n// src/js/intl-tel-input.ts\nfor (let i = 0; i < data_default.length; i++) {\n  data_default[i].name = en_default[data_default[i].iso2];\n}\nvar id = 0;\nvar defaults = {\n  //* Whether or not to allow the dropdown.\n  allowDropdown: true,\n  //* Add a placeholder in the input with an example number for the selected country.\n  autoPlaceholder: \"polite\",\n  //* Modify the parentClass.\n  containerClass: \"\",\n  //* The order of the countries in the dropdown. Defaults to alphabetical.\n  countryOrder: null,\n  //* Add a country search input at the top of the dropdown.\n  countrySearch: true,\n  //* Modify the auto placeholder.\n  customPlaceholder: null,\n  //* Append menu to specified element.\n  dropdownContainer: null,\n  //* Don't display these countries.\n  excludeCountries: [],\n  //* Fix the dropdown width to the input width (rather than being as wide as the longest country name).\n  fixDropdownWidth: true,\n  //* Format the number as the user types\n  formatAsYouType: true,\n  //* Format the input value during initialisation and on setNumber.\n  formatOnDisplay: true,\n  //* geoIp lookup function.\n  geoIpLookup: null,\n  //* Inject a hidden input with the name returned from this function, and on submit, populate it with the result of getNumber.\n  hiddenInput: null,\n  //* Internationalise the plugin text e.g. search input placeholder, country names.\n  i18n: {},\n  //* Initial country.\n  initialCountry: \"\",\n  //* A function to load the utils script.\n  loadUtils: null,\n  //* National vs international formatting for numbers e.g. placeholders and displaying existing numbers.\n  nationalMode: true,\n  //* Display only these countries.\n  onlyCountries: [],\n  //* Number type to use for placeholders.\n  placeholderNumberType: \"MOBILE\",\n  //* Show flags - for both the selected country, and in the country dropdown\n  showFlags: true,\n  //* Display the international dial code next to the selected flag.\n  separateDialCode: false,\n  //* Only allow certain chars e.g. a plus followed by numeric digits, and cap at max valid length.\n  strictMode: false,\n  //* Use full screen popup instead of dropdown for country list.\n  useFullscreenPopup: typeof navigator !== \"undefined\" && typeof window !== \"undefined\" ?\n  //* We cannot just test screen size as some smartphones/website meta tags will report desktop resolutions.\n  //* Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n  /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 500 : false,\n  //* The number type to enforce during validation.\n  validationNumberTypes: [\"MOBILE\"]\n};\nvar regionlessNanpNumbers = [\"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\"];\nvar getNumeric = s => s.replace(/\\D/g, \"\");\nvar normaliseString = (s = \"\") => s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\nvar isRegionlessNanp = number => {\n  const numeric = getNumeric(number);\n  if (numeric.charAt(0) === \"1\") {\n    const areaCode = numeric.substr(1, 3);\n    return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n  }\n  return false;\n};\nvar translateCursorPosition = (relevantChars, formattedValue, prevCaretPos, isDeleteForwards) => {\n  if (prevCaretPos === 0 && !isDeleteForwards) {\n    return 0;\n  }\n  let count = 0;\n  for (let i = 0; i < formattedValue.length; i++) {\n    if (/[+0-9]/.test(formattedValue[i])) {\n      count++;\n    }\n    if (count === relevantChars && !isDeleteForwards) {\n      return i + 1;\n    }\n    if (isDeleteForwards && count === relevantChars + 1) {\n      return i;\n    }\n  }\n  return formattedValue.length;\n};\nvar createEl = (name, attrs, container) => {\n  const el = document.createElement(name);\n  if (attrs) {\n    Object.entries(attrs).forEach(([key, value]) => el.setAttribute(key, value));\n  }\n  if (container) {\n    container.appendChild(el);\n  }\n  return el;\n};\nvar forEachInstance = (method, ...args) => {\n  const {\n    instances\n  } = intlTelInput;\n  Object.values(instances).forEach(instance => instance[method](...args));\n};\nvar Iti = class {\n  constructor(input, customOptions = {}) {\n    this.id = id++;\n    this.telInput = input;\n    this.highlightedItem = null;\n    this.options = Object.assign({}, defaults, customOptions);\n    this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n  }\n  //* Can't be private as it's called from intlTelInput convenience wrapper.\n  _init() {\n    if (this.options.useFullscreenPopup) {\n      this.options.fixDropdownWidth = false;\n    }\n    if (this.options.onlyCountries.length === 1) {\n      this.options.initialCountry = this.options.onlyCountries[0];\n    }\n    if (this.options.separateDialCode) {\n      this.options.nationalMode = false;\n    }\n    if (this.options.allowDropdown && !this.options.showFlags && !this.options.separateDialCode) {\n      this.options.nationalMode = false;\n    }\n    if (this.options.useFullscreenPopup && !this.options.dropdownContainer) {\n      this.options.dropdownContainer = document.body;\n    }\n    this.isAndroid = typeof navigator !== \"undefined\" ? /Android/i.test(navigator.userAgent) : false;\n    this.isRTL = !!this.telInput.closest(\"[dir=rtl]\");\n    const showOnDefaultSide = this.options.allowDropdown || this.options.separateDialCode;\n    this.showSelectedCountryOnLeft = this.isRTL ? !showOnDefaultSide : showOnDefaultSide;\n    if (this.options.separateDialCode) {\n      if (this.isRTL) {\n        this.originalPaddingRight = this.telInput.style.paddingRight;\n      } else {\n        this.originalPaddingLeft = this.telInput.style.paddingLeft;\n      }\n    }\n    this.options.i18n = {\n      ...en_default,\n      ...this.options.i18n\n    };\n    const autoCountryPromise = new Promise((resolve, reject) => {\n      this.resolveAutoCountryPromise = resolve;\n      this.rejectAutoCountryPromise = reject;\n    });\n    const utilsScriptPromise = new Promise((resolve, reject) => {\n      this.resolveUtilsScriptPromise = resolve;\n      this.rejectUtilsScriptPromise = reject;\n    });\n    this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);\n    this.selectedCountryData = {};\n    this._processCountryData();\n    this._generateMarkup();\n    this._setInitialState();\n    this._initListeners();\n    this._initRequests();\n  }\n  //********************\n  //*  PRIVATE METHODS\n  //********************\n  //* Prepare all of the country data, including onlyCountries, excludeCountries, countryOrder options.\n  _processCountryData() {\n    this._processAllCountries();\n    this._processDialCodes();\n    this._translateCountryNames();\n    this._sortCountries();\n  }\n  //* Sort countries by countryOrder option (if present), then name.\n  _sortCountries() {\n    if (this.options.countryOrder) {\n      this.options.countryOrder = this.options.countryOrder.map(country => country.toLowerCase());\n    }\n    this.countries.sort((a, b) => {\n      const {\n        countryOrder\n      } = this.options;\n      if (countryOrder) {\n        const aIndex = countryOrder.indexOf(a.iso2);\n        const bIndex = countryOrder.indexOf(b.iso2);\n        const aIndexExists = aIndex > -1;\n        const bIndexExists = bIndex > -1;\n        if (aIndexExists || bIndexExists) {\n          if (aIndexExists && bIndexExists) {\n            return aIndex - bIndex;\n          }\n          return aIndexExists ? -1 : 1;\n        }\n      }\n      return a.name.localeCompare(b.name);\n    });\n  }\n  //* Add a dial code to this.dialCodeToIso2Map.\n  _addToDialCodeMap(iso2, dialCode, priority) {\n    if (dialCode.length > this.dialCodeMaxLen) {\n      this.dialCodeMaxLen = dialCode.length;\n    }\n    if (!this.dialCodeToIso2Map.hasOwnProperty(dialCode)) {\n      this.dialCodeToIso2Map[dialCode] = [];\n    }\n    for (let i = 0; i < this.dialCodeToIso2Map[dialCode].length; i++) {\n      if (this.dialCodeToIso2Map[dialCode][i] === iso2) {\n        return;\n      }\n    }\n    const index = priority !== void 0 ? priority : this.dialCodeToIso2Map[dialCode].length;\n    this.dialCodeToIso2Map[dialCode][index] = iso2;\n  }\n  //* Process onlyCountries or excludeCountries array if present.\n  _processAllCountries() {\n    const {\n      onlyCountries,\n      excludeCountries\n    } = this.options;\n    if (onlyCountries.length) {\n      const lowerCaseOnlyCountries = onlyCountries.map(country => country.toLowerCase());\n      this.countries = data_default.filter(country => lowerCaseOnlyCountries.indexOf(country.iso2) > -1);\n    } else if (excludeCountries.length) {\n      const lowerCaseExcludeCountries = excludeCountries.map(country => country.toLowerCase());\n      this.countries = data_default.filter(country => lowerCaseExcludeCountries.indexOf(country.iso2) === -1);\n    } else {\n      this.countries = data_default;\n    }\n  }\n  //* Translate Countries by object literal provided on config.\n  _translateCountryNames() {\n    for (let i = 0; i < this.countries.length; i++) {\n      const iso2 = this.countries[i].iso2.toLowerCase();\n      if (this.options.i18n.hasOwnProperty(iso2)) {\n        this.countries[i].name = this.options.i18n[iso2];\n      }\n    }\n  }\n  //* Generate this.dialCodes and this.dialCodeToIso2Map.\n  _processDialCodes() {\n    this.dialCodes = {};\n    this.dialCodeMaxLen = 0;\n    this.dialCodeToIso2Map = {};\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      if (!this.dialCodes[c.dialCode]) {\n        this.dialCodes[c.dialCode] = true;\n      }\n      this._addToDialCodeMap(c.iso2, c.dialCode, c.priority);\n    }\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      if (c.areaCodes) {\n        const rootIso2Code = this.dialCodeToIso2Map[c.dialCode][0];\n        for (let j = 0; j < c.areaCodes.length; j++) {\n          const areaCode = c.areaCodes[j];\n          for (let k = 1; k < areaCode.length; k++) {\n            const partialAreaCode = areaCode.substr(0, k);\n            const partialDialCode = c.dialCode + partialAreaCode;\n            this._addToDialCodeMap(rootIso2Code, partialDialCode);\n            this._addToDialCodeMap(c.iso2, partialDialCode);\n          }\n          this._addToDialCodeMap(c.iso2, c.dialCode + areaCode);\n        }\n      }\n    }\n  }\n  //* Generate all of the markup for the plugin: the selected country overlay, and the dropdown.\n  _generateMarkup() {\n    this.telInput.classList.add(\"iti__tel-input\");\n    if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n      this.telInput.setAttribute(\"autocomplete\", \"off\");\n    }\n    const {\n      allowDropdown,\n      separateDialCode,\n      showFlags,\n      containerClass,\n      hiddenInput,\n      dropdownContainer,\n      fixDropdownWidth,\n      useFullscreenPopup,\n      countrySearch,\n      i18n\n    } = this.options;\n    let parentClass = \"iti\";\n    if (allowDropdown) {\n      parentClass += \" iti--allow-dropdown\";\n    }\n    if (showFlags) {\n      parentClass += \" iti--show-flags\";\n    }\n    if (containerClass) {\n      parentClass += ` ${containerClass}`;\n    }\n    if (!useFullscreenPopup) {\n      parentClass += \" iti--inline-dropdown\";\n    }\n    const wrapper = createEl(\"div\", {\n      class: parentClass\n    });\n    this.telInput.parentNode?.insertBefore(wrapper, this.telInput);\n    if (allowDropdown || showFlags || separateDialCode) {\n      this.countryContainer = createEl(\"div\", {\n        class: \"iti__country-container\"\n      }, wrapper);\n      if (this.showSelectedCountryOnLeft) {\n        this.countryContainer.style.left = \"0px\";\n      } else {\n        this.countryContainer.style.right = \"0px\";\n      }\n      if (allowDropdown) {\n        this.selectedCountry = createEl(\"button\", {\n          type: \"button\",\n          class: \"iti__selected-country\",\n          \"aria-expanded\": \"false\",\n          \"aria-label\": this.options.i18n.selectedCountryAriaLabel,\n          \"aria-haspopup\": \"true\",\n          \"aria-controls\": `iti-${this.id}__dropdown-content`,\n          \"role\": \"combobox\"\n        }, this.countryContainer);\n        if (this.telInput.disabled) {\n          this.selectedCountry.setAttribute(\"disabled\", \"true\");\n        }\n      } else {\n        this.selectedCountry = createEl(\"div\", {\n          class: \"iti__selected-country\"\n        }, this.countryContainer);\n      }\n      const selectedCountryPrimary = createEl(\"div\", {\n        class: \"iti__selected-country-primary\"\n      }, this.selectedCountry);\n      this.selectedCountryInner = createEl(\"div\", {\n        class: \"iti__flag\"\n      }, selectedCountryPrimary);\n      this.selectedCountryA11yText = createEl(\"span\", {\n        class: \"iti__a11y-text\"\n      }, this.selectedCountryInner);\n      if (allowDropdown) {\n        this.dropdownArrow = createEl(\"div\", {\n          class: \"iti__arrow\",\n          \"aria-hidden\": \"true\"\n        }, selectedCountryPrimary);\n      }\n      if (separateDialCode) {\n        this.selectedDialCode = createEl(\"div\", {\n          class: \"iti__selected-dial-code\"\n        }, this.selectedCountry);\n      }\n      if (allowDropdown) {\n        const extraClasses = fixDropdownWidth ? \"\" : \"iti--flexible-dropdown-width\";\n        this.dropdownContent = createEl(\"div\", {\n          id: `iti-${this.id}__dropdown-content`,\n          class: `iti__dropdown-content iti__hide ${extraClasses}`\n        });\n        if (countrySearch) {\n          this.searchInput = createEl(\"input\", {\n            type: \"text\",\n            class: \"iti__search-input\",\n            placeholder: i18n.searchPlaceholder,\n            role: \"combobox\",\n            \"aria-expanded\": \"true\",\n            \"aria-label\": i18n.searchPlaceholder,\n            \"aria-controls\": `iti-${this.id}__country-listbox`,\n            \"aria-autocomplete\": \"list\",\n            \"autocomplete\": \"off\"\n          }, this.dropdownContent);\n          this.searchResultsA11yText = createEl(\"span\", {\n            class: \"iti__a11y-text\"\n          }, this.dropdownContent);\n        }\n        this.countryList = createEl(\"ul\", {\n          class: \"iti__country-list\",\n          id: `iti-${this.id}__country-listbox`,\n          role: \"listbox\",\n          \"aria-label\": i18n.countryListAriaLabel\n        }, this.dropdownContent);\n        this._appendListItems();\n        if (countrySearch) {\n          this._updateSearchResultsText();\n        }\n        if (dropdownContainer) {\n          let dropdownClasses = \"iti iti--container\";\n          if (useFullscreenPopup) {\n            dropdownClasses += \" iti--fullscreen-popup\";\n          } else {\n            dropdownClasses += \" iti--inline-dropdown\";\n          }\n          this.dropdown = createEl(\"div\", {\n            class: dropdownClasses\n          });\n          this.dropdown.appendChild(this.dropdownContent);\n        } else {\n          this.countryContainer.appendChild(this.dropdownContent);\n        }\n      }\n    }\n    wrapper.appendChild(this.telInput);\n    this._updateInputPadding();\n    if (hiddenInput) {\n      const telInputName = this.telInput.getAttribute(\"name\") || \"\";\n      const names = hiddenInput(telInputName);\n      if (names.phone) {\n        const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.phone}\"]`);\n        if (existingInput) {\n          this.hiddenInput = existingInput;\n        } else {\n          this.hiddenInput = createEl(\"input\", {\n            type: \"hidden\",\n            name: names.phone\n          });\n          wrapper.appendChild(this.hiddenInput);\n        }\n      }\n      if (names.country) {\n        const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.country}\"]`);\n        if (existingInput) {\n          this.hiddenInputCountry = existingInput;\n        } else {\n          this.hiddenInputCountry = createEl(\"input\", {\n            type: \"hidden\",\n            name: names.country\n          });\n          wrapper.appendChild(this.hiddenInputCountry);\n        }\n      }\n    }\n  }\n  //* For each country: add a country list item <li> to the countryList <ul> container.\n  _appendListItems() {\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const extraClass = i === 0 ? \"iti__highlight\" : \"\";\n      const listItem = createEl(\"li\", {\n        id: `iti-${this.id}__item-${c.iso2}`,\n        class: `iti__country ${extraClass}`,\n        tabindex: \"-1\",\n        role: \"option\",\n        \"data-dial-code\": c.dialCode,\n        \"data-country-code\": c.iso2,\n        \"aria-selected\": \"false\"\n      }, this.countryList);\n      c.nodeById[this.id] = listItem;\n      let content = \"\";\n      if (this.options.showFlags) {\n        content += `<div class='iti__flag iti__${c.iso2}'></div>`;\n      }\n      content += `<span class='iti__country-name'>${c.name}</span>`;\n      content += `<span class='iti__dial-code'>+${c.dialCode}</span>`;\n      listItem.insertAdjacentHTML(\"beforeend\", content);\n    }\n  }\n  //* Set the initial state of the input value and the selected country by:\n  //* 1. Extracting a dial code from the given number\n  //* 2. Using explicit initialCountry\n  _setInitialState(overrideAutoCountry = false) {\n    const attributeValue = this.telInput.getAttribute(\"value\");\n    const inputValue = this.telInput.value;\n    const useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n    const val = useAttribute ? attributeValue : inputValue;\n    const dialCode = this._getDialCode(val);\n    const isRegionlessNanpNumber = isRegionlessNanp(val);\n    const {\n      initialCountry,\n      geoIpLookup\n    } = this.options;\n    const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\n    if (dialCode && !isRegionlessNanpNumber) {\n      this._updateCountryFromNumber(val);\n    } else if (!isAutoCountry || overrideAutoCountry) {\n      const lowerInitialCountry = initialCountry ? initialCountry.toLowerCase() : \"\";\n      const isValidInitialCountry = lowerInitialCountry && this._getCountryData(lowerInitialCountry, true);\n      if (isValidInitialCountry) {\n        this._setCountry(lowerInitialCountry);\n      } else {\n        if (dialCode && isRegionlessNanpNumber) {\n          this._setCountry(\"us\");\n        } else {\n          this._setCountry();\n        }\n      }\n    }\n    if (val) {\n      this._updateValFromNumber(val);\n    }\n  }\n  //* Initialise the main event listeners: input keyup, and click selected country.\n  _initListeners() {\n    this._initTelInputListeners();\n    if (this.options.allowDropdown) {\n      this._initDropdownListeners();\n    }\n    if ((this.hiddenInput || this.hiddenInputCountry) && this.telInput.form) {\n      this._initHiddenInputListener();\n    }\n  }\n  //* Update hidden input on form submit.\n  _initHiddenInputListener() {\n    this._handleHiddenInputSubmit = () => {\n      if (this.hiddenInput) {\n        this.hiddenInput.value = this.getNumber();\n      }\n      if (this.hiddenInputCountry) {\n        this.hiddenInputCountry.value = this.getSelectedCountryData().iso2 || \"\";\n      }\n    };\n    this.telInput.form?.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n  }\n  //* initialise the dropdown listeners.\n  _initDropdownListeners() {\n    this._handleLabelClick = e => {\n      if (this.dropdownContent.classList.contains(\"iti__hide\")) {\n        this.telInput.focus();\n      } else {\n        e.preventDefault();\n      }\n    };\n    const label = this.telInput.closest(\"label\");\n    if (label) {\n      label.addEventListener(\"click\", this._handleLabelClick);\n    }\n    this._handleClickSelectedCountry = () => {\n      if (this.dropdownContent.classList.contains(\"iti__hide\") && !this.telInput.disabled && !this.telInput.readOnly) {\n        this._openDropdown();\n      }\n    };\n    this.selectedCountry.addEventListener(\"click\", this._handleClickSelectedCountry);\n    this._handleCountryContainerKeydown = e => {\n      const isDropdownHidden = this.dropdownContent.classList.contains(\"iti__hide\");\n      if (isDropdownHidden && [\"ArrowUp\", \"ArrowDown\", \" \", \"Enter\"].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n        this._openDropdown();\n      }\n      if (e.key === \"Tab\") {\n        this._closeDropdown();\n      }\n    };\n    this.countryContainer.addEventListener(\"keydown\", this._handleCountryContainerKeydown);\n  }\n  //* Init many requests: utils script / geo ip lookup.\n  _initRequests() {\n    let {\n      loadUtils,\n      initialCountry,\n      geoIpLookup\n    } = this.options;\n    if (loadUtils && !intlTelInput.utils) {\n      this._handlePageLoad = () => {\n        window.removeEventListener(\"load\", this._handlePageLoad);\n        intlTelInput.attachUtils(loadUtils)?.catch(() => {});\n      };\n      if (intlTelInput.documentReady()) {\n        this._handlePageLoad();\n      } else {\n        window.addEventListener(\"load\", this._handlePageLoad);\n      }\n    } else {\n      this.resolveUtilsScriptPromise();\n    }\n    const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\n    if (isAutoCountry && !this.selectedCountryData.iso2) {\n      this._loadAutoCountry();\n    } else {\n      this.resolveAutoCountryPromise();\n    }\n  }\n  //* Perform the geo ip lookup.\n  _loadAutoCountry() {\n    if (intlTelInput.autoCountry) {\n      this.handleAutoCountry();\n    } else if (!intlTelInput.startedLoadingAutoCountry) {\n      intlTelInput.startedLoadingAutoCountry = true;\n      if (typeof this.options.geoIpLookup === \"function\") {\n        this.options.geoIpLookup((iso2 = \"\") => {\n          const iso2Lower = iso2.toLowerCase();\n          const isValidIso2 = iso2Lower && this._getCountryData(iso2Lower, true);\n          if (isValidIso2) {\n            intlTelInput.autoCountry = iso2Lower;\n            setTimeout(() => forEachInstance(\"handleAutoCountry\"));\n          } else {\n            this._setInitialState(true);\n            forEachInstance(\"rejectAutoCountryPromise\");\n          }\n        }, () => {\n          this._setInitialState(true);\n          forEachInstance(\"rejectAutoCountryPromise\");\n        });\n      }\n    }\n  }\n  _openDropdownWithPlus() {\n    this._openDropdown();\n    this.searchInput.value = \"+\";\n    this._filterCountries(\"\", true);\n  }\n  //* Initialize the tel input listeners.\n  _initTelInputListeners() {\n    const {\n      strictMode,\n      formatAsYouType,\n      separateDialCode,\n      formatOnDisplay,\n      allowDropdown,\n      countrySearch\n    } = this.options;\n    let userOverrideFormatting = false;\n    if (/\\p{L}/u.test(this.telInput.value)) {\n      userOverrideFormatting = true;\n    }\n    this._handleInputEvent = e => {\n      if (this.isAndroid && e?.data === \"+\" && separateDialCode && allowDropdown && countrySearch) {\n        const currentCaretPos = this.telInput.selectionStart || 0;\n        const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos - 1);\n        const valueAfterCaret = this.telInput.value.substring(currentCaretPos);\n        this.telInput.value = valueBeforeCaret + valueAfterCaret;\n        this._openDropdownWithPlus();\n        return;\n      }\n      if (this._updateCountryFromNumber(this.telInput.value)) {\n        this._triggerCountryChange();\n      }\n      const isFormattingChar = e?.data && /[^+0-9]/.test(e.data);\n      const isPaste = e?.inputType === \"insertFromPaste\" && this.telInput.value;\n      if (isFormattingChar || isPaste && !strictMode) {\n        userOverrideFormatting = true;\n      } else if (!/[^+0-9]/.test(this.telInput.value)) {\n        userOverrideFormatting = false;\n      }\n      const disableFormatOnSetNumber = e?.detail && e.detail[\"isSetNumber\"] && !formatOnDisplay;\n      if (formatAsYouType && !userOverrideFormatting && !disableFormatOnSetNumber) {\n        const currentCaretPos = this.telInput.selectionStart || 0;\n        const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos);\n        const relevantCharsBeforeCaret = valueBeforeCaret.replace(/[^+0-9]/g, \"\").length;\n        const isDeleteForwards = e?.inputType === \"deleteContentForward\";\n        const formattedValue = this._formatNumberAsYouType();\n        const newCaretPos = translateCursorPosition(relevantCharsBeforeCaret, formattedValue, currentCaretPos, isDeleteForwards);\n        this.telInput.value = formattedValue;\n        this.telInput.setSelectionRange(newCaretPos, newCaretPos);\n      }\n    };\n    this.telInput.addEventListener(\"input\", this._handleInputEvent);\n    if (strictMode || separateDialCode) {\n      this._handleKeydownEvent = e => {\n        if (e.key && e.key.length === 1 && !e.altKey && !e.ctrlKey && !e.metaKey) {\n          if (separateDialCode && allowDropdown && countrySearch && e.key === \"+\") {\n            e.preventDefault();\n            this._openDropdownWithPlus();\n            return;\n          }\n          if (strictMode) {\n            const value = this.telInput.value;\n            const alreadyHasPlus = value.charAt(0) === \"+\";\n            const isInitialPlus = !alreadyHasPlus && this.telInput.selectionStart === 0 && e.key === \"+\";\n            const isNumeric = /^[0-9]$/.test(e.key);\n            const isAllowedChar = separateDialCode ? isNumeric : isInitialPlus || isNumeric;\n            const newValue = value.slice(0, this.telInput.selectionStart) + e.key + value.slice(this.telInput.selectionEnd);\n            const newFullNumber = this._getFullNumber(newValue);\n            const coreNumber = intlTelInput.utils.getCoreNumber(newFullNumber, this.selectedCountryData.iso2);\n            const hasExceededMaxLength = this.maxCoreNumberLength && coreNumber.length > this.maxCoreNumberLength;\n            let isChangingDialCode = false;\n            if (alreadyHasPlus) {\n              const currentCountry = this.selectedCountryData.iso2;\n              const newCountry = this._getCountryFromNumber(newFullNumber);\n              isChangingDialCode = newCountry !== currentCountry;\n            }\n            if (!isAllowedChar || hasExceededMaxLength && !isChangingDialCode && !isInitialPlus) {\n              e.preventDefault();\n            }\n          }\n        }\n      };\n      this.telInput.addEventListener(\"keydown\", this._handleKeydownEvent);\n    }\n  }\n  //* Adhere to the input's maxlength attr.\n  _cap(number) {\n    const max = parseInt(this.telInput.getAttribute(\"maxlength\") || \"\", 10);\n    return max && number.length > max ? number.substr(0, max) : number;\n  }\n  //* Trigger a custom event on the input.\n  _trigger(name, detailProps = {}) {\n    const e = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true,\n      detail: detailProps\n    });\n    this.telInput.dispatchEvent(e);\n  }\n  //* Open the dropdown.\n  _openDropdown() {\n    const {\n      fixDropdownWidth,\n      countrySearch\n    } = this.options;\n    if (fixDropdownWidth) {\n      this.dropdownContent.style.width = `${this.telInput.offsetWidth}px`;\n    }\n    this.dropdownContent.classList.remove(\"iti__hide\");\n    this.selectedCountry.setAttribute(\"aria-expanded\", \"true\");\n    this._setDropdownPosition();\n    if (countrySearch) {\n      const firstCountryItem = this.countryList.firstElementChild;\n      if (firstCountryItem) {\n        this._highlightListItem(firstCountryItem, false);\n        this.countryList.scrollTop = 0;\n      }\n      this.searchInput.focus();\n    }\n    this._bindDropdownListeners();\n    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n    this._trigger(\"open:countrydropdown\");\n  }\n  //* Set the dropdown position\n  _setDropdownPosition() {\n    if (this.options.dropdownContainer) {\n      this.options.dropdownContainer.appendChild(this.dropdown);\n    }\n    if (!this.options.useFullscreenPopup) {\n      const inputPosRelativeToVP = this.telInput.getBoundingClientRect();\n      const inputHeight = this.telInput.offsetHeight;\n      if (this.options.dropdownContainer) {\n        this.dropdown.style.top = `${inputPosRelativeToVP.top + inputHeight}px`;\n        this.dropdown.style.left = `${inputPosRelativeToVP.left}px`;\n        this._handleWindowScroll = () => this._closeDropdown();\n        window.addEventListener(\"scroll\", this._handleWindowScroll);\n      }\n    }\n  }\n  //* We only bind dropdown listeners when the dropdown is open.\n  _bindDropdownListeners() {\n    this._handleMouseoverCountryList = e => {\n      const listItem = e.target?.closest(\".iti__country\");\n      if (listItem) {\n        this._highlightListItem(listItem, false);\n      }\n    };\n    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n    this._handleClickCountryList = e => {\n      const listItem = e.target?.closest(\".iti__country\");\n      if (listItem) {\n        this._selectListItem(listItem);\n      }\n    };\n    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n    let isOpening = true;\n    this._handleClickOffToClose = () => {\n      if (!isOpening) {\n        this._closeDropdown();\n      }\n      isOpening = false;\n    };\n    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n    let query = \"\";\n    let queryTimer = null;\n    this._handleKeydownOnDropdown = e => {\n      if ([\"ArrowUp\", \"ArrowDown\", \"Enter\", \"Escape\"].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n          this._handleUpDownKey(e.key);\n        } else if (e.key === \"Enter\") {\n          this._handleEnterKey();\n        } else if (e.key === \"Escape\") {\n          this._closeDropdown();\n        }\n      }\n      if (!this.options.countrySearch && /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n        e.stopPropagation();\n        if (queryTimer) {\n          clearTimeout(queryTimer);\n        }\n        query += e.key.toLowerCase();\n        this._searchForCountry(query);\n        queryTimer = setTimeout(() => {\n          query = \"\";\n        }, 1e3);\n      }\n    };\n    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n    if (this.options.countrySearch) {\n      const doFilter = () => {\n        const inputQuery = this.searchInput.value.trim();\n        if (inputQuery) {\n          this._filterCountries(inputQuery);\n        } else {\n          this._filterCountries(\"\", true);\n        }\n      };\n      let keyupTimer = null;\n      this._handleSearchChange = () => {\n        if (keyupTimer) {\n          clearTimeout(keyupTimer);\n        }\n        keyupTimer = setTimeout(() => {\n          doFilter();\n          keyupTimer = null;\n        }, 100);\n      };\n      this.searchInput.addEventListener(\"input\", this._handleSearchChange);\n      this.searchInput.addEventListener(\"click\", e => e.stopPropagation());\n    }\n  }\n  //* Hidden search (countrySearch disabled): Find the first list item whose name starts with the query string.\n  _searchForCountry(query) {\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const startsWith = c.name.substr(0, query.length).toLowerCase() === query;\n      if (startsWith) {\n        const listItem = c.nodeById[this.id];\n        this._highlightListItem(listItem, false);\n        this._scrollTo(listItem);\n        break;\n      }\n    }\n  }\n  //* Country search enabled: Filter the countries according to the search query.\n  _filterCountries(query, isReset = false) {\n    let noCountriesAddedYet = true;\n    this.countryList.innerHTML = \"\";\n    const normalisedQuery = normaliseString(query);\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const normalisedCountryName = normaliseString(c.name);\n      const countryInitials = c.name.split(/[^a-zA-ZÀ-ÿа-яА-Я]/).map(word => word[0]).join(\"\").toLowerCase();\n      const fullDialCode = `+${c.dialCode}`;\n      if (isReset || normalisedCountryName.includes(normalisedQuery) || fullDialCode.includes(normalisedQuery) || c.iso2.includes(normalisedQuery) || countryInitials.includes(normalisedQuery)) {\n        const listItem = c.nodeById[this.id];\n        if (listItem) {\n          this.countryList.appendChild(listItem);\n        }\n        if (noCountriesAddedYet) {\n          this._highlightListItem(listItem, false);\n          noCountriesAddedYet = false;\n        }\n      }\n    }\n    if (noCountriesAddedYet) {\n      this._highlightListItem(null, false);\n    }\n    this.countryList.scrollTop = 0;\n    this._updateSearchResultsText();\n  }\n  //* Update search results text (for a11y).\n  _updateSearchResultsText() {\n    const {\n      i18n\n    } = this.options;\n    const count = this.countryList.childElementCount;\n    let searchText;\n    if (count === 0) {\n      searchText = i18n.zeroSearchResults;\n    } else if (count === 1) {\n      searchText = i18n.oneSearchResult;\n    } else {\n      searchText = i18n.multipleSearchResults.replace(\"${count}\", count.toString());\n    }\n    this.searchResultsA11yText.textContent = searchText;\n  }\n  //* Highlight the next/prev item in the list (and ensure it is visible).\n  _handleUpDownKey(key) {\n    let next = key === \"ArrowUp\" ? this.highlightedItem?.previousElementSibling : this.highlightedItem?.nextElementSibling;\n    if (!next && this.countryList.childElementCount > 1) {\n      next = key === \"ArrowUp\" ? this.countryList.lastElementChild : this.countryList.firstElementChild;\n    }\n    if (next) {\n      this._scrollTo(next);\n      this._highlightListItem(next, false);\n    }\n  }\n  //* Select the currently highlighted item.\n  _handleEnterKey() {\n    if (this.highlightedItem) {\n      this._selectListItem(this.highlightedItem);\n    }\n  }\n  //* Update the input's value to the given val (format first if possible)\n  //* NOTE: this is called from _setInitialState, handleUtils and setNumber.\n  _updateValFromNumber(fullNumber) {\n    let number = fullNumber;\n    if (this.options.formatOnDisplay && intlTelInput.utils && this.selectedCountryData) {\n      const useNational = this.options.nationalMode || number.charAt(0) !== \"+\" && !this.options.separateDialCode;\n      const {\n        NATIONAL,\n        INTERNATIONAL\n      } = intlTelInput.utils.numberFormat;\n      const format = useNational ? NATIONAL : INTERNATIONAL;\n      number = intlTelInput.utils.formatNumber(number, this.selectedCountryData.iso2, format);\n    }\n    number = this._beforeSetNumber(number);\n    this.telInput.value = number;\n  }\n  //* Check if need to select a new country based on the given number\n  //* Note: called from _setInitialState, keyup handler, setNumber.\n  _updateCountryFromNumber(fullNumber) {\n    const iso2 = this._getCountryFromNumber(fullNumber);\n    if (iso2 !== null) {\n      return this._setCountry(iso2);\n    }\n    return false;\n  }\n  _ensureHasDialCode(number) {\n    const {\n      dialCode,\n      nationalPrefix\n    } = this.selectedCountryData;\n    const alreadyHasPlus = number.charAt(0) === \"+\";\n    if (alreadyHasPlus || !dialCode) {\n      return number;\n    }\n    const hasPrefix = nationalPrefix && number.charAt(0) === nationalPrefix && !this.options.separateDialCode;\n    const cleanNumber = hasPrefix ? number.substring(1) : number;\n    return `+${dialCode}${cleanNumber}`;\n  }\n  _getCountryFromNumber(fullNumber) {\n    const plusIndex = fullNumber.indexOf(\"+\");\n    let number = plusIndex ? fullNumber.substring(plusIndex) : fullNumber;\n    const selectedIso2 = this.selectedCountryData.iso2;\n    const selectedDialCode = this.selectedCountryData.dialCode;\n    number = this._ensureHasDialCode(number);\n    const dialCodeMatch = this._getDialCode(number, true);\n    const numeric = getNumeric(number);\n    if (dialCodeMatch) {\n      const dialCodeMatchNumeric = getNumeric(dialCodeMatch);\n      const iso2Codes = this.dialCodeToIso2Map[dialCodeMatchNumeric];\n      if (!selectedIso2 && this.defaultCountry && iso2Codes.includes(this.defaultCountry)) {\n        return this.defaultCountry;\n      }\n      const alreadySelected = selectedIso2 && iso2Codes.includes(selectedIso2) && (numeric.length === dialCodeMatchNumeric.length || !this.selectedCountryData.areaCodes);\n      const isRegionlessNanpNumber = selectedDialCode === \"1\" && isRegionlessNanp(numeric);\n      if (!isRegionlessNanpNumber && !alreadySelected) {\n        for (let j = 0; j < iso2Codes.length; j++) {\n          if (iso2Codes[j]) {\n            return iso2Codes[j];\n          }\n        }\n      }\n    } else if (number.charAt(0) === \"+\" && numeric.length) {\n      return \"\";\n    } else if ((!number || number === \"+\") && !this.selectedCountryData.iso2) {\n      return this.defaultCountry;\n    }\n    return null;\n  }\n  //* Remove highlighting from other list items and highlight the given item.\n  _highlightListItem(listItem, shouldFocus) {\n    const prevItem = this.highlightedItem;\n    if (prevItem) {\n      prevItem.classList.remove(\"iti__highlight\");\n      prevItem.setAttribute(\"aria-selected\", \"false\");\n    }\n    this.highlightedItem = listItem;\n    if (this.highlightedItem) {\n      this.highlightedItem.classList.add(\"iti__highlight\");\n      this.highlightedItem.setAttribute(\"aria-selected\", \"true\");\n      const activeDescendant = this.highlightedItem.getAttribute(\"id\") || \"\";\n      this.selectedCountry.setAttribute(\"aria-activedescendant\", activeDescendant);\n      if (this.options.countrySearch) {\n        this.searchInput.setAttribute(\"aria-activedescendant\", activeDescendant);\n      }\n    }\n    if (shouldFocus) {\n      this.highlightedItem.focus();\n    }\n  }\n  //* Find the country data for the given iso2 code\n  //* the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array\n  _getCountryData(iso2, allowFail) {\n    for (let i = 0; i < this.countries.length; i++) {\n      if (this.countries[i].iso2 === iso2) {\n        return this.countries[i];\n      }\n    }\n    if (allowFail) {\n      return null;\n    }\n    throw new Error(`No country data for '${iso2}'`);\n  }\n  //* Update the selected country, dial code (if separateDialCode), placeholder, title, and active list item.\n  //* Note: called from _setInitialState, _updateCountryFromNumber, _selectListItem, setCountry.\n  _setCountry(iso2) {\n    const {\n      separateDialCode,\n      showFlags,\n      i18n\n    } = this.options;\n    const prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n    this.selectedCountryData = iso2 ? this._getCountryData(iso2, false) || {} : {};\n    if (this.selectedCountryData.iso2) {\n      this.defaultCountry = this.selectedCountryData.iso2;\n    }\n    if (this.selectedCountryInner) {\n      let flagClass = \"\";\n      let a11yText = \"\";\n      if (iso2 && showFlags) {\n        flagClass = `iti__flag iti__${iso2}`;\n        a11yText = `${this.selectedCountryData.name} +${this.selectedCountryData.dialCode}`;\n      } else {\n        flagClass = \"iti__flag iti__globe\";\n        a11yText = i18n.noCountrySelected;\n      }\n      this.selectedCountryInner.className = flagClass;\n      this.selectedCountryA11yText.textContent = a11yText;\n    }\n    this._setSelectedCountryTitleAttribute(iso2, separateDialCode);\n    if (separateDialCode) {\n      const dialCode = this.selectedCountryData.dialCode ? `+${this.selectedCountryData.dialCode}` : \"\";\n      this.selectedDialCode.innerHTML = dialCode;\n      this._updateInputPadding();\n    }\n    this._updatePlaceholder();\n    this._updateMaxLength();\n    return prevCountry.iso2 !== iso2;\n  }\n  //* Update the input padding to make space for the selected country/dial code.\n  _updateInputPadding() {\n    if (this.selectedCountry) {\n      const selectedCountryWidth = this.selectedCountry.offsetWidth || this._getHiddenSelectedCountryWidth();\n      const inputPadding = selectedCountryWidth + 6;\n      if (this.showSelectedCountryOnLeft) {\n        this.telInput.style.paddingLeft = `${inputPadding}px`;\n      } else {\n        this.telInput.style.paddingRight = `${inputPadding}px`;\n      }\n    }\n  }\n  //* Update the maximum valid number length for the currently selected country.\n  _updateMaxLength() {\n    const {\n      strictMode,\n      placeholderNumberType,\n      validationNumberTypes\n    } = this.options;\n    const {\n      iso2\n    } = this.selectedCountryData;\n    if (strictMode && intlTelInput.utils) {\n      if (iso2) {\n        const numberType = intlTelInput.utils.numberType[placeholderNumberType];\n        let exampleNumber = intlTelInput.utils.getExampleNumber(iso2, false, numberType, true);\n        let validNumber = exampleNumber;\n        while (intlTelInput.utils.isPossibleNumber(exampleNumber, iso2, validationNumberTypes)) {\n          validNumber = exampleNumber;\n          exampleNumber += \"0\";\n        }\n        const coreNumber = intlTelInput.utils.getCoreNumber(validNumber, iso2);\n        this.maxCoreNumberLength = coreNumber.length;\n        if (iso2 === \"by\") {\n          this.maxCoreNumberLength = coreNumber.length + 1;\n        }\n      } else {\n        this.maxCoreNumberLength = null;\n      }\n    }\n  }\n  _setSelectedCountryTitleAttribute(iso2 = null, separateDialCode) {\n    if (!this.selectedCountry) {\n      return;\n    }\n    let title;\n    if (iso2 && !separateDialCode) {\n      title = `${this.selectedCountryData.name}: +${this.selectedCountryData.dialCode}`;\n    } else if (iso2) {\n      title = this.selectedCountryData.name;\n    } else {\n      title = \"Unknown\";\n    }\n    this.selectedCountry.setAttribute(\"title\", title);\n  }\n  //* When the input is in a hidden container during initialisation, we must inject some markup\n  //* into the end of the DOM to calculate the correct offsetWidth.\n  //* NOTE: this is only used when separateDialCode is enabled, so countryContainer and selectedCountry\n  //* will definitely exist.\n  _getHiddenSelectedCountryWidth() {\n    if (this.telInput.parentNode) {\n      const containerClone = this.telInput.parentNode.cloneNode(false);\n      containerClone.style.visibility = \"hidden\";\n      document.body.appendChild(containerClone);\n      const countryContainerClone = this.countryContainer.cloneNode();\n      containerClone.appendChild(countryContainerClone);\n      const selectedCountryClone = this.selectedCountry.cloneNode(true);\n      countryContainerClone.appendChild(selectedCountryClone);\n      const width = selectedCountryClone.offsetWidth;\n      document.body.removeChild(containerClone);\n      return width;\n    }\n    return 0;\n  }\n  //* Update the input placeholder to an example number from the currently selected country.\n  _updatePlaceholder() {\n    const {\n      autoPlaceholder,\n      placeholderNumberType,\n      nationalMode,\n      customPlaceholder\n    } = this.options;\n    const shouldSetPlaceholder = autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && autoPlaceholder === \"polite\";\n    if (intlTelInput.utils && shouldSetPlaceholder) {\n      const numberType = intlTelInput.utils.numberType[placeholderNumberType];\n      let placeholder = this.selectedCountryData.iso2 ? intlTelInput.utils.getExampleNumber(this.selectedCountryData.iso2, nationalMode, numberType) : \"\";\n      placeholder = this._beforeSetNumber(placeholder);\n      if (typeof customPlaceholder === \"function\") {\n        placeholder = customPlaceholder(placeholder, this.selectedCountryData);\n      }\n      this.telInput.setAttribute(\"placeholder\", placeholder);\n    }\n  }\n  //* Called when the user selects a list item from the dropdown.\n  _selectListItem(listItem) {\n    const countryChanged = this._setCountry(listItem.getAttribute(\"data-country-code\"));\n    this._closeDropdown();\n    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"));\n    this.telInput.focus();\n    if (countryChanged) {\n      this._triggerCountryChange();\n    }\n  }\n  //* Close the dropdown and unbind any listeners.\n  _closeDropdown() {\n    this.dropdownContent.classList.add(\"iti__hide\");\n    this.selectedCountry.setAttribute(\"aria-expanded\", \"false\");\n    this.selectedCountry.removeAttribute(\"aria-activedescendant\");\n    if (this.highlightedItem) {\n      this.highlightedItem.setAttribute(\"aria-selected\", \"false\");\n    }\n    if (this.options.countrySearch) {\n      this.searchInput.removeAttribute(\"aria-activedescendant\");\n    }\n    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n    if (this.options.countrySearch) {\n      this.searchInput.removeEventListener(\"input\", this._handleSearchChange);\n    }\n    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n    if (this.options.dropdownContainer) {\n      if (!this.options.useFullscreenPopup) {\n        window.removeEventListener(\"scroll\", this._handleWindowScroll);\n      }\n      if (this.dropdown.parentNode) {\n        this.dropdown.parentNode.removeChild(this.dropdown);\n      }\n    }\n    if (this._handlePageLoad) {\n      window.removeEventListener(\"load\", this._handlePageLoad);\n    }\n    this._trigger(\"close:countrydropdown\");\n  }\n  //* Check if an element is visible within it's container, else scroll until it is.\n  _scrollTo(element) {\n    const container = this.countryList;\n    const scrollTop = document.documentElement.scrollTop;\n    const containerHeight = container.offsetHeight;\n    const containerTop = container.getBoundingClientRect().top + scrollTop;\n    const containerBottom = containerTop + containerHeight;\n    const elementHeight = element.offsetHeight;\n    const elementTop = element.getBoundingClientRect().top + scrollTop;\n    const elementBottom = elementTop + elementHeight;\n    const newScrollTop = elementTop - containerTop + container.scrollTop;\n    if (elementTop < containerTop) {\n      container.scrollTop = newScrollTop;\n    } else if (elementBottom > containerBottom) {\n      const heightDifference = containerHeight - elementHeight;\n      container.scrollTop = newScrollTop - heightDifference;\n    }\n  }\n  //* Replace any existing dial code with the new one\n  //* Note: called from _selectListItem and setCountry\n  _updateDialCode(newDialCodeBare) {\n    const inputVal = this.telInput.value;\n    const newDialCode = `+${newDialCodeBare}`;\n    let newNumber;\n    if (inputVal.charAt(0) === \"+\") {\n      const prevDialCode = this._getDialCode(inputVal);\n      if (prevDialCode) {\n        newNumber = inputVal.replace(prevDialCode, newDialCode);\n      } else {\n        newNumber = newDialCode;\n      }\n      this.telInput.value = newNumber;\n    }\n  }\n  //* Try and extract a valid international dial code from a full telephone number.\n  //* Note: returns the raw string inc plus character and any whitespace/dots etc.\n  _getDialCode(number, includeAreaCode) {\n    let dialCode = \"\";\n    if (number.charAt(0) === \"+\") {\n      let numericChars = \"\";\n      for (let i = 0; i < number.length; i++) {\n        const c = number.charAt(i);\n        if (!isNaN(parseInt(c, 10))) {\n          numericChars += c;\n          if (includeAreaCode) {\n            if (this.dialCodeToIso2Map[numericChars]) {\n              dialCode = number.substr(0, i + 1);\n            }\n          } else {\n            if (this.dialCodes[numericChars]) {\n              dialCode = number.substr(0, i + 1);\n              break;\n            }\n          }\n          if (numericChars.length === this.dialCodeMaxLen) {\n            break;\n          }\n        }\n      }\n    }\n    return dialCode;\n  }\n  //* Get the input val, adding the dial code if separateDialCode is enabled.\n  _getFullNumber(overrideVal) {\n    const val = overrideVal || this.telInput.value.trim();\n    const {\n      dialCode\n    } = this.selectedCountryData;\n    let prefix;\n    const numericVal = getNumeric(val);\n    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n      prefix = `+${dialCode}`;\n    } else {\n      prefix = \"\";\n    }\n    return prefix + val;\n  }\n  //* Remove the dial code if separateDialCode is enabled also cap the length if the input has a maxlength attribute\n  _beforeSetNumber(fullNumber) {\n    let number = fullNumber;\n    if (this.options.separateDialCode) {\n      let dialCode = this._getDialCode(number);\n      if (dialCode) {\n        dialCode = `+${this.selectedCountryData.dialCode}`;\n        const start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n        number = number.substr(start);\n      }\n    }\n    return this._cap(number);\n  }\n  //* Trigger the 'countrychange' event.\n  _triggerCountryChange() {\n    this._trigger(\"countrychange\");\n  }\n  //* Format the number as the user types.\n  _formatNumberAsYouType() {\n    const val = this._getFullNumber();\n    const result = intlTelInput.utils ? intlTelInput.utils.formatNumberAsYouType(val, this.selectedCountryData.iso2) : val;\n    const {\n      dialCode\n    } = this.selectedCountryData;\n    if (this.options.separateDialCode && this.telInput.value.charAt(0) !== \"+\" && result.includes(`+${dialCode}`)) {\n      const afterDialCode = result.split(`+${dialCode}`)[1] || \"\";\n      return afterDialCode.trim();\n    }\n    return result;\n  }\n  //**************************\n  //*  SECRET PUBLIC METHODS\n  //**************************\n  //* This is called when the geoip call returns.\n  handleAutoCountry() {\n    if (this.options.initialCountry === \"auto\" && intlTelInput.autoCountry) {\n      this.defaultCountry = intlTelInput.autoCountry;\n      const hasSelectedCountryOrGlobe = this.selectedCountryData.iso2 || this.selectedCountryInner.classList.contains(\"iti__globe\");\n      if (!hasSelectedCountryOrGlobe) {\n        this.setCountry(this.defaultCountry);\n      }\n      this.resolveAutoCountryPromise();\n    }\n  }\n  //* This is called when the utils request completes.\n  handleUtils() {\n    if (intlTelInput.utils) {\n      if (this.telInput.value) {\n        this._updateValFromNumber(this.telInput.value);\n      }\n      if (this.selectedCountryData.iso2) {\n        this._updatePlaceholder();\n        this._updateMaxLength();\n      }\n    }\n    this.resolveUtilsScriptPromise();\n  }\n  //********************\n  //*  PUBLIC METHODS\n  //********************\n  //* Remove plugin.\n  destroy() {\n    const {\n      allowDropdown,\n      separateDialCode\n    } = this.options;\n    if (allowDropdown) {\n      this._closeDropdown();\n      this.selectedCountry.removeEventListener(\"click\", this._handleClickSelectedCountry);\n      this.countryContainer.removeEventListener(\"keydown\", this._handleCountryContainerKeydown);\n      const label = this.telInput.closest(\"label\");\n      if (label) {\n        label.removeEventListener(\"click\", this._handleLabelClick);\n      }\n    }\n    const {\n      form\n    } = this.telInput;\n    if (this._handleHiddenInputSubmit && form) {\n      form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n    }\n    this.telInput.removeEventListener(\"input\", this._handleInputEvent);\n    if (this._handleKeydownEvent) {\n      this.telInput.removeEventListener(\"keydown\", this._handleKeydownEvent);\n    }\n    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n    if (separateDialCode) {\n      if (this.isRTL) {\n        this.telInput.style.paddingRight = this.originalPaddingRight;\n      } else {\n        this.telInput.style.paddingLeft = this.originalPaddingLeft;\n      }\n    }\n    const wrapper = this.telInput.parentNode;\n    wrapper?.parentNode?.insertBefore(this.telInput, wrapper);\n    wrapper?.parentNode?.removeChild(wrapper);\n    delete intlTelInput.instances[this.id];\n  }\n  //* Get the extension from the current number.\n  getExtension() {\n    if (intlTelInput.utils) {\n      return intlTelInput.utils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n    }\n    return \"\";\n  }\n  //* Format the number to the given format.\n  getNumber(format) {\n    if (intlTelInput.utils) {\n      const {\n        iso2\n      } = this.selectedCountryData;\n      return intlTelInput.utils.formatNumber(this._getFullNumber(), iso2, format);\n    }\n    return \"\";\n  }\n  //* Get the type of the entered number e.g. landline/mobile.\n  getNumberType() {\n    if (intlTelInput.utils) {\n      return intlTelInput.utils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n    }\n    return -99;\n  }\n  //* Get the country data for the currently selected country.\n  getSelectedCountryData() {\n    return this.selectedCountryData;\n  }\n  //* Get the validation error.\n  getValidationError() {\n    if (intlTelInput.utils) {\n      const {\n        iso2\n      } = this.selectedCountryData;\n      return intlTelInput.utils.getValidationError(this._getFullNumber(), iso2);\n    }\n    return -99;\n  }\n  //* Validate the input val\n  isValidNumber() {\n    if (!this.selectedCountryData.iso2) {\n      return false;\n    }\n    const val = this._getFullNumber();\n    const alphaCharPosition = val.search(/\\p{L}/u);\n    if (alphaCharPosition > -1) {\n      const beforeAlphaChar = val.substring(0, alphaCharPosition);\n      const beforeAlphaIsValid = this._utilsIsPossibleNumber(beforeAlphaChar);\n      const isValid = this._utilsIsPossibleNumber(val);\n      return beforeAlphaIsValid && isValid;\n    }\n    return this._utilsIsPossibleNumber(val);\n  }\n  _utilsIsPossibleNumber(val) {\n    return intlTelInput.utils ? intlTelInput.utils.isPossibleNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\n  }\n  //* Validate the input val (precise)\n  isValidNumberPrecise() {\n    if (!this.selectedCountryData.iso2) {\n      return false;\n    }\n    const val = this._getFullNumber();\n    const alphaCharPosition = val.search(/\\p{L}/u);\n    if (alphaCharPosition > -1) {\n      const beforeAlphaChar = val.substring(0, alphaCharPosition);\n      const beforeAlphaIsValid = this._utilsIsValidNumber(beforeAlphaChar);\n      const isValid = this._utilsIsValidNumber(val);\n      return beforeAlphaIsValid && isValid;\n    }\n    return this._utilsIsValidNumber(val);\n  }\n  _utilsIsValidNumber(val) {\n    return intlTelInput.utils ? intlTelInput.utils.isValidNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\n  }\n  //* Update the selected country, and update the input val accordingly.\n  setCountry(iso2) {\n    const iso2Lower = iso2?.toLowerCase();\n    const currentCountry = this.selectedCountryData.iso2;\n    const isCountryChange = iso2 && iso2Lower !== currentCountry || !iso2 && currentCountry;\n    if (isCountryChange) {\n      this._setCountry(iso2Lower);\n      this._updateDialCode(this.selectedCountryData.dialCode);\n      this._triggerCountryChange();\n    }\n  }\n  //* Set the input value and update the country.\n  setNumber(number) {\n    const countryChanged = this._updateCountryFromNumber(number);\n    this._updateValFromNumber(number);\n    if (countryChanged) {\n      this._triggerCountryChange();\n    }\n    this._trigger(\"input\", {\n      isSetNumber: true\n    });\n  }\n  //* Set the placeholder number typ\n  setPlaceholderNumberType(type) {\n    this.options.placeholderNumberType = type;\n    this._updatePlaceholder();\n  }\n  setDisabled(disabled) {\n    this.telInput.disabled = disabled;\n    if (disabled) {\n      this.selectedCountry.setAttribute(\"disabled\", \"true\");\n    } else {\n      this.selectedCountry.removeAttribute(\"disabled\");\n    }\n  }\n};\nvar attachUtils = source => {\n  if (!intlTelInput.utils && !intlTelInput.startedLoadingUtilsScript) {\n    let loadCall;\n    if (typeof source === \"function\") {\n      try {\n        loadCall = Promise.resolve(source());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      return Promise.reject(new TypeError(`The argument passed to attachUtils must be a function that returns a promise for the utilities module, not ${typeof source}`));\n    }\n    intlTelInput.startedLoadingUtilsScript = true;\n    return loadCall.then(module => {\n      const utils2 = module?.default;\n      if (!utils2 || typeof utils2 !== \"object\") {\n        throw new TypeError(\"The loader function passed to attachUtils did not resolve to a module object with utils as its default export.\");\n      }\n      intlTelInput.utils = utils2;\n      forEachInstance(\"handleUtils\");\n      return true;\n    }).catch(error => {\n      forEachInstance(\"rejectUtilsScriptPromise\", error);\n      throw error;\n    });\n  }\n  return null;\n};\nvar intlTelInput = Object.assign((input, options) => {\n  const iti = new Iti(input, options);\n  iti._init();\n  input.setAttribute(\"data-intl-tel-input-id\", iti.id.toString());\n  intlTelInput.instances[iti.id] = iti;\n  return iti;\n}, {\n  defaults,\n  //* Using a static var like this allows us to mock it in the tests.\n  documentReady: () => document.readyState === \"complete\",\n  //* Get the country data object.\n  getCountryData: () => data_default,\n  //* A getter for the plugin instance.\n  getInstance: input => {\n    const id2 = input.getAttribute(\"data-intl-tel-input-id\");\n    return id2 ? intlTelInput.instances[id2] : null;\n  },\n  //* A map from instance ID to instance object.\n  instances: {},\n  attachUtils,\n  startedLoadingUtilsScript: false,\n  startedLoadingAutoCountry: false,\n  version: \"25.2.0\"\n});\nvar intl_tel_input_default = intlTelInput;\n\n// build/js/utils.js\n(function () {\n  var k = this || self;\n  function m(a, b) {\n    a = a.split(\".\");\n    var c = k;\n    a[0] in c || \"undefined\" == typeof c.execScript || c.execScript(\"var \" + a[0]);\n    for (var d; a.length && (d = a.shift());) a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;\n  }\n  function n(a, b) {\n    function c() {}\n    c.prototype = b.prototype;\n    a.ma = b.prototype;\n    a.prototype = new c();\n    a.prototype.constructor = a;\n    a.sa = function (d, e, f) {\n      for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++) g[h - 2] = arguments[h];\n      return b.prototype[e].apply(d, g);\n    };\n  }\n  ;\n  function aa(a) {\n    const b = [];\n    let c = 0;\n    for (const d in a) b[c++] = a[d];\n    return b;\n  }\n  ;\n  var da = class {\n      constructor(a) {\n        if (ba !== ba) throw Error(\"SafeUrl is not meant to be built directly\");\n        this.g = a;\n      }\n      toString() {\n        return this.g.toString();\n      }\n    },\n    ba = {};\n  new da(\"about:invalid#zClosurez\");\n  new da(\"about:blank\");\n  const ea = {};\n  class fa {\n    constructor() {\n      if (ea !== ea) throw Error(\"SafeStyle is not meant to be built directly\");\n    }\n    toString() {\n      return \"\".toString();\n    }\n  }\n  new fa();\n  const ha = {};\n  class ia {\n    constructor() {\n      if (ha !== ha) throw Error(\"SafeStyleSheet is not meant to be built directly\");\n    }\n    toString() {\n      return \"\".toString();\n    }\n  }\n  new ia();\n  const ja = {};\n  class ka {\n    constructor() {\n      var a = k.trustedTypes && k.trustedTypes.emptyHTML || \"\";\n      if (ja !== ja) throw Error(\"SafeHtml is not meant to be built directly\");\n      this.g = a;\n    }\n    toString() {\n      return this.g.toString();\n    }\n  }\n  new ka();\n  function la(a, b) {\n    this.g = a;\n    this.l = !!b.aa;\n    this.h = b.i;\n    this.s = b.type;\n    this.o = false;\n    switch (this.h) {\n      case ma:\n      case na:\n      case oa:\n      case pa:\n      case qa:\n      case ra:\n      case sa:\n        this.o = true;\n    }\n    this.j = b.defaultValue;\n  }\n  var sa = 1,\n    ra = 2,\n    ma = 3,\n    na = 4,\n    oa = 6,\n    pa = 16,\n    qa = 18;\n  function ta(a, b) {\n    this.h = a;\n    this.g = {};\n    for (a = 0; a < b.length; a++) {\n      var c = b[a];\n      this.g[c.g] = c;\n    }\n  }\n  function ua(a) {\n    a = aa(a.g);\n    a.sort(function (b, c) {\n      return b.g - c.g;\n    });\n    return a;\n  }\n  ;\n  function p() {\n    this.h = {};\n    this.j = this.m().g;\n    this.g = this.l = null;\n  }\n  p.prototype.has = function (a) {\n    return q(this, a.g);\n  };\n  p.prototype.get = function (a, b) {\n    return r(this, a.g, b);\n  };\n  p.prototype.set = function (a, b) {\n    t(this, a.g, b);\n  };\n  p.prototype.add = function (a, b) {\n    va(this, a.g, b);\n  };\n  function wa(a, b) {\n    for (var c = ua(a.m()), d = 0; d < c.length; d++) {\n      var e = c[d],\n        f = e.g;\n      if (q(b, f)) {\n        a.g && delete a.g[e.g];\n        var g = 11 == e.h || 10 == e.h;\n        if (e.l) {\n          e = u(b, f);\n          for (var h = 0; h < e.length; h++) va(a, f, g ? e[h].clone() : e[h]);\n        } else e = v(b, f), g ? (g = v(a, f)) ? wa(g, e) : t(a, f, e.clone()) : t(a, f, e);\n      }\n    }\n  }\n  p.prototype.clone = function () {\n    var a = new this.constructor();\n    a != this && (a.h = {}, a.g && (a.g = {}), wa(a, this));\n    return a;\n  };\n  function q(a, b) {\n    return null != a.h[b];\n  }\n  function v(a, b) {\n    var c = a.h[b];\n    if (null == c) return null;\n    if (a.l) {\n      if (!(b in a.g)) {\n        var d = a.l,\n          e = a.j[b];\n        if (null != c) if (e.l) {\n          for (var f = [], g = 0; g < c.length; g++) f[g] = d.h(e, c[g]);\n          c = f;\n        } else c = d.h(e, c);\n        return a.g[b] = c;\n      }\n      return a.g[b];\n    }\n    return c;\n  }\n  function r(a, b, c) {\n    var d = v(a, b);\n    return a.j[b].l ? d[c || 0] : d;\n  }\n  function w(a, b) {\n    if (q(a, b)) a = r(a, b);else a: {\n      a = a.j[b];\n      if (void 0 === a.j) if (b = a.s, b === Boolean) a.j = false;else if (b === Number) a.j = 0;else if (b === String) a.j = a.o ? \"0\" : \"\";else {\n        a = new b();\n        break a;\n      }\n      a = a.j;\n    }\n    return a;\n  }\n  function u(a, b) {\n    return v(a, b) || [];\n  }\n  function x(a, b) {\n    return a.j[b].l ? q(a, b) ? a.h[b].length : 0 : q(a, b) ? 1 : 0;\n  }\n  function t(a, b, c) {\n    a.h[b] = c;\n    a.g && (a.g[b] = c);\n  }\n  function va(a, b, c) {\n    a.h[b] || (a.h[b] = []);\n    a.h[b].push(c);\n    a.g && delete a.g[b];\n  }\n  function y(a, b) {\n    var c = [],\n      d;\n    for (d in b) 0 != d && c.push(new la(d, b[d]));\n    return new ta(a, c);\n  }\n  ;\n  function z() {}\n  z.prototype.g = function (a) {\n    new a.h();\n    throw Error(\"Unimplemented\");\n  };\n  z.prototype.h = function (a, b) {\n    if (11 == a.h || 10 == a.h) return b instanceof p ? b : this.g(a.s.prototype.m(), b);\n    if (14 == a.h) return \"string\" === typeof b && xa.test(b) && (a = Number(b), 0 < a) ? a : b;\n    if (!a.o) return b;\n    a = a.s;\n    if (a === String) {\n      if (\"number\" === typeof b) return String(b);\n    } else if (a === Number && \"string\" === typeof b && (\"Infinity\" === b || \"-Infinity\" === b || \"NaN\" === b || xa.test(b))) return Number(b);\n    return b;\n  };\n  var xa = /^-?[0-9]+$/;\n  function B() {}\n  n(B, z);\n  B.prototype.g = function (a, b) {\n    a = new a.h();\n    a.l = this;\n    a.h = b;\n    a.g = {};\n    return a;\n  };\n  function C() {}\n  n(C, B);\n  C.prototype.h = function (a, b) {\n    return 8 == a.h ? !!b : z.prototype.h.apply(this, arguments);\n  };\n  C.prototype.g = function (a, b) {\n    return C.ma.g.call(this, a, b);\n  };\n  function D(a, b) {\n    null != a && this.g.apply(this, arguments);\n  }\n  D.prototype.h = \"\";\n  D.prototype.set = function (a) {\n    this.h = \"\" + a;\n  };\n  D.prototype.g = function (a, b, c) {\n    this.h += String(a);\n    if (null != b) for (let d = 1; d < arguments.length; d++) this.h += arguments[d];\n    return this;\n  };\n  function E(a) {\n    a.h = \"\";\n  }\n  D.prototype.toString = function () {\n    return this.h;\n  };\n  function F() {\n    p.call(this);\n  }\n  n(F, p);\n  var ya = null;\n  function G() {\n    p.call(this);\n  }\n  n(G, p);\n  var za = null;\n  function H() {\n    p.call(this);\n  }\n  n(H, p);\n  var Aa = null;\n  F.prototype.m = function () {\n    var a = ya;\n    a || (ya = a = y(F, {\n      0: {\n        name: \"NumberFormat\",\n        ia: \"i18n.phonenumbers.NumberFormat\"\n      },\n      1: {\n        name: \"pattern\",\n        required: true,\n        i: 9,\n        type: String\n      },\n      2: {\n        name: \"format\",\n        required: true,\n        i: 9,\n        type: String\n      },\n      3: {\n        name: \"leading_digits_pattern\",\n        aa: true,\n        i: 9,\n        type: String\n      },\n      4: {\n        name: \"national_prefix_formatting_rule\",\n        i: 9,\n        type: String\n      },\n      6: {\n        name: \"national_prefix_optional_when_formatting\",\n        i: 8,\n        defaultValue: false,\n        type: Boolean\n      },\n      5: {\n        name: \"domestic_carrier_code_formatting_rule\",\n        i: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n  F.m = F.prototype.m;\n  G.prototype.m = function () {\n    var a = za;\n    a || (za = a = y(G, {\n      0: {\n        name: \"PhoneNumberDesc\",\n        ia: \"i18n.phonenumbers.PhoneNumberDesc\"\n      },\n      2: {\n        name: \"national_number_pattern\",\n        i: 9,\n        type: String\n      },\n      9: {\n        name: \"possible_length\",\n        aa: true,\n        i: 5,\n        type: Number\n      },\n      10: {\n        name: \"possible_length_local_only\",\n        aa: true,\n        i: 5,\n        type: Number\n      },\n      6: {\n        name: \"example_number\",\n        i: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n  G.m = G.prototype.m;\n  H.prototype.m = function () {\n    var a = Aa;\n    a || (Aa = a = y(H, {\n      0: {\n        name: \"PhoneMetadata\",\n        ia: \"i18n.phonenumbers.PhoneMetadata\"\n      },\n      1: {\n        name: \"general_desc\",\n        i: 11,\n        type: G\n      },\n      2: {\n        name: \"fixed_line\",\n        i: 11,\n        type: G\n      },\n      3: {\n        name: \"mobile\",\n        i: 11,\n        type: G\n      },\n      4: {\n        name: \"toll_free\",\n        i: 11,\n        type: G\n      },\n      5: {\n        name: \"premium_rate\",\n        i: 11,\n        type: G\n      },\n      6: {\n        name: \"shared_cost\",\n        i: 11,\n        type: G\n      },\n      7: {\n        name: \"personal_number\",\n        i: 11,\n        type: G\n      },\n      8: {\n        name: \"voip\",\n        i: 11,\n        type: G\n      },\n      21: {\n        name: \"pager\",\n        i: 11,\n        type: G\n      },\n      25: {\n        name: \"uan\",\n        i: 11,\n        type: G\n      },\n      27: {\n        name: \"emergency\",\n        i: 11,\n        type: G\n      },\n      28: {\n        name: \"voicemail\",\n        i: 11,\n        type: G\n      },\n      29: {\n        name: \"short_code\",\n        i: 11,\n        type: G\n      },\n      30: {\n        name: \"standard_rate\",\n        i: 11,\n        type: G\n      },\n      31: {\n        name: \"carrier_specific\",\n        i: 11,\n        type: G\n      },\n      33: {\n        name: \"sms_services\",\n        i: 11,\n        type: G\n      },\n      24: {\n        name: \"no_international_dialling\",\n        i: 11,\n        type: G\n      },\n      9: {\n        name: \"id\",\n        required: true,\n        i: 9,\n        type: String\n      },\n      10: {\n        name: \"country_code\",\n        i: 5,\n        type: Number\n      },\n      11: {\n        name: \"international_prefix\",\n        i: 9,\n        type: String\n      },\n      17: {\n        name: \"preferred_international_prefix\",\n        i: 9,\n        type: String\n      },\n      12: {\n        name: \"national_prefix\",\n        i: 9,\n        type: String\n      },\n      13: {\n        name: \"preferred_extn_prefix\",\n        i: 9,\n        type: String\n      },\n      15: {\n        name: \"national_prefix_for_parsing\",\n        i: 9,\n        type: String\n      },\n      16: {\n        name: \"national_prefix_transform_rule\",\n        i: 9,\n        type: String\n      },\n      18: {\n        name: \"same_mobile_and_fixed_line_pattern\",\n        i: 8,\n        defaultValue: false,\n        type: Boolean\n      },\n      19: {\n        name: \"number_format\",\n        aa: true,\n        i: 11,\n        type: F\n      },\n      20: {\n        name: \"intl_number_format\",\n        aa: true,\n        i: 11,\n        type: F\n      },\n      22: {\n        name: \"main_country_for_code\",\n        i: 8,\n        defaultValue: false,\n        type: Boolean\n      },\n      23: {\n        name: \"leading_digits\",\n        i: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n  H.m = H.prototype.m;\n  function I() {\n    p.call(this);\n  }\n  n(I, p);\n  var Ba = null,\n    Ca = {\n      ra: 0,\n      qa: 1,\n      pa: 5,\n      oa: 10,\n      na: 20\n    };\n  I.prototype.m = function () {\n    var a = Ba;\n    a || (Ba = a = y(I, {\n      0: {\n        name: \"PhoneNumber\",\n        ia: \"i18n.phonenumbers.PhoneNumber\"\n      },\n      1: {\n        name: \"country_code\",\n        required: true,\n        i: 5,\n        type: Number\n      },\n      2: {\n        name: \"national_number\",\n        required: true,\n        i: 4,\n        type: Number\n      },\n      3: {\n        name: \"extension\",\n        i: 9,\n        type: String\n      },\n      4: {\n        name: \"italian_leading_zero\",\n        i: 8,\n        type: Boolean\n      },\n      8: {\n        name: \"number_of_leading_zeros\",\n        i: 5,\n        defaultValue: 1,\n        type: Number\n      },\n      5: {\n        name: \"raw_input\",\n        i: 9,\n        type: String\n      },\n      6: {\n        name: \"country_code_source\",\n        i: 14,\n        defaultValue: 0,\n        type: Ca\n      },\n      7: {\n        name: \"preferred_domestic_carrier_code\",\n        i: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n  I.ctor = I;\n  I.ctor.m = I.prototype.m;\n  var J = {\n      1: \"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \"),\n      7: [\"RU\", \"KZ\"],\n      20: [\"EG\"],\n      27: [\"ZA\"],\n      30: [\"GR\"],\n      31: [\"NL\"],\n      32: [\"BE\"],\n      33: [\"FR\"],\n      34: [\"ES\"],\n      36: [\"HU\"],\n      39: [\"IT\", \"VA\"],\n      40: [\"RO\"],\n      41: [\"CH\"],\n      43: [\"AT\"],\n      44: [\"GB\", \"GG\", \"IM\", \"JE\"],\n      45: [\"DK\"],\n      46: [\"SE\"],\n      47: [\"NO\", \"SJ\"],\n      48: [\"PL\"],\n      49: [\"DE\"],\n      51: [\"PE\"],\n      52: [\"MX\"],\n      53: [\"CU\"],\n      54: [\"AR\"],\n      55: [\"BR\"],\n      56: [\"CL\"],\n      57: [\"CO\"],\n      58: [\"VE\"],\n      60: [\"MY\"],\n      61: [\"AU\", \"CC\", \"CX\"],\n      62: [\"ID\"],\n      63: [\"PH\"],\n      64: [\"NZ\"],\n      65: [\"SG\"],\n      66: [\"TH\"],\n      81: [\"JP\"],\n      82: [\"KR\"],\n      84: [\"VN\"],\n      86: [\"CN\"],\n      90: [\"TR\"],\n      91: [\"IN\"],\n      92: [\"PK\"],\n      93: [\"AF\"],\n      94: [\"LK\"],\n      95: [\"MM\"],\n      98: [\"IR\"],\n      211: [\"SS\"],\n      212: [\"MA\", \"EH\"],\n      213: [\"DZ\"],\n      216: [\"TN\"],\n      218: [\"LY\"],\n      220: [\"GM\"],\n      221: [\"SN\"],\n      222: [\"MR\"],\n      223: [\"ML\"],\n      224: [\"GN\"],\n      225: [\"CI\"],\n      226: [\"BF\"],\n      227: [\"NE\"],\n      228: [\"TG\"],\n      229: [\"BJ\"],\n      230: [\"MU\"],\n      231: [\"LR\"],\n      232: [\"SL\"],\n      233: [\"GH\"],\n      234: [\"NG\"],\n      235: [\"TD\"],\n      236: [\"CF\"],\n      237: [\"CM\"],\n      238: [\"CV\"],\n      239: [\"ST\"],\n      240: [\"GQ\"],\n      241: [\"GA\"],\n      242: [\"CG\"],\n      243: [\"CD\"],\n      244: [\"AO\"],\n      245: [\"GW\"],\n      246: [\"IO\"],\n      247: [\"AC\"],\n      248: [\"SC\"],\n      249: [\"SD\"],\n      250: [\"RW\"],\n      251: [\"ET\"],\n      252: [\"SO\"],\n      253: [\"DJ\"],\n      254: [\"KE\"],\n      255: [\"TZ\"],\n      256: [\"UG\"],\n      257: [\"BI\"],\n      258: [\"MZ\"],\n      260: [\"ZM\"],\n      261: [\"MG\"],\n      262: [\"RE\", \"YT\"],\n      263: [\"ZW\"],\n      264: [\"NA\"],\n      265: [\"MW\"],\n      266: [\"LS\"],\n      267: [\"BW\"],\n      268: [\"SZ\"],\n      269: [\"KM\"],\n      290: [\"SH\", \"TA\"],\n      291: [\"ER\"],\n      297: [\"AW\"],\n      298: [\"FO\"],\n      299: [\"GL\"],\n      350: [\"GI\"],\n      351: [\"PT\"],\n      352: [\"LU\"],\n      353: [\"IE\"],\n      354: [\"IS\"],\n      355: [\"AL\"],\n      356: [\"MT\"],\n      357: [\"CY\"],\n      358: [\"FI\", \"AX\"],\n      359: [\"BG\"],\n      370: [\"LT\"],\n      371: [\"LV\"],\n      372: [\"EE\"],\n      373: [\"MD\"],\n      374: [\"AM\"],\n      375: [\"BY\"],\n      376: [\"AD\"],\n      377: [\"MC\"],\n      378: [\"SM\"],\n      380: [\"UA\"],\n      381: [\"RS\"],\n      382: [\"ME\"],\n      383: [\"XK\"],\n      385: [\"HR\"],\n      386: [\"SI\"],\n      387: [\"BA\"],\n      389: [\"MK\"],\n      420: [\"CZ\"],\n      421: [\"SK\"],\n      423: [\"LI\"],\n      500: [\"FK\"],\n      501: [\"BZ\"],\n      502: [\"GT\"],\n      503: [\"SV\"],\n      504: [\"HN\"],\n      505: [\"NI\"],\n      506: [\"CR\"],\n      507: [\"PA\"],\n      508: [\"PM\"],\n      509: [\"HT\"],\n      590: [\"GP\", \"BL\", \"MF\"],\n      591: [\"BO\"],\n      592: [\"GY\"],\n      593: [\"EC\"],\n      594: [\"GF\"],\n      595: [\"PY\"],\n      596: [\"MQ\"],\n      597: [\"SR\"],\n      598: [\"UY\"],\n      599: [\"CW\", \"BQ\"],\n      670: [\"TL\"],\n      672: [\"NF\"],\n      673: [\"BN\"],\n      674: [\"NR\"],\n      675: [\"PG\"],\n      676: [\"TO\"],\n      677: [\"SB\"],\n      678: [\"VU\"],\n      679: [\"FJ\"],\n      680: [\"PW\"],\n      681: [\"WF\"],\n      682: [\"CK\"],\n      683: [\"NU\"],\n      685: [\"WS\"],\n      686: [\"KI\"],\n      687: [\"NC\"],\n      688: [\"TV\"],\n      689: [\"PF\"],\n      690: [\"TK\"],\n      691: [\"FM\"],\n      692: [\"MH\"],\n      800: [\"001\"],\n      808: [\"001\"],\n      850: [\"KP\"],\n      852: [\"HK\"],\n      853: [\"MO\"],\n      855: [\"KH\"],\n      856: [\"LA\"],\n      870: [\"001\"],\n      878: [\"001\"],\n      880: [\"BD\"],\n      881: [\"001\"],\n      882: [\"001\"],\n      883: [\"001\"],\n      886: [\"TW\"],\n      888: [\"001\"],\n      960: [\"MV\"],\n      961: [\"LB\"],\n      962: [\"JO\"],\n      963: [\"SY\"],\n      964: [\"IQ\"],\n      965: [\"KW\"],\n      966: [\"SA\"],\n      967: [\"YE\"],\n      968: [\"OM\"],\n      970: [\"PS\"],\n      971: [\"AE\"],\n      972: [\"IL\"],\n      973: [\"BH\"],\n      974: [\"QA\"],\n      975: [\"BT\"],\n      976: [\"MN\"],\n      977: [\"NP\"],\n      979: [\"001\"],\n      992: [\"TJ\"],\n      993: [\"TM\"],\n      994: [\"AZ\"],\n      995: [\"GE\"],\n      996: [\"KG\"],\n      998: [\"UZ\"]\n    },\n    Da = {\n      AC: [, [,, \"(?:[01589]\\\\d|[46])\\\\d{4}\",,,,,,, [5, 6]], [,, \"6[2-467]\\\\d{3}\",,,, \"62889\",,, [5]], [,, \"4\\\\d{4}\",,,, \"40123\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AC\", 247, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:0[1-9]|[1589]\\\\d)\\\\d{4}\",,,, \"542011\",,, [6]],,, [,,,,,,,,, [-1]]],\n      AD: [, [,, \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",,,,,,, [6, 8, 9]], [,, \"[78]\\\\d{5}\",,,, \"712345\",,, [6]], [,, \"690\\\\d{6}|[356]\\\\d{5}\",,,, \"312345\",,, [6, 9]], [,, \"180[02]\\\\d{4}\",,,, \"18001234\",,, [8]], [,, \"[19]\\\\d{5}\",,,, \"912345\",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AD\", 376, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]],, [,,,,,,,,, [-1]],,, [,, \"1800\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AE: [, [,, \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, \"[2-4679][2-8]\\\\d{6}\",,,, \"22345678\",,, [8], [7]], [,, \"5[024-68]\\\\d{7}\",,,, \"501234567\",,, [9]], [,, \"400\\\\d{6}|800\\\\d{2,9}\",,,, \"800123456\"], [,, \"900[02]\\\\d{5}\",,,, \"900234567\",,, [9]], [,, \"700[05]\\\\d{5}\",,,, \"700012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AE\", 971, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"600[25]\\\\d{5}\",,,, \"600212345\",,, [9]],,, [,,,,,,,,, [-1]]],\n      AF: [, [,, \"[2-7]\\\\d{8}\",,,,,,, [9], [7]], [,, \"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\",,,, \"234567890\",,,, [7]], [,, \"7\\\\d{8}\",,,, \"701234567\",,,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AF\", 93, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AG: [, [,, \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\",,,, \"2684601234\",,,, [7]], [,, \"268(?:464|7(?:1[3-9]|[28]\\\\d|3[0246]|64|7[0-689]))\\\\d{4}\",,,, \"2684641234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"26848[01]\\\\d{4}\",,,, \"2684801234\",,,, [7]], \"AG\", 1, \"011\", \"1\",,, \"([457]\\\\d{6})$|1\", \"268$1\",,,,, [,, \"26840[69]\\\\d{4}\",,,, \"2684061234\",,,, [7]],, \"268\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AI: [, [,, \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"264(?:292|4(?:6[12]|9[78]))\\\\d{4}\",,,, \"2644612345\",,,, [7]], [,, \"264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\",,,, \"2642351234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"AI\", 1, \"011\", \"1\",,, \"([2457]\\\\d{6})$|1\", \"264$1\",,,,, [,, \"264724\\\\d{4}\",,,, \"2647241234\",,,, [7]],, \"264\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AL: [, [,, \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",,,,,,, [6, 7, 8, 9], [5]], [,, \"4505[0-2]\\\\d{3}|(?:[2358][16-9]\\\\d[2-9]|4410)\\\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\\\d))\\\\d{5}\",,,, \"22345678\",,, [8], [5, 6, 7]], [,, \"6(?:[78][2-9]|9\\\\d)\\\\d{6}\",,,, \"672123456\",,, [9]], [,, \"800\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"900[1-9]\\\\d\\\\d\",,,, \"900123\",,, [6]], [,, \"808[1-9]\\\\d\\\\d\",,,, \"808123\",,, [6]], [,, \"700[2-9]\\\\d{4}\",,,, \"70021234\",,, [8]], [,,,,,,,,, [-1]], \"AL\", 355, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AM: [, [,, \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",,,,,,, [8], [5, 6]], [,, \"(?:(?:1[0-25]|47)\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\\\d{5}\",,,, \"10123456\",,,, [5, 6]], [,, \"(?:33|4[1349]|55|77|88|9[13-9])\\\\d{6}\",,,, \"77123456\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"90[016]\\\\d{5}\",,,, \"90012345\"], [,, \"80[1-4]\\\\d{5}\",,,, \"80112345\"], [,,,,,,,,, [-1]], [,, \"60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\\\d|9[0-2])\\\\d{4}\",,,, \"60271234\"], \"AM\", 374, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2|3[12]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AO: [, [,, \"[29]\\\\d{8}\",,,,,,, [9]], [,, \"2\\\\d(?:[0134][25-9]|[25-9]\\\\d)\\\\d{5}\",,,, \"222123456\"], [,, \"9[1-79]\\\\d{7}\",,,, \"923123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AO\", 244, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AR: [, [,, \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",,,,,,, [10, 11], [6, 7, 8]], [,, \"3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|(?:(?:11[1-8]|670)\\\\d|2(?:21[2-6]|(?:3[06]|49)4|6(?:04|1[2-8])|9[17][4-6])|3(?:(?:36|64)4|4(?:1[2-8]|[25][4-6]|84)|5(?:1[2-9]|[38][4-6])|8(?:[17][2-6]|3[4-6]|8[3-68])))\\\\d{6}|(?:2(?:23|64|99)|3(?:43|85))[3-6]\\\\d{6}|(?:2(?:657|9(?:54|66))|3(?:487|7(?:55|77)|865))[2-8]\\\\d{5}|(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|80))[45]\\\\d{6}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|(?:2(?:2(?:62|81)|320|622|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|(?:2(?:284|3(?:02|23)|477|920)|3(?:4(?:46|[89]2)|541|878))[2-7]\\\\d{5}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|35|5[17])))[3-6]\\\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\",,,, \"1123456789\",,, [10], [6, 7, 8]], [,, \"93(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|(?:675\\\\d|9(?:11[1-8]\\\\d|2(?:21[2-6]|(?:3[06]|49)4|6(?:04|1[2-8])|9[17][4-6])|3(?:(?:36|64)4|4(?:1[2-8]|[25][4-6]|84)|5(?:1[2-9]|[38][4-6])|8(?:[17][2-6]|3[4-6]|8[3-68]))))\\\\d{6}|9(?:2(?:23|64|99)|3(?:43|85))[3-6]\\\\d{6}|9(?:2(?:657|9(?:54|66))|3(?:487|7(?:55|77)|865))[2-8]\\\\d{5}|9(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|80))[45]\\\\d{6}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|9(?:2(?:2(?:62|81)|320|622|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|9(?:2(?:284|3(?:02|23)|477|920)|3(?:4(?:46|[89]2)|541|878))[2-7]\\\\d{5}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|9(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|35|5[17])))[3-6]\\\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\",,,, \"91123456789\",,,, [6, 7, 8]], [,, \"800\\\\d{7,8}\",,,, \"8001234567\"], [,, \"60[04579]\\\\d{7}\",,,, \"6001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AR\", 54, \"00\", \"0\",,, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\",,, [[, \"(\\\\d{3})\", \"$1\", [\"0|1(?:0[0-35-7]|1[02-5]|2[015]|3[47]|4[478])|911\"]], [, \"(\\\\d{2})(\\\\d{4})\", \"$1-$2\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[1-8]\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1], [, \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\"]], [[, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1], [, \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"91\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9\"]]], [,,,,,,,,, [-1]],,, [,, \"810\\\\d{7}\",,,,,,, [10]], [,, \"810\\\\d{7}\",,,, \"8101234567\",,, [10]],,, [,,,,,,,,, [-1]]],\n      AS: [, [,, \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\",,,, \"6846221234\",,,, [7]], [,, \"684(?:2(?:48|5[2468]|7[26])|7(?:3[13]|70|82))\\\\d{4}\",,,, \"6847331234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"AS\", 1, \"011\", \"1\",,, \"([267]\\\\d{6})$|1\", \"684$1\",,,,, [,,,,,,,,, [-1]],, \"684\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AT: [, [,, \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [3]], [,, \"1(?:11\\\\d|[2-9]\\\\d{3,11})|(?:316|463|(?:51|66|73)2)\\\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{4,10}\",,,, \"1234567890\",,,, [3]], [,, \"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\",,,, \"664123456\",,, [7, 8, 9, 10, 11, 12, 13]], [,, \"800\\\\d{6,10}\",,,, \"800123456\",,, [9, 10, 11, 12, 13]], [,, \"(?:8[69][2-68]|9(?:0[01]|3[019]))\\\\d{6,10}\",,,, \"900123456\",,, [9, 10, 11, 12, 13]], [,, \"8(?:10|2[018])\\\\d{6,10}|828\\\\d{5}\",,,, \"810123456\",,, [8, 9, 10, 11, 12, 13]], [,,,,,,,,, [-1]], [,, \"5(?:0[1-9]|17|[79]\\\\d)\\\\d{2,10}|7[28]0\\\\d{6,10}\",,,, \"780123456\",,, [5, 6, 7, 8, 9, 10, 11, 12, 13]], \"AT\", 43, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})\", \"$1\", [\"14\"]], [, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{6})\", \"$1\", [\"[18]\"]], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AU: [, [,, \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",,,,,,, [5, 6, 7, 8, 9, 10, 12]], [,, \"(?:(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90)))\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|3\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",,,, \"212345678\",,, [9], [8]], [,, \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10, 12]], [,,,,,,,,, [-1]], [,, \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",,,, \"147101234\",,, [9]], \"AU\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"(183[12])|0\",, \"0011\",, [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"13\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"180\", \"1802\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\", \"$CC ($1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"130\"]]], [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\", \"$CC ($1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], [,, \"163\\\\d{2,6}\",,,, \"1631234\",,, [5, 6, 7, 8, 9]], 1,, [,, \"1(?:3(?:00\\\\d{5}|45[0-4])|802)\\\\d{3}|1[38]00\\\\d{6}|13\\\\d{4}\",,,,,,, [6, 7, 8, 10, 12]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AW: [, [,, \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",,,,,,, [7]], [,, \"5(?:2\\\\d|8[1-9])\\\\d{4}\",,,, \"5212345\"], [,, \"(?:290|5[69]\\\\d|6(?:[03]0|22|4[0-2]|[69]\\\\d)|7(?:[34]\\\\d|7[07])|9(?:6[45]|9[4-8]))\\\\d{4}\",,,, \"5601234\"], [,, \"800\\\\d{4}\",,,, \"8001234\"], [,, \"900\\\\d{4}\",,,, \"9001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:28\\\\d|501)\\\\d{4}\",,,, \"5011234\"], \"AW\", 297, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      AX: [, [,, \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, \"18[1-8]\\\\d{3,6}\",,,, \"181234567\",,, [6, 7, 8, 9]], [,, \"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\",,,, \"412345678\",,, [6, 7, 8, 9, 10]], [,, \"800\\\\d{4,6}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"[67]00\\\\d{5,6}\",,,, \"600123456\",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AX\", 358, \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"0\",,, \"0\",, \"00\",,,, [,,,,,,,,, [-1]],, \"18\", [,,,,,,,,, [-1]], [,, \"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\",,,, \"10112345\"],,, [,,,,,,,,, [-1]]],\n      AZ: [, [,, \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",,,,,,, [9], [7]], [,, \"(?:2[12]428|3655[02])\\\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\\\d{5}|(?:(?:1[28]|46)\\\\d|2(?:[014-6]2|[23]3))\\\\d{6}\",,,, \"123123456\",,,, [7]], [,, \"36554\\\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\\\d{7}\",,,, \"401234567\"], [,, \"88\\\\d{7}\",,,, \"881234567\"], [,, \"900200\\\\d{3}\",,,, \"900200123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AZ\", 994, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BA: [, [,, \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",,,,,,, [8, 9], [6]], [,, \"(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\\\d{5}\",,,, \"30212345\",,, [8], [6]], [,, \"6040\\\\d{5}|6(?:03|[1-356]|44|7\\\\d)\\\\d{6}\",,,, \"61123456\"], [,, \"8[08]\\\\d{6}\",,,, \"80123456\",,, [8]], [,, \"9[0246]\\\\d{6}\",,,, \"90123456\",,, [8]], [,, \"8[12]\\\\d{6}\",,,, \"82123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BA\", 387, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"703[235]0\\\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\\\d{4}\",,,, \"70341234\",,, [8]],,, [,,,,,,,,, [-1]]],\n      BB: [, [,, \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"246521[0369]\\\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7[35]7|9(?:1[89]|63))\\\\d{4}\",,,, \"2464123456\",,,, [7]], [,, \"246(?:(?:2(?:[3568]\\\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\\\d)|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d|52(?:1[147]|20))\\\\d{3}\",,,, \"2462501234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"(?:246976|900[2-9]\\\\d\\\\d)\\\\d{4}\",,,, \"9002123456\",,,, [7]], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"24631\\\\d{5}\",,,, \"2463101234\",,,, [7]], \"BB\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"246$1\",,,,, [,,,,,,,,, [-1]],, \"246\", [,,,,,,,,, [-1]], [,, \"246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\\\d|3[016]|53))\\\\d{4}\",,,, \"2464301234\",,,, [7]],,, [,,,,,,,,, [-1]]],\n      BD: [, [,, \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10]], [,, \"(?:4(?:31\\\\d\\\\d|423)|5222)\\\\d{3}(?:\\\\d{2})?|8332[6-9]\\\\d\\\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\\\d{4}|(?:2(?:[23]\\\\d|[45])\\\\d\\\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\\\d{5}|[59]1\\\\d{5}\",,,, \"27111234\"], [,, \"(?:1[13-9]\\\\d|644)\\\\d{7}|(?:3[78]|44|66)[02-9]\\\\d{7}\",,,, \"1812345678\",,, [10]], [,, \"80[03]\\\\d{7}\",,,, \"8001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"96(?:0[469]|1[0-47]|3[389]|43|6[69]|7[78])\\\\d{6}\",,,, \"9604123456\",,, [10]], \"BD\", 880, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|2[23]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BE: [, [,, \"4\\\\d{8}|[1-9]\\\\d{7}\",,,,,,, [8, 9]], [,, \"80[2-8]\\\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\\\d{6}\",,,, \"12345678\",,, [8]], [,, \"4[5-9]\\\\d{7}\",,,, \"470123456\",,, [9]], [,, \"800[1-9]\\\\d{4}\",,,, \"80012345\",,, [8]], [,, \"(?:70(?:2[0-57]|3[04-7]|44|6[4-69]|7[0579])|90\\\\d\\\\d)\\\\d{4}\",,,, \"90012345\",,, [8]], [,, \"7879\\\\d{4}\",,,, \"78791234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BE\", 32, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"78(?:0[57]|1[014-8]|2[25]|3[15-8]|48|[56]0|7[06-8]|9\\\\d)\\\\d{4}\",,,, \"78102345\",,, [8]],,, [,,,,,,,,, [-1]]],\n      BF: [, [,, \"[025-7]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\\\d|50|6[5-7]))\\\\d{4}\",,,, \"20491234\"], [,, \"(?:0[1-7]|5[0-8]|[67]\\\\d)\\\\d{6}\",,,, \"70123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BF\", 226, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BG: [, [,, \"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",,,,,,, [6, 7, 8, 9, 12], [4, 5]], [,, \"2\\\\d{5,7}|(?:43[1-6]|70[1-9])\\\\d{4,5}|(?:[36]\\\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\\\d{5,6}\",,,, \"2123456\",,, [6, 7, 8], [4, 5]], [,, \"(?:43[07-9]|99[69]\\\\d)\\\\d{5}|(?:8[7-9]|98)\\\\d{7}\",,,, \"43012345\",,, [8, 9]], [,, \"(?:00800\\\\d\\\\d|800)\\\\d{5}\",,,, \"80012345\",,, [8, 12]], [,, \"90\\\\d{6}\",,,, \"90123456\",,, [8]], [,, \"700\\\\d{5}\",,,, \"70012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BG\", 359, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BH: [, [,, \"[136-9]\\\\d{7}\",,,,,,, [8]], [,, \"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|55|7[7-9]|88)|9[69][69])|7(?:[07]\\\\d\\\\d|1(?:11|78)))\\\\d{4}\",,,, \"17001234\"], [,, \"(?:3(?:[0-79]\\\\d|8[0-57-9])\\\\d|6(?:3(?:00|33|6[16])|441|6(?:3[03-9]|[69]\\\\d|7[0-689])))\\\\d{4}\",,,, \"36001234\"], [,, \"8[02369]\\\\d{6}\",,,, \"80123456\"], [,, \"(?:87|9[0-8])\\\\d{6}\",,,, \"90123456\"], [,, \"84\\\\d{6}\",,,, \"84123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BH\", 973, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[02-4679]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BI: [, [,, \"(?:[267]\\\\d|31)\\\\d{6}\",,,,,,, [8]], [,, \"(?:22|31)\\\\d{6}\",,,, \"22201234\"], [,, \"(?:29|[67][125-9])\\\\d{6}\",,,, \"79561234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BI\", 257, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BJ: [, [,, \"(?:01\\\\d|[24-689])\\\\d{7}\",,,,,,, [8, 10]], [,, \"2090\\\\d{4}|(?:012\\\\d\\\\d|2(?:02|1[037]|2[45]|3[68]|4\\\\d))\\\\d{5}\",,,, \"0120211234\"], [,, \"(?:01(?:2[5-9]|[4-69]\\\\d)|4[0-8]|[56]\\\\d|9[013-9])\\\\d{6}\",,,, \"0195123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"857[58]\\\\d{4}\",,,, \"85751234\",,, [8]], \"BJ\", 229, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"81\\\\d{6}\",,,, \"81123456\",,, [8]],,, [,,,,,,,,, [-1]]],\n      BL: [, [,, \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\",,,, \"590271234\"], [,, \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\",,,, \"690001234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\",,,, \"976012345\"], \"BL\", 590, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BM: [, [,, \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"441(?:[46]\\\\d\\\\d|5(?:4\\\\d|60|89))\\\\d{4}\",,,, \"4414123456\",,,, [7]], [,, \"441(?:[2378]\\\\d|5[0-39]|9[02])\\\\d{5}\",,,, \"4413701234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"BM\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"441$1\",,,,, [,,,,,,,,, [-1]],, \"441\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BN: [, [,, \"[2-578]\\\\d{6}\",,,,,,, [7]], [,, \"22[0-7]\\\\d{4}|(?:2[013-9]|[34]\\\\d|5[0-25-9])\\\\d{5}\",,,, \"2345678\"], [,, \"(?:22[89]|[78]\\\\d\\\\d)\\\\d{4}\",,,, \"7123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5[34]\\\\d{5}\",,,, \"5345678\"], \"BN\", 673, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BO: [, [,, \"8001\\\\d{5}|(?:[2-467]\\\\d|50)\\\\d{6}\",,,,,,, [8, 9], [7]], [,, \"(?:2(?:2\\\\d\\\\d|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d\\\\d|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\\\d\\\\d|6(?:11|[24689]\\\\d|72)))\\\\d{4}\",,,, \"22123456\",,, [8], [7]], [,, \"[67]\\\\d{7}\",,,, \"71234567\",,, [8]], [,, \"8001[07]\\\\d{4}\",,,, \"800171234\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"50\\\\d{6}\",,,, \"50123456\",,, [8], [7]], \"BO\", 591, \"00(?:1\\\\d)?\", \"0\",,, \"0(1\\\\d)?\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[235]|4[46]\"],, \"0$CC $1\"], [, \"(\\\\d{8})\", \"$1\", [\"[67]\"],, \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"],, \"0$CC $1\"]],, [,,,,,,,,, [-1]],,, [,, \"8001[07]\\\\d{4}\",,,,,,, [9]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BQ: [, [,, \"(?:[34]1|7\\\\d)\\\\d{5}\",,,,,,, [7]], [,, \"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\\\d)\\\\d{3}\",,,, \"7151234\"], [,, \"(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\",,,, \"3181234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BQ\", 599, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"[347]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BR: [, [,, \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",,,,,,, [8, 9, 10, 11]], [,, \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\\\d{7}\",,,, \"1123456789\",,, [10], [8]], [,, \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\\\d)\\\\d{7}\",,,, \"11961234567\",,, [10, 11], [8, 9]], [,, \"800\\\\d{6,7}\",,,, \"800123456\",,, [9, 10]], [,, \"300\\\\d{6}|[59]00\\\\d{6,7}\",,,, \"300123456\",,, [9, 10]], [,, \"(?:30[03]\\\\d{3}|4(?:0(?:0\\\\d|20)|370))\\\\d{4}|300\\\\d{5}\",,,, \"40041234\",,, [8, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BR\", 55, \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"0\",,, \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\",,, [[, \"(\\\\d{3,6})\", \"$1\", [\"1(?:1[25-8]|2[357-9]|3[02-68]|4[12568]|5|6[0-8]|8[015]|9[0-47-9])|321|610\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-57]\", \"[2357]|4(?:[0-24-9]|3(?:[0-689]|7[1-9]))\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"9\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\", \"0 $CC ($1)\"]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\", \"0 $CC ($1)\"]], [,,,,,,,,, [-1]],,, [,, \"30(?:0\\\\d{5,7}|3\\\\d{7})|40(?:0\\\\d|20)\\\\d{4}|800\\\\d{6,7}\",,,,,,, [8, 9, 10]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BS: [, [,, \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-5]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\",,,, \"2423456789\",,,, [7]], [,, \"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|3[0-4]|[89]9))\\\\d{4}\",,,, \"2423591234\",,,, [7]], [,, \"242300\\\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\",,,, [7]], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"BS\", 1, \"011\", \"1\",,, \"([3-8]\\\\d{6})$|1\", \"242$1\",,,,, [,,,,,,,,, [-1]],, \"242\", [,,,,,,,,, [-1]], [,, \"242225\\\\d{4}\",,,, \"2422250123\"],,, [,,,,,,,,, [-1]]],\n      BT: [, [,, \"[17]\\\\d{7}|[2-8]\\\\d{6}\",,,,,,, [7, 8], [6]], [,, \"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\",,,, \"2345678\",,, [7], [6]], [,, \"(?:1[67]|77)\\\\d{6}\",,,, \"17123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BT\", 975, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[2-7]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BW: [, [,, \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",,,,,,, [7, 8, 10]], [,, \"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\\\d|7[013]|81)|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[013467]))\\\\d{4}\",,,, \"2401234\",,, [7]], [,, \"(?:321|7[1-8]\\\\d)\\\\d{5}\",,,, \"71123456\",,, [8]], [,, \"(?:0800|800\\\\d)\\\\d{6}\",,,, \"0800012345\",,, [10]], [,, \"90\\\\d{5}\",,,, \"9012345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"79(?:1(?:[0-2]\\\\d|3[0-3])|2[0-7]\\\\d)\\\\d{3}\",,,, \"79101234\",,, [8]], \"BW\", 267, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BY: [, [,, \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 11], [5]], [,, \"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d\\\\d)|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\",,,, \"152450911\",,, [9], [5, 6, 7]], [,, \"(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\\\d)\\\\d{6}\",,,, \"294911911\",,, [9]], [,, \"800\\\\d{3,7}|8(?:0[13]|20\\\\d)\\\\d{7}\",,,, \"8011234567\"], [,, \"(?:810|902)\\\\d{7}\",,,, \"9021234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"249\\\\d{6}\",,,, \"249123456\",,, [9]], \"BY\", 375, \"810\", \"8\",,, \"0|80?\",, \"8~10\",, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]],, [,,,,,,,,, [-1]],,, [,, \"800\\\\d{3,7}|(?:8(?:0[13]|10|20\\\\d)|902)\\\\d{7}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      BZ: [, [,, \"(?:0800\\\\d|[2-8])\\\\d{6}\",,,,,,, [7, 11]], [,, \"(?:2(?:[02]\\\\d|36|[68]0)|[3-58](?:[02]\\\\d|[68]0)|7(?:[02]\\\\d|32|[68]0))\\\\d{4}\",,,, \"2221234\",,, [7]], [,, \"6[0-35-7]\\\\d{5}\",,,, \"6221234\",,, [7]], [,, \"0800\\\\d{7}\",,,, \"08001234123\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BZ\", 501, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CA: [, [,, \"[2-9]\\\\d{9}|3\\\\d{6}\",,,,,,, [7, 10]], [,, \"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\\\d{6}\",,,, \"5062345678\",,, [10], [7]], [,, \"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\\\d{6}\",,,, \"5062345678\",,, [10], [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\",,, [10]], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\",,, [10]], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\\\d{6}\",,,, \"5002345678\",,, [10]], [,, \"600[2-9]\\\\d{6}\",,,, \"6002012345\",,, [10]], \"CA\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"310\\\\d{4}\",,,, \"3101234\",,, [7]],,, [,,,,,,,,, [-1]]],\n      CC: [, [,, \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",,,,,,, [6, 7, 8, 9, 10, 12]], [,, \"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",,,, \"891621234\",,, [9], [8]], [,, \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10, 12]], [,,,,,,,,, [-1]], [,, \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",,,, \"147101234\",,, [9]], \"CC\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"([59]\\\\d{7})$|0\", \"8$1\", \"0011\",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CD: [, [,, \"(?:(?:[189]|5\\\\d)\\\\d|2)\\\\d{7}|[1-68]\\\\d{6}\",,,,,,, [7, 8, 9, 10]], [,, \"(?:(?:12|573)\\\\d\\\\d|276)\\\\d{5}|[1-6]\\\\d{6}\",,,, \"1234567\"], [,, \"88\\\\d{5}|(?:8[0-69]|9[017-9])\\\\d{7}\",,,, \"991234567\",,, [7, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CD\", 243, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"5\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CF: [, [,, \"(?:[27]\\\\d{3}|8776)\\\\d{4}\",,,,,,, [8]], [,, \"2[12]\\\\d{6}\",,,, \"21612345\"], [,, \"7[024-7]\\\\d{6}\",,,, \"70012345\"], [,,,,,,,,, [-1]], [,, \"8776\\\\d{4}\",,,, \"87761234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CF\", 236, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CG: [, [,, \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",,,,,,, [9]], [,, \"222[1-589]\\\\d{5}\",,,, \"222123456\"], [,, \"026(?:1[0-5]|6[6-9])\\\\d{4}|0(?:[14-6]\\\\d\\\\d|2(?:40|5[5-8]|6[07-9]))\\\\d{5}\",,,, \"061234567\"], [,,,,,,,,, [-1]], [,, \"80[0-2]\\\\d{6}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CG\", 242, \"00\",,,,,,,, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CH: [, [,, \"8\\\\d{11}|[2-9]\\\\d{8}\",,,,,,, [9, 12]], [,, \"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\",,,, \"212345678\",,, [9]], [,, \"(?:6[89]|7[235-9])\\\\d{7}\",,,, \"781234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"90[016]\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"84[0248]\\\\d{6}\",,,, \"840123456\",,, [9]], [,, \"878\\\\d{6}\",,,, \"878123456\",,, [9]], [,,,,,,,,, [-1]], \"CH\", 41, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]],, [,, \"74[0248]\\\\d{6}\",,,, \"740123456\",,, [9]],,, [,,,,,,,,, [-1]], [,, \"5[18]\\\\d{7}\",,,, \"581234567\",,, [9]],,, [,, \"860\\\\d{9}\",,,, \"860123456789\",,, [12]]],\n      CI: [, [,, \"[02]\\\\d{9}\",,,,,,, [10]], [,, \"2(?:[15]\\\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\\\d{5}\",,,, \"2123456789\"], [,, \"0[157]\\\\d{8}\",,,, \"0123456789\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CI\", 225, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\", \"$1 $2 $3 $4\", [\"2\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CK: [, [,, \"[2-578]\\\\d{4}\",,,,,,, [5]], [,, \"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\",,,, \"21234\"], [,, \"[578]\\\\d{4}\",,,, \"71234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CK\", 682, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CL: [, [,, \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",,,,,,, [9, 10, 11]], [,, \"2(?:1982[0-6]|3314[05-9])\\\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\\\d\\\\d|3(?:[03467]\\\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\\\d\\\\d|9(?:3(?:[0-57-9]\\\\d\\\\d|6(?:0[02-9]|[1-9]\\\\d))|6(?:[0-8]\\\\d\\\\d|9(?:[02-79]\\\\d|1[05-9]))|7[1-9]\\\\d\\\\d|9(?:[03-9]\\\\d\\\\d|1(?:[0235-9]\\\\d|4[0-24-9])|2(?:[0-79]\\\\d|8[0-46-9]))))\\\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\\\d{7}\",,,, \"221234567\",,, [9]], [,, \"2(?:1982[0-6]|3314[05-9])\\\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\\\d\\\\d|3(?:[03467]\\\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\\\d\\\\d|9(?:3(?:[0-57-9]\\\\d\\\\d|6(?:0[02-9]|[1-9]\\\\d))|6(?:[0-8]\\\\d\\\\d|9(?:[02-79]\\\\d|1[05-9]))|7[1-9]\\\\d\\\\d|9(?:[03-9]\\\\d\\\\d|1(?:[0235-9]\\\\d|4[0-24-9])|2(?:[0-79]\\\\d|8[0-46-9]))))\\\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\\\d{7}\",,,, \"221234567\",,, [9]], [,, \"(?:123|8)00\\\\d{6}\",,,, \"800123456\",,, [9, 11]], [,,,,,,,,, [-1]], [,, \"600\\\\d{7,8}\",,,, \"6001234567\",,, [10, 11]], [,,,,,,,,, [-1]], [,, \"44\\\\d{7}\",,,, \"441234567\",,, [9]], \"CL\", 56, \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",,,,,,, 1, [[, \"(\\\\d{4})\", \"$1\", [\"1(?:[03-589]|21)|[29]0|78\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]], [[, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]], [,,,,,,,,, [-1]],,, [,, \"600\\\\d{7,8}\",,,,,,, [10, 11]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CM: [, [,, \"[26]\\\\d{8}|88\\\\d{6,7}\",,,,,,, [8, 9]], [,, \"2(?:22|33)\\\\d{6}\",,,, \"222123456\",,, [9]], [,, \"(?:24[23]|6(?:[25-9]\\\\d|40))\\\\d{6}\",,,, \"671234567\",,, [9]], [,, \"88\\\\d{6,7}\",,,, \"88012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CM\", 237, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CN: [, [,, \"(?:(?:1[03-689]|2\\\\d)\\\\d\\\\d|6)\\\\d{8}|1\\\\d{10}|[126]\\\\d{6}(?:\\\\d(?:\\\\d{2})?)?|86\\\\d{5,6}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{5,9}\",,,,,,, [7, 8, 9, 10, 11, 12], [5, 6]], [,, \"(?:10(?:[02-79]\\\\d\\\\d|[18](?:0[1-9]|[1-9]\\\\d))|2(?:[02-57-9]\\\\d{3}|1(?:[18](?:0[1-9]|[1-9]\\\\d)|[2-79]\\\\d\\\\d))|(?:41[03]|8078|9(?:78|94))\\\\d\\\\d)\\\\d{5}|(?:10|2[0-57-9])(?:1(?:00|23)\\\\d\\\\d|95\\\\d{3,4})|(?:41[03]|9(?:78|94))(?:100\\\\d\\\\d|95\\\\d{3,4})|8078123|(?:43[35]|754|851)\\\\d{7,8}|(?:43[35]|754|851)(?:1(?:00\\\\d|23)\\\\d|95\\\\d{3,4})|(?:3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\\\d{7}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{3})?|[1-9]\\\\d{5})|[13-9]\\\\d{6}|2(?:[0-24-9]\\\\d{5}|3\\\\d(?:\\\\d{4})?))|9(?:[0-46-9]\\\\d{6}|5\\\\d{3}(?:\\\\d(?:\\\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[24-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-8]\\\\d{6}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{2})?|[1-9]\\\\d{4})|[13-9]\\\\d{5}|2(?:[0-24-9]\\\\d{4}|3\\\\d(?:\\\\d{3})?))|9(?:[0-46-9]\\\\d{5}|5\\\\d{3,5}))\",,,, \"1012345678\",,, [7, 8, 9, 10, 11], [5, 6]], [,, \"1740[0-5]\\\\d{6}|1(?:[38]\\\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\\\d{8}\",,,, \"13123456789\",,, [11]], [,, \"(?:(?:10|21)8|8)00\\\\d{7}\",,,, \"8001234567\",,, [10, 12]], [,, \"16[08]\\\\d{5}\",,,, \"16812345\",,, [8]], [,, \"10(?:10\\\\d{4}|96\\\\d{3,4})|400\\\\d{7}|950\\\\d{7,8}|(?:2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\",,,, \"4001234567\",,, [7, 8, 9, 10, 11], [5, 6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CN\", 86, \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"0\",,, \"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",, \"00\",, [[, \"(\\\\d{5,6})\", \"$1\", [\"1(?:00|2[13])|9[56]\", \"1(?:00|2(?:1|39))|9[56]\", \"1(?:00|2(?:1|395))|9[56]\"]], [, \"(\\\\d{5,6})\", \"$1\", [\"1(?:0|23)|781|[1-9]12\", \"1(?:0|23)|7812|[1-9]123\", \"1(?:0|23(?:[0-8]|9[0-46-9]))|78123|[1-9]123\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]\", \"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\", \"1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])\", \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|[3-9]\", \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|1[03]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|50|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9]|78|94)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-9]|1(?:[013-9]|2[0-24-9]))\", \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|1[03]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:0(?:[0-689]|7[0-79])|1[01459]|2[0-489]|[46]|50|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9]|78|94)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-9]|1(?:[013-9]|2[0-24-9]))\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"16[08]\"]], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\", \"1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[0-8]|9[0-47-9])|6)|[3-9]\", \"1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|26|3(?:[0268]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23][0-8])|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:33|85[23]9)[0-46-9]|(?:2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:[0-8]|9[0-47-9])\", \"1(?:0[02-8]|[1-9])|2(?:[0-57-9][0-8]|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23](?:[02-8]|1[1-9]|9[0-46-9]))|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:10|2[0-57-9])9[0-47-9]|(?:101|58|85[23]10)[1-9]|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\",, 1]], [[, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]\", \"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\", \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\",, 1]], [,,,,,,,,, [-1]],,, [,, \"(?:(?:10|21)8|[48])00\\\\d{7}|950\\\\d{7,8}\",,,,,,, [10, 11, 12]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CO: [, [,, \"(?:46|60\\\\d\\\\d)\\\\d{6}|(?:1\\\\d|[39])\\\\d{9}\",,,,,,, [8, 10, 11], [4, 7]], [,, \"601055(?:[0-4]\\\\d|50)\\\\d\\\\d|6010(?:[0-4]\\\\d|5[0-4])\\\\d{4}|(?:46|60(?:[124-7][2-9]|8[1-9]))\\\\d{6}\",,,, \"6012345678\",,, [8, 10], [4, 7]], [,, \"333301[0-5]\\\\d{3}|3333(?:00|2[5-9]|[3-9]\\\\d)\\\\d{4}|(?:3(?:24[1-9]|3(?:00|3[0-24-9]))|9101)\\\\d{6}|3(?:0[0-5]|1\\\\d|2[0-3]|5[01]|70)\\\\d{7}\",,,, \"3211234567\",,, [10]], [,, \"1800\\\\d{7}\",,,, \"18001234567\",,, [11]], [,, \"(?:19(?:0[01]|4[78])|901)\\\\d{7}\",,,, \"19001234567\",,, [10, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CO\", 57, \"00(?:4(?:[14]4|56)|[579])\", \"0\",,, \"0([3579]|4(?:[14]4|56))?\",,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"46\"]], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6|90\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"],, \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\"]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"46\"]], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6|90\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"],, \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1 $2 $3\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CR: [, [,, \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",,,,,,, [8, 10]], [,, \"210[7-9]\\\\d{4}|2(?:[024-7]\\\\d|1[1-9])\\\\d{5}\",,,, \"22123456\",,, [8]], [,, \"(?:3005\\\\d|6500[01])\\\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\\\d{6}\",,,, \"83123456\",,, [8]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"90[059]\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:210[0-6]|4\\\\d{3}|5100)\\\\d{4}\",,,, \"40001234\",,, [8]], \"CR\", 506, \"00\",,,, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\",,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CU: [, [,, \"(?:[2-7]|8\\\\d\\\\d)\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\",,,,,,, [6, 7, 8, 10], [4, 5]], [,, \"(?:3[23]|4[89])\\\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\\\d)\\\\d{6}|(?:2[1-4]|4[1257]|7\\\\d)\\\\d{5,6}\",,,, \"71234567\",,,, [4, 5]], [,, \"(?:5\\\\d|6[2-4])\\\\d{6}\",,,, \"51234567\",,, [8]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,,,,,,,,, [-1]], [,, \"807\\\\d{7}\",,,, \"8071234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CU\", 53, \"119\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[56]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CV: [, [,, \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",,,,,,, [7]], [,, \"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\",,,, \"2211234\"], [,, \"(?:36|5[1-389]|9\\\\d)\\\\d{5}\",,,, \"9911234\"], [,, \"800\\\\d{4}\",,,, \"8001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:3[3-5]|4[356])\\\\d{5}\",,,, \"3401234\"], \"CV\", 238, \"0\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-589]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CW: [, [,, \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",,,,,,, [7, 8]], [,, \"9(?:4(?:3[0-5]|4[14]|6\\\\d)|50\\\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\\\d|7[01]|8[57-9]))\\\\d{4}\",,,, \"94351234\"], [,, \"953[01]\\\\d{4}|9(?:5[12467]|6[5-9])\\\\d{5}\",,,, \"95181234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"60[0-2]\\\\d{4}\",,,, \"6001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CW\", 599, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]],, [,, \"955\\\\d{5}\",,,, \"95581234\",,, [8]], 1, \"[69]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CX: [, [,, \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",,,,,,, [6, 7, 8, 9, 10, 12]], [,, \"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",,,, \"891641234\",,, [9], [8]], [,, \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10, 12]], [,,,,,,,,, [-1]], [,, \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",,,, \"147101234\",,, [9]], \"CX\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"([59]\\\\d{7})$|0\", \"8$1\", \"0011\",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      CY: [, [,, \"(?:[279]\\\\d|[58]0)\\\\d{6}\",,,,,,, [8]], [,, \"2[2-6]\\\\d{6}\",,,, \"22345678\"], [,, \"9(?:10|[4-79]\\\\d)\\\\d{5}\",,,, \"96123456\"], [,, \"800\\\\d{5}\",,,, \"80001234\"], [,, \"90[09]\\\\d{5}\",,,, \"90012345\"], [,, \"80[1-9]\\\\d{5}\",,,, \"80112345\"], [,, \"700\\\\d{5}\",,,, \"70012345\"], [,,,,,,,,, [-1]], \"CY\", 357, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:50|77)\\\\d{6}\",,,, \"77123456\"],,, [,,,,,,,,, [-1]]],\n      CZ: [, [,, \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",,,,,,, [9, 10, 11, 12]], [,, \"(?:2\\\\d|3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\",,,, \"212345678\",,, [9]], [,, \"(?:60[1-8]\\\\d|7(?:0(?:[2-5]\\\\d|60)|19[01]|[2379]\\\\d\\\\d))\\\\d{5}\",,,, \"601123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"9(?:0[05689]|76)\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"8[134]\\\\d{7}\",,,, \"811234567\",,, [9]], [,, \"70[01]\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"9[17]0\\\\d{6}\",,,, \"910123456\",,, [9]], \"CZ\", 420, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"9(?:5\\\\d|7[2-4])\\\\d{6}\",,,, \"972123456\",,, [9]],,, [,, \"9(?:3\\\\d{9}|6\\\\d{7,10})\",,,, \"93123456789\"]],\n      DE: [, [,, \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 3]], [,, \"32\\\\d{9,11}|49[1-6]\\\\d{10}|322\\\\d{6}|49[0-7]\\\\d{3,9}|(?:[34]0|[68]9)\\\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\\\d|[589][0-7]|6[0-8]|7[0-467]))\\\\d{3,12}\",,,, \"30123456\",,, [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 3, 4]], [,, \"16[023]\\\\d{7,8}|1(?:5310|7[0-57-9]\\\\d)\\\\d{6}|1(?:5[0-25-9]|76)\\\\d{8}\",,,, \"15123456789\",,, [10, 11]], [,, \"800\\\\d{7,12}\",,,, \"8001234567890\",,, [10, 11, 12, 13, 14, 15]], [,, \"(?:137[7-9]|900(?:[135]|9\\\\d))\\\\d{6}\",,,, \"9001234567\",,, [10, 11]], [,, \"180\\\\d{5,11}|13(?:7[1-6]\\\\d\\\\d|8)\\\\d{4}\",,,, \"18012345\",,, [7, 8, 9, 10, 11, 12, 13, 14]], [,, \"700\\\\d{8}\",,,, \"70012345678\",,, [11]], [,,,,,,,,, [-1]], \"DE\", 49, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[03568]\", \"15(?:[0568]|31)\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]],, [,, \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\",,,, \"16412345\",,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]], [,, \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\",,,, \"18500123456\",,, [8, 9, 10, 11, 12, 13, 14]],,, [,, \"1(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\\\d{7,8}|15(?:(?:[03-68]00|113)\\\\d|2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}\",,,, \"177991234567\",,, [12, 13]]],\n      DJ: [, [,, \"(?:2\\\\d|77)\\\\d{6}\",,,,,,, [8]], [,, \"2(?:1[2-5]|7[45])\\\\d{5}\",,,, \"21360003\"], [,, \"77\\\\d{6}\",,,, \"77831001\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"DJ\", 253, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      DK: [, [,, \"[2-9]\\\\d{7}\",,,,,,, [8]], [,, \"(?:(?:2\\\\d|9[1-46-9])\\\\d|3(?:[0-37]\\\\d|4[013]|5[0-58]|6[01347-9]|8[0-8]|9[0-79])|4(?:[0-25]\\\\d|[34][02-9]|6[013-579]|7[013579]|8[0-47]|9[0-27])|5(?:[0-36]\\\\d|4[0146-9]|5[03-57-9]|7[0568]|8[0-358]|9[0-69])|6(?:[013578]\\\\d|2[0-68]|4[02-8]|6[01689]|9[015689])|7(?:[0-69]\\\\d|7[03-9]|8[0147])|8(?:[16-9]\\\\d|2[0-58]))\\\\d{5}\",,,, \"32123456\"], [,, \"(?:[2-7]\\\\d|8[126-9]|9[1-46-9])\\\\d{6}\",,,, \"34412345\"], [,, \"80\\\\d{6}\",,,, \"80123456\"], [,, \"90\\\\d{6}\",,,, \"90123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"DK\", 45, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      DM: [, [,, \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\\\d{4}\",,,, \"7674201234\",,,, [7]], [,, \"767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\\\d{4}\",,,, \"7672251234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"DM\", 1, \"011\", \"1\",,, \"([2-7]\\\\d{6})$|1\", \"767$1\",,,,, [,,,,,,,,, [-1]],, \"767\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      DO: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"8(?:[04]9[2-9]\\\\d\\\\d|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d\\\\d|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\\\d{4}\",,,, \"8092345678\",,,, [7]], [,, \"8[024]9[2-9]\\\\d{6}\",,,, \"8092345678\",,,, [7]], [,, \"8(?:00(?:14|[2-9]\\\\d)|(?:33|44|55|66|77|88)[2-9]\\\\d)\\\\d{5}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"DO\", 1, \"011\", \"1\",,, \"1\",,,,,, [,,,,,,,,, [-1]],, \"8001|8[024]9\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      DZ: [, [,, \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",,,,,,, [8, 9]], [,, \"9619\\\\d{5}|(?:1\\\\d|2[013-79]|3[0-8]|4[013-689])\\\\d{6}\",,,, \"12345678\"], [,, \"(?:5(?:4[0-29]|5\\\\d|6[0-3])|6(?:[569]\\\\d|7[0-6])|7[7-9]\\\\d)\\\\d{6}\",,,, \"551234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"80[3-689]1\\\\d{5}\",,,, \"808123456\",,, [9]], [,, \"80[12]1\\\\d{5}\",,,, \"801123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"98[23]\\\\d{6}\",,,, \"983123456\",,, [9]], \"DZ\", 213, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      EC: [, [,, \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",,,,,,, [8, 9, 10, 11], [7]], [,, \"[2-7][2-7]\\\\d{6}\",,,, \"22123456\",,, [8], [7]], [,, \"964[0-2]\\\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\\\d)\\\\d{6}\",,,, \"991234567\",,, [9]], [,, \"1800\\\\d{7}|1[78]00\\\\d{6}\",,,, \"18001234567\",,, [10, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"[2-7]890\\\\d{4}\",,,, \"28901234\",,, [8]], \"EC\", 593, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-7]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-7]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      EE: [, [,, \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",,,,,,, [7, 8, 10]], [,, \"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\",,,, \"3212345\",,, [7]], [,, \"(?:5\\\\d{5}|8(?:1(?:0(?:0(?:00|[178]\\\\d)|[3-9]\\\\d\\\\d)|(?:1(?:0[2-6]|1\\\\d)|(?:2[0-59]|[3-79]\\\\d)\\\\d)\\\\d)|2(?:0(?:0(?:00|4\\\\d)|(?:19|[2-7]\\\\d)\\\\d)|(?:(?:[124-69]\\\\d|3[5-9])\\\\d|7(?:[0-79]\\\\d|8[13-9])|8(?:[2-6]\\\\d|7[01]))\\\\d)|[349]\\\\d{4}))\\\\d\\\\d|5(?:(?:[02]\\\\d|5[0-478])\\\\d|1(?:[0-8]\\\\d|95)|6(?:4[0-4]|5[1-589]))\\\\d{3}\",,,, \"51234567\",,, [7, 8]], [,, \"800(?:(?:0\\\\d\\\\d|1)\\\\d|[2-9])\\\\d{3}\",,,, \"80012345\"], [,, \"(?:40\\\\d\\\\d|900)\\\\d{4}\",,,, \"9001234\",,, [7, 8]], [,,,,,,,,, [-1]], [,, \"70[0-2]\\\\d{5}\",,,, \"70012345\",,, [8]], [,,,,,,,,, [-1]], \"EE\", 372, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,, \"800[2-9]\\\\d{3}\",,,,,,, [7]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      EG: [, [,, \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"13[23]\\\\d{6}|(?:15|57)\\\\d{6,7}|(?:2\\\\d|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\\\d{7}\",,,, \"234567890\",,, [8, 9], [6, 7]], [,, \"1[0-25]\\\\d{8}\",,,, \"1001234567\",,, [10]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"900\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"EG\", 20, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{8})\", \"$1 $2\", [\"1\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      EH: [, [,, \"[5-8]\\\\d{8}\",,,,,,, [9]], [,, \"528[89]\\\\d{5}\",,,, \"528812345\"], [,, \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\",,,, \"650123456\"], [,, \"80[0-7]\\\\d{6}\",,,, \"801234567\"], [,, \"89\\\\d{7}\",,,, \"891234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\",,,, \"592401234\"], \"EH\", 212, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],, \"528[89]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ER: [, [,, \"[178]\\\\d{6}\",,,,,,, [7], [6]], [,, \"(?:1(?:1[12568]|[24]0|55|6[146])|8\\\\d\\\\d)\\\\d{4}\",,,, \"8370362\",,,, [6]], [,, \"(?:17[1-3]|7\\\\d\\\\d)\\\\d{4}\",,,, \"7123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ER\", 291, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ES: [, [,, \"[5-9]\\\\d{8}\",,,,,,, [9]], [,, \"96906(?:0[0-8]|1[1-9]|[2-9]\\\\d)\\\\d\\\\d|9(?:69(?:0[0-57-9]|[1-9]\\\\d)|73(?:[0-8]\\\\d|9[1-9]))\\\\d{4}|(?:8(?:[1356]\\\\d|[28][0-8]|[47][1-9])|9(?:[135]\\\\d|[268][0-8]|4[1-9]|7[124-9]))\\\\d{6}\",,,, \"810123456\"], [,, \"(?:590[16]00\\\\d|9(?:6906(?:09|10)|7390\\\\d\\\\d))\\\\d\\\\d|(?:6\\\\d|7[1-48])\\\\d{7}\",,,, \"612345678\"], [,, \"[89]00\\\\d{6}\",,,, \"800123456\"], [,, \"80[367]\\\\d{6}\",,,, \"803123456\"], [,, \"90[12]\\\\d{6}\",,,, \"901123456\"], [,, \"70\\\\d{7}\",,,, \"701234567\"], [,,,,,,,,, [-1]], \"ES\", 34, \"00\",,,,,,,, [[, \"(\\\\d{4})\", \"$1\", [\"905\"]], [, \"(\\\\d{6})\", \"$1\", [\"[79]9\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"51\\\\d{7}\",,,, \"511234567\"],,, [,,,,,,,,, [-1]]],\n      ET: [, [,, \"(?:11|[2-579]\\\\d)\\\\d{7}\",,,,,,, [9], [7]], [,, \"11667[01]\\\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8]|7\\\\d)|5(?:1[578]|44|5[0-4])|6(?:1[578]|2[69]|39|4[5-7]|5[0-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\",,,, \"111112345\",,,, [7]], [,, \"700[1-9]\\\\d{5}|(?:7(?:0[1-9]|1[0-8]|22|77|86|99)|9\\\\d\\\\d)\\\\d{6}\",,,, \"911234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ET\", 251, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      FI: [, [,, \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, \"1[3-7][1-8]\\\\d{3,6}|(?:19[1-8]|[23568][1-8]\\\\d|9(?:00|[1-8]\\\\d))\\\\d{2,6}\",,,, \"131234567\",,, [5, 6, 7, 8, 9]], [,, \"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\",,,, \"412345678\",,, [6, 7, 8, 9, 10]], [,, \"800\\\\d{4,6}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"[67]00\\\\d{5,6}\",,,, \"600123456\",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FI\", 358, \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{5})\", \"$1\", [\"75[12]\"], \"0$1\"], [, \"(\\\\d{5})\", \"$1\", [\"20[2-59]\"], \"0$1\"], [, \"(\\\\d{6})\", \"$1\", [\"11\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]0|[68])0|70[07-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[14]|2[09]|50|7[135]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"]], [[, \"(\\\\d{5})\", \"$1\", [\"20[2-59]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]0|[68])0|70[07-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[14]|2[09]|50|7[135]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"]], [,,,,,,,,, [-1]], 1, \"1[03-79]|[2-9]\", [,, \"20(?:2[023]|9[89])\\\\d{1,6}|(?:60[12]\\\\d|7099)\\\\d{4,5}|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:[1-3]00|7(?:0[1-5]\\\\d\\\\d|5[03-9]))\\\\d{3,7}\"], [,, \"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\",,,, \"10112345\"],,, [,,,,,,,,, [-1]]],\n      FJ: [, [,, \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",,,,,,, [7, 11]], [,, \"603\\\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\\\d{5}\",,,, \"3212345\",,, [7]], [,, \"(?:[279]\\\\d|45|5[01568]|8[034679])\\\\d{5}\",,,, \"7012345\",,, [7]], [,, \"0800\\\\d{7}\",,,, \"08001234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FJ\", 679, \"0(?:0|52)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      FK: [, [,, \"[2-7]\\\\d{4}\",,,,,,, [5]], [,, \"[2-47]\\\\d{4}\",,,, \"31234\"], [,, \"[56]\\\\d{4}\",,,, \"51234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FK\", 500, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      FM: [, [,, \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",,,,,,, [7]], [,, \"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\\\d)\\\\d)\\\\d{3}\",,,, \"3201234\"], [,, \"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\\\d)\\\\d)\\\\d{3}\",,,, \"3501234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FM\", 691, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      FO: [, [,, \"[2-9]\\\\d{5}\",,,,,,, [6]], [,, \"(?:20|[34]\\\\d|8[19])\\\\d{4}\",,,, \"201234\"], [,, \"(?:[27][1-9]|5\\\\d|9[16])\\\\d{4}\",,,, \"211234\"], [,, \"80[257-9]\\\\d{3}\",,,, \"802123\"], [,, \"90(?:[13-5][15-7]|2[125-7]|9\\\\d)\\\\d\\\\d\",,,, \"901123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:6[0-36]|88)\\\\d{4}\",,,, \"601234\"], \"FO\", 298, \"00\",,,, \"(10(?:01|[12]0|88))\",,,, [[, \"(\\\\d{6})\", \"$1\", [\"[2-9]\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      FR: [, [,, \"[1-9]\\\\d{8}\",,,,,,, [9]], [,, \"(?:26[013-9]|59[1-35-9])\\\\d{6}|(?:[13]\\\\d|2[0-57-9]|4[1-9]|5[0-8])\\\\d{7}\",,,, \"123456789\"], [,, \"(?:6(?:[0-24-8]\\\\d|3[0-8]|9[589])|7[3-9]\\\\d)\\\\d{6}\",,,, \"612345678\"], [,, \"80[0-5]\\\\d{6}\",,,, \"801234567\"], [,, \"836(?:0[0-36-9]|[1-9]\\\\d)\\\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\\\d|8[0-35-9])\\\\d{6}\",,,, \"891123456\"], [,, \"8(?:1[01]|2[0156]|4[024]|84)\\\\d{6}\",,,, \"884012345\"], [,,,,,,,,, [-1]], [,, \"9\\\\d{8}\",,,, \"912345678\"], \"FR\", 33, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})\", \"$1\", [\"10\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"80[6-9]\\\\d{6}\",,,, \"806123456\"],,, [,,,,,,,,, [-1]]],\n      GA: [, [,, \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",,,,,,, [7, 8]], [,, \"[01]1\\\\d{6}\",,,, \"01441234\",,, [8]], [,, \"(?:(?:0[2-7]|7[467])\\\\d|6(?:0[0-4]|10|[256]\\\\d))\\\\d{5}|[2-7]\\\\d{6}\",,,, \"06031234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GA\", 241, \"00\",,,, \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\",,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GB: [, [,, \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",,,,,,, [7, 9, 10], [4, 5, 6, 8]], [,, \"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0-35])|4(?:(?:[0-5]\\\\d|70)\\\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-3]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",,,, \"1212345678\",,, [9, 10], [4, 5, 6, 7, 8]], [,, \"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",,,, \"7400123456\",,, [10]], [,, \"80[08]\\\\d{7}|800\\\\d{6}|8001111\",,,, \"8001234567\"], [,, \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",,,, \"9012345678\",,, [7, 10]], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], [,, \"56\\\\d{8}\",,,, \"5612345678\",,, [10]], \"GB\", 44, \"00\", \"0\", \" x\",, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[02-9])\", \"[25]|7(?:0|6(?:[03-9]|2[356]))\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]],, [,, \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",,,, \"7640123456\",,, [10]], 1,, [,,,,,,,,, [-1]], [,, \"(?:3[0347]|55)\\\\d{8}\",,,, \"5512345678\",,, [10]],,, [,,,,,,,,, [-1]]],\n      GD: [, [,, \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-4]|5[579]|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\",,,, \"4732691234\",,,, [7]], [,, \"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|49|5[68])|5(?:2[01]|3[3-8])|901)\\\\d{4}\",,,, \"4734031234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"GD\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"473$1\",,,,, [,,,,,,,,, [-1]],, \"473\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GE: [, [,, \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",,,,,,, [9], [6, 7]], [,, \"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\",,,, \"322123456\",,,, [6, 7]], [,, \"5(?:(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\\\d|22252[0-4])\\\\d\\\\d|5(?:0(?:0[17]0|505)|1(?:0[01]0|1(?:07|33|51))|2(?:0[02]0|2[25]2)|3(?:0[03]0|3[35]3)|(?:40[04]|900)0|5222)[0-4]\\\\d{3}|(?:5(?:0(?:0(?:0\\\\d|11|22|3[0-6]|44|5[05]|77|88|9[09])|(?:[14]\\\\d|77)\\\\d|22[02])|1(?:1(?:[03][01]|[124]\\\\d|5[2-6]|7[0-4])|4\\\\d\\\\d)|[23]555|4(?:4\\\\d\\\\d|555)|5(?:[0157-9]\\\\d\\\\d|200|333|444)|6[89]\\\\d\\\\d|7(?:[0147-9]\\\\d\\\\d|5(?:00|[57]5))|8(?:0(?:[018]\\\\d|2[0-4])|5(?:55|8[89])|8(?:55|88))|9(?:090|[1-35-9]\\\\d\\\\d))|790\\\\d\\\\d)\\\\d{4}\",,,, \"555123456\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"70[67]\\\\d{6}\",,,, \"706123456\"], \"GE\", 995, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"70[67]\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GF: [, [,, \"(?:[56]94\\\\d|7093)\\\\d{5}|(?:80|9\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"594(?:[02-49]\\\\d|1[0-5]|5[6-9]|6[0-3]|80)\\\\d{4}\",,,, \"594101234\"], [,, \"(?:694(?:[0-249]\\\\d|3[0-8])|7093[0-3])\\\\d{4}\",,,, \"694201234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:(?:396|76\\\\d)\\\\d|476[0-5])\\\\d{4}\",,,, \"976012345\"], \"GF\", 594, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]|9[47]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[89]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GG: [, [,, \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",,,,,,, [7, 9, 10], [6]], [,, \"1481[25-9]\\\\d{5}\",,,, \"1481256789\",,, [10], [6]], [,, \"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",,,, \"7781123456\",,, [10]], [,, \"80[08]\\\\d{7}|800\\\\d{6}|8001111\",,,, \"8001234567\"], [,, \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",,,, \"9012345678\",,, [7, 10]], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], [,, \"56\\\\d{8}\",,,, \"5612345678\",,, [10]], \"GG\", 44, \"00\", \"0\",,, \"([25-9]\\\\d{5})$|0\", \"1481$1\",,,,, [,, \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",,,, \"7640123456\",,, [10]],,, [,,,,,,,,, [-1]], [,, \"(?:3[0347]|55)\\\\d{8}\",,,, \"5512345678\",,, [10]],,, [,,,,,,,,, [-1]]],\n      GH: [, [,, \"(?:[235]\\\\d{3}|800)\\\\d{5}\",,,,,,, [8, 9], [7]], [,, \"3082[0-5]\\\\d{4}|3(?:0(?:[237]\\\\d|8[01])|[167](?:2[0-6]|7\\\\d|80)|2(?:2[0-5]|7\\\\d|80)|3(?:2[0-3]|7\\\\d|80)|4(?:2[013-9]|3[01]|7\\\\d|80)|5(?:2[0-7]|7\\\\d|80)|8(?:2[0-2]|7\\\\d|80)|9(?:[28]0|7\\\\d))\\\\d{5}\",,,, \"302345678\",,, [9], [7]], [,, \"(?:2(?:[0346-9]\\\\d|5[67])|5(?:[03-7]\\\\d|9[1-9]))\\\\d{6}\",,,, \"231234567\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GH\", 233, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[237]|8[0-2]\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,, \"800\\\\d{5}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GI: [, [,, \"(?:[25]\\\\d|60)\\\\d{6}\",,,,,,, [8]], [,, \"2190[0-2]\\\\d{3}|2(?:0(?:[02]\\\\d|3[01])|16[24-9]|2[2-5]\\\\d)\\\\d{4}\",,,, \"20012345\"], [,, \"5251[0-4]\\\\d{3}|(?:5(?:[146-8]\\\\d\\\\d|250)|60(?:1[01]|6\\\\d))\\\\d{4}\",,,, \"57123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GI\", 350, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GL: [, [,, \"(?:19|[2-689]\\\\d|70)\\\\d{4}\",,,,,,, [6]], [,, \"(?:19|3[1-7]|[68][1-9]|70|9\\\\d)\\\\d{4}\",,,, \"321000\"], [,, \"[245]\\\\d{5}\",,,, \"221234\"], [,, \"80\\\\d{4}\",,,, \"801234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3[89]\\\\d{4}\",,,, \"381234\"], \"GL\", 299, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GM: [, [,, \"[2-9]\\\\d{6}\",,,,,,, [7]], [,, \"(?:4(?:[23]\\\\d\\\\d|4(?:1[024679]|[6-9]\\\\d))|5(?:5(?:3\\\\d|4[0-7])|6[67]\\\\d|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\",,,, \"5661234\"], [,, \"(?:[23679]\\\\d|4[015]|5[0-489])\\\\d{5}\",,,, \"3012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GM\", 220, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GN: [, [,, \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",,,,,,, [8, 9]], [,, \"3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\\\d\\\\d)\\\\d{4}\",,,, \"30241234\",,, [8]], [,, \"6[0-356]\\\\d{7}\",,,, \"601123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"722\\\\d{6}\",,,, \"722123456\",,, [9]], \"GN\", 224, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GP: [, [,, \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\",,,, \"590201234\"], [,, \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\",,,, \"690001234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\",,,, \"976012345\"], \"GP\", 590, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GQ: [, [,, \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",,,,,,, [9]], [,, \"33[0-24-9]\\\\d[46]\\\\d{4}|3(?:33|5\\\\d)\\\\d[7-9]\\\\d{4}\",,,, \"333091234\"], [,, \"(?:222|55\\\\d)\\\\d{6}\",,,, \"222123456\"], [,, \"80\\\\d[1-9]\\\\d{5}\",,,, \"800123456\"], [,, \"90\\\\d[1-9]\\\\d{5}\",,,, \"900123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GQ\", 240, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GR: [, [,, \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",,,,,,, [10, 11, 12]], [,, \"2(?:1\\\\d\\\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\",,,, \"2123456789\",,, [10]], [,, \"68[57-9]\\\\d{7}|(?:69|94)\\\\d{8}\",,,, \"6912345678\",,, [10]], [,, \"800\\\\d{7,9}\",,,, \"8001234567\"], [,, \"90[19]\\\\d{7}\",,,, \"9091234567\",,, [10]], [,, \"8(?:0[16]|12|[27]5|50)\\\\d{7}\",,,, \"8011234567\",,, [10]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], [,,,,,,,,, [-1]], \"GR\", 30, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"5005000\\\\d{3}\",,,, \"5005000123\",,, [10]],,, [,,,,,,,,, [-1]]],\n      GT: [, [,, \"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\",,,,,,, [8, 11]], [,, \"[267][2-9]\\\\d{6}\",,,, \"22456789\",,, [8]], [,, \"(?:[3-5]\\\\d\\\\d|80[0-4])\\\\d{5}\",,,, \"51234567\",,, [8]], [,, \"18[01]\\\\d{8}\",,,, \"18001112222\",,, [11]], [,, \"19\\\\d{9}\",,,, \"19001112222\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GT\", 502, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-8]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GU: [, [,, \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"671(?:2\\\\d\\\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[478])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\",,,, \"6713001234\",,,, [7]], [,, \"671(?:2\\\\d\\\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[478])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\",,,, \"6713001234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"GU\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"671$1\",, 1,,, [,,,,,,,,, [-1]],, \"671\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GW: [, [,, \"[49]\\\\d{8}|4\\\\d{6}\",,,,,,, [7, 9]], [,, \"443\\\\d{6}\",,,, \"443201234\",,, [9]], [,, \"9(?:5\\\\d|6[569]|77)\\\\d{6}\",,,, \"955012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"40\\\\d{5}\",,,, \"4012345\",,, [7]], \"GW\", 245, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      GY: [, [,, \"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\",,,,,,, [7]], [,, \"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|50[0-6]|77[1-57])\\\\d{4}\",,,, \"2201234\"], [,, \"510\\\\d{4}|(?:6\\\\d|7[0-5])\\\\d{5}\",,,, \"6091234\"], [,, \"(?:289|8(?:00|6[28]|88|99))\\\\d{4}\",,,, \"2891234\"], [,, \"9008\\\\d{3}\",,,, \"9008123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"515\\\\d{4}\",,,, \"5151234\"], \"GY\", 592, \"001\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      HK: [, [,, \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",,,,,,, [5, 6, 7, 8, 9, 11]], [,, \"(?:2(?:[13-9]\\\\d|2[013-9])\\\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\\\d|8(?:4[0-8]|[579]\\\\d|6[0-2]))|58(?:0[1-9]|1[2-9]))\\\\d{4}\",,,, \"21234567\",,, [8]], [,, \"(?:4(?:44[0-25-9]|6(?:1[0-7]|4[0-57-9]|6[0-4])|7(?:4[0-2]|6[0-5]))|5(?:73[0-6]|95[0-8])|6(?:26[013-8]|66[0-3])|70(?:7[1-8]|8[0-4])|84(?:4[0-2]|8[0-35-9])|9(?:29[013-9]|39[014-9]|59[0-4]|899))\\\\d{4}|(?:4(?:4[0-35-9]|6[02357-9]|7[05])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\\\d|[268][0-57-9]|7[0-79])|70[1-49]|84[0-39]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\\\d))\\\\d{5}\",,,, \"51234567\",,, [8]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\",,,, \"90012345678\",,, [5, 6, 7, 8, 11]], [,,,,,,,,, [-1]], [,, \"8(?:1[0-4679]\\\\d|2(?:[0-36]\\\\d|7[0-4])|3(?:[034]\\\\d|2[09]|70))\\\\d{4}\",,,, \"81123456\",,, [8]], [,,,,,,,,, [-1]], \"HK\", 852, \"00(?:30|5[09]|[126-9]?)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]],, [,, \"7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\\\d|1[18]|7[27-9])|3(?:[0-38]\\\\d|7[0-369]|9[2357-9])|47\\\\d|5(?:[178]\\\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\\\d)|7(?:[27]\\\\d|8[7-9])|8(?:[23689]\\\\d|7[1-9])|9(?:[025]\\\\d|6[0-246-8]|7[0-36-9]|8[238]))\\\\d{4}\",,,, \"71123456\",,, [8]],,, [,,,,,,,,, [-1]], [,, \"30(?:0[1-9]|[15-7]\\\\d|2[047]|89)\\\\d{4}\",,,, \"30161234\",,, [8]],,, [,,,,,,,,, [-1]]],\n      HN: [, [,, \"8\\\\d{10}|[237-9]\\\\d{7}\",,,,,,, [8, 11]], [,, \"2(?:2(?:0[0-59]|1[1-9]|[23]\\\\d|4[02-7]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[578]|2[3-59]|3[13-9]|4[0-68]|5[1-3589])|5(?:0[2357-9]|1[1-356]|4[03-5]|5\\\\d|6[014-69]|7[04]|80)|6(?:[056]\\\\d|17|2[067]|3[047]|4[0-378]|[78][0-8]|9[01])|7(?:0[5-79]|6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\\\d{4}\",,,, \"22123456\",,, [8]], [,, \"[37-9]\\\\d{7}\",,,, \"91234567\",,, [8]], [,, \"8002\\\\d{7}\",,,, \"80021234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"HN\", 504, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]], [,,,,,,,,, [-1]],,, [,, \"8002\\\\d{7}\",,,,,,, [11]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      HR: [, [,, \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",,,,,,, [6, 7, 8, 9]], [,, \"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\",,,, \"12345678\",,, [8, 9], [6, 7]], [,, \"9(?:(?:0[1-9]|[12589]\\\\d)\\\\d\\\\d|7(?:[0679]\\\\d\\\\d|5(?:[01]\\\\d|44|55|77|9[5-79])))\\\\d{4}|98\\\\d{6}\",,,, \"921234567\",,, [8, 9]], [,, \"80\\\\d{5,7}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"6[01459]\\\\d{6}|6[01]\\\\d{4,5}\",,,, \"611234\",,, [6, 7, 8]], [,,,,,,,,, [-1]], [,, \"7[45]\\\\d{6}\",,,, \"74123456\",,, [8]], [,,,,,,,,, [-1]], \"HR\", 385, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6|7[245]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-57]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"62\\\\d{6,7}|72\\\\d{6}\",,,, \"62123456\",,, [8, 9]],,, [,,,,,,,,, [-1]]],\n      HT: [, [,, \"(?:[2-489]\\\\d|55)\\\\d{6}\",,,,,,, [8]], [,, \"2(?:2\\\\d|5[1-5]|81|9[149])\\\\d{5}\",,,, \"22453300\"], [,, \"(?:[34]\\\\d|55)\\\\d{6}\",,,, \"34101234\"], [,, \"8\\\\d{7}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:[67][0-4]|8[0-3589]|9\\\\d)\\\\d{5}\",,,, \"98901234\"], \"HT\", 509, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-589]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      HU: [, [,, \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"(?:1\\\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\\\d{6}\",,,, \"12345678\",,, [8], [6, 7]], [,, \"(?:[257]0|3[01])\\\\d{7}\",,,, \"201234567\",,, [9]], [,, \"(?:[48]0\\\\d|680[29])\\\\d{5}\",,,, \"80123456\"], [,, \"9[01]\\\\d{6}\",,,, \"90123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"21\\\\d{7}\",,,, \"211234567\",,, [9]], \"HU\", 36, \"00\", \"06\",,, \"06\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]],, [,,,,,,,,, [-1]],,, [,, \"(?:[48]0\\\\d|680[29])\\\\d{5}\"], [,, \"38\\\\d{7}\",,,, \"381234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n      ID: [, [,, \"00[1-9]\\\\d{9,14}|(?:[1-36]|8\\\\d{5})\\\\d{6}|00\\\\d{9}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",,,,,,, [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [5, 6]], [,, \"2[124]\\\\d{7,8}|619\\\\d{8}|2(?:1(?:14|500)|2\\\\d{3})\\\\d{3}|61\\\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}\",,,, \"218350123\",,, [7, 8, 9, 10, 11], [5, 6]], [,, \"8[1-35-9]\\\\d{7,10}\",,,, \"812345678\",,, [9, 10, 11, 12]], [,, \"00(?:1803\\\\d{5,11}|7803\\\\d{7})|(?:177\\\\d|800)\\\\d{5,7}\",,,, \"8001234567\",,, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [,, \"809\\\\d{7}\",,,, \"8091234567\",,, [10]], [,, \"804\\\\d{7}\",,,, \"8041234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ID\", 62, \"00[89]\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [, \"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3 $4\", [\"001\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [, \"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,, \"001803\\\\d{5,11}|(?:007803\\\\d|8071)\\\\d{6}\",,,,,,, [10, 11, 12, 13, 14, 15, 16, 17]], [,, \"(?:1500|8071\\\\d{3})\\\\d{3}\",,,, \"8071123456\",,, [7, 10]],,, [,,,,,,,,, [-1]]],\n      IE: [, [,, \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",,,,,,, [7, 8, 9, 10], [5, 6]], [,, \"(?:1\\\\d|21)\\\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\\\d|7)|5(?:0[45]|1\\\\d|8)|6(?:1\\\\d|[237-9])|9(?:1\\\\d|[35-9]))\\\\d{5}|(?:23|4(?:[1-469]|8\\\\d)|5[23679]|6[4-6]|7[14]|9[04])\\\\d{7}\",,,, \"2212345\",,,, [5, 6]], [,, \"8(?:22|[35-9]\\\\d)\\\\d{6}\",,,, \"850123456\",,, [9]], [,, \"1800\\\\d{6}\",,,, \"1800123456\",,, [10]], [,, \"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\",,,, \"1520123456\",,, [10]], [,, \"18[59]0\\\\d{6}\",,,, \"1850123456\",,, [10]], [,, \"700\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"76\\\\d{7}\",,,, \"761234567\",,, [9]], \"IE\", 353, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"18[59]0\\\\d{6}\",,,,,,, [10]], [,, \"818\\\\d{6}\",,,, \"818123456\",,, [9]],,, [,, \"88210[1-9]\\\\d{4}|8(?:[35-79]5\\\\d\\\\d|8(?:[013-9]\\\\d\\\\d|2(?:[01][1-9]|[2-9]\\\\d)))\\\\d{5}\",,,, \"8551234567\",,, [10]]],\n      IL: [, [,, \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",,,,,,, [7, 8, 9, 10, 11, 12]], [,, \"153\\\\d{8,9}|29[1-9]\\\\d{5}|(?:2[0-8]|[3489]\\\\d)\\\\d{6}\",,,, \"21234567\",,, [8, 11, 12], [7]], [,, \"55(?:410|57[0-289])\\\\d{4}|5(?:(?:[0-2][02-9]|[36]\\\\d|[49][2-9]|8[3-7])\\\\d|5(?:01|2\\\\d|3[0-3]|4[34]|5[0-25689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\\\d{5}\",,,, \"502345678\",,, [9]], [,, \"1(?:255|80[019]\\\\d{3})\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"1212\\\\d{4}|1(?:200|9(?:0[0-2]|19))\\\\d{6}\",,,, \"1919123456\",,, [8, 10]], [,, \"1700\\\\d{6}\",,,, \"1700123456\",,, [10]], [,,,,,,,,, [-1]], [,, \"7(?:38(?:0\\\\d|5[0-2569]|88)|8(?:33|55|77|81)\\\\d)\\\\d{4}|7(?:18|2[23]|3[237]|47|6[258]|7\\\\d|82|9[2-9])\\\\d{6}\",,,, \"771234567\",,, [9]], \"IL\", 972, \"0(?:0|1[2-9])\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [, \"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]],, [,,,,,,,,, [-1]],,, [,, \"1700\\\\d{6}\",,,,,,, [10]], [,, \"1599\\\\d{6}\",,,, \"1599123456\",,, [10]],,, [,, \"151\\\\d{8,9}\",,,, \"15112340000\",,, [11, 12]]],\n      IM: [, [,, \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",,,,,,, [10], [6]], [,, \"1624(?:230|[5-8]\\\\d\\\\d)\\\\d{3}\",,,, \"1624756789\",,,, [6]], [,, \"76245[06]\\\\d{4}|7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\",,,, \"7924123456\"], [,, \"808162\\\\d{4}\",,,, \"8081624567\"], [,, \"8(?:440[49]06|72299\\\\d)\\\\d{3}|(?:8(?:45|70)|90[0167])624\\\\d{4}\",,,, \"9016247890\"], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\"], [,, \"56\\\\d{8}\",,,, \"5612345678\"], \"IM\", 44, \"00\", \"0\",,, \"([25-8]\\\\d{5})$|0\", \"1624$1\",,,,, [,,,,,,,,, [-1]],, \"74576|(?:16|7[56])24\", [,,,,,,,,, [-1]], [,, \"3440[49]06\\\\d{3}|(?:3(?:08162|3\\\\d{4}|45624|7(?:0624|2299))|55\\\\d{4})\\\\d{4}\",,,, \"5512345678\"],,, [,,,,,,,,, [-1]]],\n      IN: [, [,, \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",,,,,,, [8, 9, 10, 11, 12, 13], [6, 7]], [,, \"2717(?:[2-7]\\\\d|95)\\\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\\\d|4(?:20[24]|72[2-8])|552[1-7])\\\\d{6}|(?:11|33|4[04]|80)[2-7]\\\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\\\d)\\\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\\\d[2-7]\\\\d{5}\",,,, \"7410410123\",,, [10], [6, 7, 8]], [,, \"(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\\\d|7[02-8])\\\\d{5}|(?:6(?:[09]\\\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\\\d\\\\d)\\\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\\\d|7(?:[235689]\\\\d|4[0189]))|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]|881))[0189]\\\\d{5}\",,,, \"8123456789\",,, [10]], [,, \"000800\\\\d{7}|1(?:600\\\\d{6}|80(?:0\\\\d{4,9}|3\\\\d{9}))\",,,, \"1800123456\"], [,, \"186[12]\\\\d{9}\",,,, \"1861123456789\",,, [13]], [,, \"1860\\\\d{7}\",,,, \"18603451234\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IN\", 91, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{7})\", \"$1\", [\"575\"]], [, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],,, 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"],,, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\",, 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"],,, 1]], [[, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],,, 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"],,, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\",, 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"],,, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"],,, 1]], [,,,,,,,,, [-1]],,, [,, \"1(?:600\\\\d{6}|800\\\\d{4,9})|(?:000800|18(?:03\\\\d\\\\d|6(?:0|[12]\\\\d\\\\d)))\\\\d{7}\"], [,, \"140\\\\d{7}\",,,, \"1409305260\",,, [10]],,, [,,,,,,,,, [-1]]],\n      IO: [, [,, \"3\\\\d{6}\",,,,,,, [7]], [,, \"37\\\\d{5}\",,,, \"3709100\"], [,, \"38\\\\d{5}\",,,, \"3801234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IO\", 246, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      IQ: [, [,, \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\",,,, \"12345678\",,, [8, 9], [6, 7]], [,, \"7[3-9]\\\\d{8}\",,,, \"7912345678\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IQ\", 964, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      IR: [, [,, \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",,,,,,, [4, 5, 6, 7, 10], [8]], [,, \"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\\\d{7}|[16]\\\\d{3}(?:\\\\d{4})?|[289]\\\\d{3}(?:\\\\d(?:\\\\d{3})?)?)|94(?:000[09]|(?:12\\\\d|30[0-2])\\\\d|2(?:121|[2689]0\\\\d)|4(?:111|40\\\\d))\\\\d{4}\",,,, \"2123456789\",,, [6, 7, 10], [4, 5, 8]], [,, \"9(?:(?:0(?:[0-35]\\\\d|4[4-6])|(?:[13]\\\\d|2[0-3])\\\\d)\\\\d|9(?:[0-46]\\\\d\\\\d|5[15]0|8(?:[12]\\\\d|88)|9(?:0[0-3]|[19]\\\\d|21|69|77|8[7-9])))\\\\d{5}\",,,, \"9123456789\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IR\", 98, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"9(?:4440\\\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))\",,,,,,, [4, 5, 10]], [,, \"96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])\",,,, \"9601\",,, [4, 5]],,, [,,,,,,,,, [-1]]],\n      IS: [, [,, \"(?:38\\\\d|[4-9])\\\\d{6}\",,,,,,, [7, 9]], [,, \"(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\\\d{4}\",,,, \"4101234\",,, [7]], [,, \"(?:38[589]\\\\d\\\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\\\d)|7(?:5[057]|[6-9]\\\\d)|8(?:2[0-59]|[3-69]\\\\d|8[238]))\\\\d{4}\",,,, \"6111234\"], [,, \"80[0-8]\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"90(?:0\\\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\\\d{3}\",,,, \"9001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"49[0-24-79]\\\\d{4}\",,,, \"4921234\",,, [7]], \"IS\", 354, \"00|1(?:0(?:01|[12]0)|100)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"809\\\\d{4}\",,,, \"8091234\",,, [7]],,, [,, \"(?:689|8(?:7[18]|80)|95[48])\\\\d{4}\",,,, \"6891234\",,, [7]]],\n      IT: [, [,, \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",,,,,,, [6, 7, 8, 9, 10, 11, 12]], [,, \"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\",,,, \"0212345678\",,, [6, 7, 8, 9, 10, 11]], [,, \"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\",,,, \"3123456789\",,, [9, 10]], [,, \"80(?:0\\\\d{3}|3)\\\\d{3}\",,,, \"800123456\",,, [6, 9]], [,, \"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",,,, \"899123456\",,, [6, 8, 9, 10]], [,, \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",,,, \"848123456\",,, [6, 9]], [,, \"1(?:78\\\\d|99)\\\\d{6}\",,,, \"1781234567\",,, [9, 10]], [,, \"55\\\\d{8}\",,,, \"5512345678\",,, [10]], \"IT\", 39, \"00\",,,,,,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"1(?:0|9[246])\", \"1(?:0|9(?:2[2-9]|[46]))\"]], [, \"(\\\\d{6})\", \"$1\", [\"1(?:1|92)\"]], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]|43\"]], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]|43\"]], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], [,,,,,,,,, [-1]], 1,, [,, \"848\\\\d{6}\",,,,,,, [9]], [,,,,,,,,, [-1]],,, [,, \"3[2-8]\\\\d{9,10}\",,,, \"33101234501\",,, [11, 12]]],\n      JE: [, [,, \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",,,,,,, [10], [6]], [,, \"1534[0-24-8]\\\\d{5}\",,,, \"1534456789\",,,, [6]], [,, \"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\",,,, \"7797712345\"], [,, \"80(?:07(?:35|81)|8901)\\\\d{4}\",,,, \"8007354567\"], [,, \"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",,,, \"9018105678\"], [,,,,,,,,, [-1]], [,, \"701511\\\\d{4}\",,,, \"7015115678\"], [,, \"56\\\\d{8}\",,,, \"5612345678\"], \"JE\", 44, \"00\", \"0\",,, \"([0-24-8]\\\\d{5})$|0\", \"1534$1\",,,,, [,, \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",,,, \"7640123456\"],,, [,,,,,,,,, [-1]], [,, \"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\",,,, \"5512345678\"],,, [,,,,,,,,, [-1]]],\n      JM: [, [,, \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"8766060\\\\d{3}|(?:658(?:2(?:[0-8]\\\\d|9[0-46-9])|[3-9]\\\\d\\\\d)|876(?:52[35]|6(?:0[1-3579]|1[0235-9]|[23]\\\\d|40|5[06]|6[2-589]|7[0-25-9]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468])))\\\\d{4}\",,,, \"8765230123\",,,, [7]], [,, \"(?:658295|876(?:2(?:0[1-9]|[13-9]\\\\d|2[013-9])|[348]\\\\d\\\\d|5(?:0[1-9]|[1-9]\\\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\\\d{4}\",,,, \"8762101234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"JM\", 1, \"011\", \"1\",,, \"1\",,,,,, [,,,,,,,,, [-1]],, \"658|876\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      JO: [, [,, \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",,,,,,, [8, 9]], [,, \"87(?:000|90[01])\\\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\\\d{4}\",,,, \"62001234\",,, [8]], [,, \"7(?:[78][0-25-9]|9\\\\d)\\\\d{6}\",,,, \"790123456\",,, [9]], [,, \"80\\\\d{6}\",,,, \"80012345\",,, [8]], [,, \"9\\\\d{7}\",,,, \"90012345\",,, [8]], [,, \"85\\\\d{6}\",,,, \"85012345\",,, [8]], [,, \"70\\\\d{7}\",,,, \"700123456\",,, [9]], [,,,,,,,,, [-1]], \"JO\", 962, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,, \"74(?:66|77)\\\\d{5}\",,,, \"746612345\",,, [9]],,, [,,,,,,,,, [-1]], [,, \"8(?:10|8\\\\d)\\\\d{5}\",,,, \"88101234\",,, [8]],,, [,,,,,,,,, [-1]]],\n      JP: [, [,, \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",,,,,,, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [,, \"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\",,,, \"312345678\",,, [9]], [,, \"[7-9]0[1-9]\\\\d{7}\",,,, \"9012345678\",,, [10]], [,, \"00777(?:[01]|5\\\\d)\\\\d\\\\d|(?:00(?:7778|882[1245])|(?:120|800\\\\d)\\\\d\\\\d)\\\\d{4}|00(?:37|66|78)\\\\d{6,13}\",,,, \"120123456\"], [,, \"990\\\\d{6}\",,,, \"990123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"60\\\\d{7}\",,,, \"601234567\",,, [9]], [,, \"50[1-9]\\\\d{7}\",,,, \"5012345678\",,, [10]], \"JP\", 81, \"010\", \"0\",,, \"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\", \"$1\",,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"007\", \"0077\", \"00777\", \"00777[01]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\", \"$1-$2-$3\", [\"007\", \"0077\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"008\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\", \"$1-$2-$3\", [\"0\"]]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], [,, \"20\\\\d{8}\",,,, \"2012345678\",,, [10]],,, [,, \"00(?:777(?:[01]|(?:5|8\\\\d)\\\\d)|882[1245]\\\\d\\\\d)\\\\d\\\\d|00(?:37|66|78)\\\\d{6,13}\"], [,, \"570\\\\d{6}\",,,, \"570123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n      KE: [, [,, \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",,,,,,, [7, 8, 9, 10]], [,, \"(?:4[245]|5[1-79]|6[01457-9])\\\\d{5,7}|(?:4[136]|5[08]|62)\\\\d{7}|(?:[24]0|66)\\\\d{6,7}\",,,, \"202012345\",,, [7, 8, 9]], [,, \"(?:1(?:0[0-8]|1[0-7]|2[014]|30)|7\\\\d\\\\d)\\\\d{6}\",,,, \"712123456\",,, [9]], [,, \"800[02-8]\\\\d{5,6}\",,,, \"800223456\",,, [9, 10]], [,, \"900[02-9]\\\\d{5}\",,,, \"900223456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KE\", 254, \"000\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KG: [, [,, \"8\\\\d{9}|[235-9]\\\\d{8}\",,,,,,, [9, 10], [5, 6]], [,, \"312(?:5[0-79]\\\\d|9(?:[0-689]\\\\d|7[0-24-9]))\\\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\",,,, \"312123456\",,, [9], [5, 6]], [,, \"312(?:58\\\\d|973)\\\\d{3}|(?:2(?:0[0-35]|2\\\\d)|5[0-24-7]\\\\d|600|7(?:[07]\\\\d|55)|88[08]|9(?:12|9[05-9]))\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"800\\\\d{6,7}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KG\", 996, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KH: [, [,, \"1\\\\d{9}|[1-9]\\\\d{7,8}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"23(?:4(?:[2-4]|[56]\\\\d)|[568]\\\\d\\\\d)\\\\d{4}|23[236-9]\\\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\\\d)\\\\d{5}|6\\\\d{5,6})\",,,, \"23756789\",,, [8, 9], [6, 7]], [,, \"(?:(?:1[28]|3[18]|9[67])\\\\d|6[016-9]|7(?:[07-9]|[16]\\\\d)|8(?:[013-79]|8\\\\d))\\\\d{6}|(?:1\\\\d|9[0-57-9])\\\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\\\d{5}\",,,, \"91234567\",,, [8, 9]], [,, \"1800(?:1\\\\d|2[019])\\\\d{4}\",,,, \"1800123456\",,, [10]], [,, \"1900(?:1\\\\d|2[09])\\\\d{4}\",,,, \"1900123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KH\", 855, \"00[14-9]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KI: [, [,, \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",,,,,,, [5, 8]], [,, \"(?:[24]\\\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\\\d\\\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\\\d{3}\",,,, \"31234\"], [,, \"(?:6200[01]|7(?:310[1-9]|5(?:02[03-9]|12[0-47-9]|22[0-7]|[34](?:0[1-9]|8[02-9])|50[1-9])))\\\\d{3}|(?:63\\\\d\\\\d|7(?:(?:[0146-9]\\\\d|2[0-689])\\\\d|3(?:[02-9]\\\\d|1[1-9])|5(?:[0-2][013-9]|[34][1-79]|5[1-9]|[6-9]\\\\d)))\\\\d{4}\",,,, \"72001234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"30(?:0[01]\\\\d\\\\d|12(?:11|20))\\\\d\\\\d\",,,, \"30010000\",,, [8]], \"KI\", 686, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KM: [, [,, \"[3478]\\\\d{6}\",,,,,,, [7], [4]], [,, \"7[4-7]\\\\d{5}\",,,, \"7712345\",,,, [4]], [,, \"[34]\\\\d{6}\",,,, \"3212345\"], [,,,,,,,,, [-1]], [,, \"8\\\\d{6}\",,,, \"8001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KM\", 269, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KN: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\\\d{4}\",,,, \"8692361234\",,,, [7]], [,, \"869(?:48[89]|55[6-8]|66\\\\d|76[02-7])\\\\d{4}\",,,, \"8697652917\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"KN\", 1, \"011\", \"1\",,, \"([2-7]\\\\d{6})$|1\", \"869$1\",,,,, [,,,,,,,,, [-1]],, \"869\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KP: [, [,, \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",,,,,,, [8, 10], [6, 7]], [,, \"(?:(?:195|2)\\\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\\\d{6}\",,,, \"21234567\",,,, [6, 7]], [,, \"19[1-3]\\\\d{7}\",,,, \"1921234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KP\", 850, \"00|99\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"238[02-9]\\\\d{4}|2(?:[0-24-9]\\\\d|3[0-79])\\\\d{5}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KR: [, [,, \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",,,,,,, [5, 6, 8, 9, 10, 11, 12, 13, 14], [3, 4, 7]], [,, \"(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\\\d{2,3}\",,,, \"22123456\",,, [5, 6, 8, 9, 10], [3, 4, 7]], [,, \"1(?:05(?:[0-8]\\\\d|9[0-6])|22[13]\\\\d)\\\\d{4,5}|1(?:0[0-46-9]|[16-9]\\\\d|2[013-9])\\\\d{6,7}\",,,, \"1020000000\",,, [9, 10]], [,, \"00(?:308\\\\d{6,7}|798\\\\d{7,9})|(?:00368|[38]0)\\\\d{7}\",,,, \"801234567\",,, [9, 11, 12, 13, 14]], [,, \"60[2-9]\\\\d{6}\",,,, \"602345678\",,, [9]], [,,,,,,,,, [-1]], [,, \"50\\\\d{8,9}\",,,, \"5012345678\",,, [10, 11]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], \"KR\", 82, \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"0\",,, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\",,,, [[, \"(\\\\d{5})\", \"$1\", [\"1[016-9]1\", \"1[016-9]11\", \"1[016-9]114\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]0|8\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"003\", \"0030\"]], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{5})(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]0|8\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\", \"0$CC-$1\"]], [,, \"15\\\\d{7,8}\",,,, \"1523456789\",,, [9, 10]],,, [,, \"00(?:3(?:08\\\\d{6,7}|68\\\\d{7})|798\\\\d{7,9})\",,,,,,, [11, 12, 13, 14]], [,, \"1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[0168]|88)|8(?:00|33|55|77|99))\\\\d{4}\",,,, \"15441234\",,, [8]],,, [,,,,,,,,, [-1]]],\n      KW: [, [,, \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",,,,,,, [7, 8]], [,, \"2(?:[23]\\\\d\\\\d|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7]))\\\\d{4}\",,,, \"22345678\",,, [8]], [,, \"(?:41\\\\d\\\\d|5(?:(?:[05]\\\\d|1[0-7]|6[56])\\\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\\\d)\\\\d|1(?:00|11|6[16])|2[26]2|3[36]3|4[46]4|7(?:0[013-9]|[67]\\\\d)|8[68]8|9(?:[069]\\\\d|3[039]))|9(?:(?:[04679]\\\\d|8[057-9])\\\\d|1(?:1[01]|99)|2(?:00|2\\\\d)|3(?:00|3[03])|5(?:00|5\\\\d)))\\\\d{4}\",,,, \"50012345\",,, [8]], [,, \"18\\\\d{5}\",,,, \"1801234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KW\", 965, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KY: [, [,, \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|[48]8)|9(?:14|4[035-9]))\\\\d{4}\",,,, \"3452221234\",,,, [7]], [,, \"345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\\\d{4}\",,,, \"3453231234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"(?:345976|900[2-9]\\\\d\\\\d)\\\\d{4}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"KY\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"345$1\",,,,, [,, \"345849\\\\d{4}\",,,, \"3458491234\"],, \"345\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      KZ: [, [,, \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",,,,,,, [10, 14], [5, 6, 7]], [,, \"(?:33622|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9]|97)|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]|59))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[2-4]\\\\d|5[139])|4(?:2\\\\d|3[1-35-9]|59)|5(?:[23]\\\\d|4[0-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59))))\\\\d{5}\",,,, \"7123456789\",,, [10], [5, 6, 7]], [,, \"7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\\\d{7}\",,,, \"7710009998\",,, [10]], [,, \"8(?:00|108\\\\d{3})\\\\d{7}\",,,, \"8001234567\"], [,, \"809\\\\d{7}\",,,, \"8091234567\",,, [10]], [,,,,,,,,, [-1]], [,, \"808\\\\d{7}\",,,, \"8081234567\",,, [10]], [,, \"751\\\\d{7}\",,,, \"7511234567\",,, [10]], \"KZ\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",,,, [,,,,,,,,, [-1]],, \"33|7\", [,, \"751\\\\d{7}\",,,,,,, [10]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LA: [, [,, \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",,,,,,, [8, 9, 10], [6]], [,, \"(?:2[13]|[35-7][14]|41|8[1468])\\\\d{6}\",,,, \"21212862\",,, [8], [6]], [,, \"208[78]\\\\d{6}|(?:20[23579]|30[24])\\\\d{7}\",,,, \"2023123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LA\", 856, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[0135-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"30[0135-9]\\\\d{6}\",,,, \"301234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n      LB: [, [,, \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",,,,,,, [7, 8]], [,, \"7(?:62|8[0-7]|9[04-9])\\\\d{4}|(?:[14-69]\\\\d|2(?:[14-69]\\\\d|[78][1-9])|7[2-57]|8[02-9])\\\\d{5}\",,,, \"1123456\"], [,, \"793(?:[01]\\\\d|2[0-4])\\\\d{3}|(?:(?:3|81)\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[12]))\\\\d{5}\",,,, \"71123456\"], [,,,,,,,,, [-1]], [,, \"9[01]\\\\d{6}\",,,, \"90123456\",,, [8]], [,, \"80\\\\d{6}\",,,, \"80123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LB\", 961, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LC: [, [,, \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"758(?:234|4(?:30|5\\\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\\\d{4}\",,,, \"7584305678\",,,, [7]], [,, \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[0-3])|812)\\\\d{4}\",,,, \"7582845678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"LC\", 1, \"011\", \"1\",,, \"([2-8]\\\\d{6})$|1\", \"758$1\",,,,, [,,,,,,,,, [-1]],, \"758\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LI: [, [,, \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",,,,,,, [7, 9]], [,, \"(?:2(?:01|1[27]|2[02]|3\\\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\\\d{4}\",,,, \"2345678\",,, [7]], [,, \"(?:6(?:(?:4[5-9]|5[0-469])\\\\d|6(?:[024-6]\\\\d|[17]0|3[7-9]))\\\\d|7(?:[37-9]\\\\d|42|56))\\\\d{4}\",,,, \"660234567\"], [,, \"8002[28]\\\\d\\\\d|80(?:05\\\\d|9)\\\\d{4}\",,,, \"8002222\"], [,, \"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d\\\\d\",,,, \"9002222\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LI\", 423, \"00\", \"0\",,, \"(1001)|0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"870(?:28|87)\\\\d\\\\d\",,,, \"8702812\",,, [7]],,, [,, \"697(?:42|56|[78]\\\\d)\\\\d{4}\",,,, \"697861234\",,, [9]]],\n      LK: [, [,, \"[1-9]\\\\d{8}\",,,,,,, [9], [7]], [,, \"(?:12[2-9]|602|8[12]\\\\d|9(?:1\\\\d|22|9[245]))\\\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\\\d{6}\",,,, \"112345678\",,,, [7]], [,, \"7(?:[0-25-8]\\\\d|4[0-4])\\\\d{6}\",,,, \"712345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LK\", 94, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"1973\\\\d{5}\",,,, \"197312345\"],,, [,,,,,,,,, [-1]]],\n      LR: [, [,, \"(?:[245]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",,,,,,, [7, 8, 9]], [,, \"2\\\\d{7}\",,,, \"21234567\",,, [8]], [,, \"(?:(?:(?:22|33)0|555|(?:77|88)\\\\d)\\\\d|4(?:240|[67]))\\\\d{5}|[56]\\\\d{6}\",,,, \"770123456\",,, [7, 9]], [,,,,,,,,, [-1]], [,, \"332(?:02|[34]\\\\d)\\\\d{4}\",,,, \"332021234\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LR\", 231, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4[67]|[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-578]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LS: [, [,, \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",,,,,,, [8]], [,, \"2\\\\d{7}\",,,, \"22123456\"], [,, \"[56]\\\\d{7}\",,,, \"50123456\"], [,, \"800[1256]\\\\d{4}\",,,, \"80021234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LS\", 266, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LT: [, [,, \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",,,,,,, [8]], [,, \"(?:3[1478]|4[124-6]|52)\\\\d{6}\",,,, \"31234567\"], [,, \"6\\\\d{7}\",,,, \"61234567\"], [,, \"80[02]\\\\d{5}\",,,, \"80012345\"], [,, \"9(?:0[0239]|10)\\\\d{5}\",,,, \"90012345\"], [,, \"808\\\\d{5}\",,,, \"80812345\"], [,, \"70[05]\\\\d{5}\",,,, \"70012345\"], [,, \"[89]01\\\\d{5}\",,,, \"80123456\"], \"LT\", 370, \"00\", \"0\",,, \"[08]\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(0-$1)\",, 1], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0 $1\",, 1], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(0-$1)\",, 1], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(0-$1)\",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"70[67]\\\\d{5}\",,,, \"70712345\"],,, [,,,,,,,,, [-1]]],\n      LU: [, [,, \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11]], [,, \"(?:35[013-9]|80[2-9]|90[89])\\\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\\\d|8[13-9]|9[2-579])\\\\d{2,9}\",,,, \"27123456\"], [,, \"6(?:[269][18]|5[1568]|7[189]|81)\\\\d{6}\",,,, \"628123456\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"90[015]\\\\d{5}\",,,, \"90012345\",,, [8]], [,, \"801\\\\d{5}\",,,, \"80112345\",,, [8]], [,,,,,,,,, [-1]], [,, \"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\",,,, \"20201234\",,, [4, 5, 6, 7, 8, 9, 10]], \"LU\", 352, \"00\",,,, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\",,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LV: [, [,, \"(?:[268]\\\\d|90)\\\\d{6}\",,,,,,, [8]], [,, \"6\\\\d{7}\",,,, \"63123456\"], [,, \"23(?:23[0-57-9]|33[0238])\\\\d{3}|2(?:[0-24-9]\\\\d\\\\d|3(?:0[07]|[14-9]\\\\d|2[024-9]|3[0-24-9]))\\\\d{4}\",,,, \"21234567\"], [,, \"80\\\\d{6}\",,,, \"80123456\"], [,, \"90\\\\d{6}\",,,, \"90123456\"], [,, \"81\\\\d{6}\",,,, \"81123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LV\", 371, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      LY: [, [,, \"[2-9]\\\\d{8}\",,,,,,, [9], [7]], [,, \"(?:2(?:0[56]|[1-6]\\\\d|7[124579]|8[124])|3(?:1\\\\d|2[2356])|4(?:[17]\\\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\\\d|5[2-57]|8[1-5])|7(?:[13]\\\\d|2[13-79])|8(?:[124]\\\\d|5[124]|84))\\\\d{6}\",,,, \"212345678\",,,, [7]], [,, \"9[1-6]\\\\d{7}\",,,, \"912345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LY\", 218, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MA: [, [,, \"[5-8]\\\\d{8}\",,,,,,, [9]], [,, \"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\",,,, \"520123456\"], [,, \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\",,,, \"650123456\"], [,, \"80[0-7]\\\\d{6}\",,,, \"801234567\"], [,, \"89\\\\d{7}\",,,, \"891234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\",,,, \"592401234\"], \"MA\", 212, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MC: [, [,, \"(?:[3489]|6\\\\d)\\\\d{7}\",,,,,,, [8, 9]], [,, \"(?:870|9[2-47-9]\\\\d)\\\\d{5}\",,,, \"99123456\",,, [8]], [,, \"4(?:[469]\\\\d|5[1-9])\\\\d{5}|(?:3|6\\\\d)\\\\d{7}\",,,, \"612345678\"], [,, \"(?:800|90\\\\d)\\\\d{5}\",,,, \"90123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MC\", 377, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"87\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,, \"8[07]0\\\\d{5}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MD: [, [,, \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",,,,,,, [8]], [,, \"(?:(?:2[1-9]|3[1-79])\\\\d|5(?:33|5[257]))\\\\d{5}\",,,, \"22212345\"], [,, \"562\\\\d{5}|(?:6\\\\d|7[16-9])\\\\d{6}\",,,, \"62112345\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"90[056]\\\\d{5}\",,,, \"90012345\"], [,, \"808\\\\d{5}\",,,, \"80812345\"], [,,,,,,,,, [-1]], [,, \"3[08]\\\\d{6}\",,,, \"30123456\"], \"MD\", 373, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"803\\\\d{5}\",,,, \"80312345\"],,, [,,,,,,,,, [-1]]],\n      ME: [, [,, \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",,,,,,, [8, 9], [6]], [,, \"(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\\\d{5}\",,,, \"30234567\",,, [8], [6]], [,, \"6(?:[07-9]\\\\d|3[024]|6[0-25])\\\\d{5}\",,,, \"67622901\",,, [8]], [,, \"80(?:[0-2578]|9\\\\d)\\\\d{5}\",,,, \"80080002\"], [,, \"9(?:4[1568]|5[178])\\\\d{5}\",,,, \"94515151\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"78[1-49]\\\\d{5}\",,,, \"78108780\",,, [8]], \"ME\", 382, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"77[1-9]\\\\d{5}\",,,, \"77273012\",,, [8]],,, [,,,,,,,,, [-1]]],\n      MF: [, [,, \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\",,,, \"590271234\"], [,, \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\",,,, \"690001234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\",,,, \"976012345\"], \"MF\", 590, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MG: [, [,, \"[23]\\\\d{8}\",,,,,,, [9], [7]], [,, \"2072[29]\\\\d{4}|20(?:2\\\\d|4[47]|5[3467]|6[279]|7[356]|8[268]|9[2457])\\\\d{5}\",,,, \"202123456\",,,, [7]], [,, \"3[2-47-9]\\\\d{7}\",,,, \"321234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"22\\\\d{7}\",,,, \"221234567\"], \"MG\", 261, \"00\", \"0\",,, \"([24-9]\\\\d{6})$|0\", \"20$1\",,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MH: [, [,, \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",,,,,,, [7]], [,, \"(?:247|528|625)\\\\d{4}\",,,, \"2471234\"], [,, \"(?:(?:23|54)5|329|45[35-8])\\\\d{4}\",,,, \"2351234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"635\\\\d{4}\",,,, \"6351234\"], \"MH\", 692, \"011\", \"1\",,, \"1\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MK: [, [,, \"[2-578]\\\\d{7}\",,,,,,, [8], [6, 7]], [,, \"(?:(?:2(?:62|77)0|3444)\\\\d|4[56]440)\\\\d{3}|(?:34|4[357])700\\\\d{3}|(?:2(?:[0-3]\\\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\\\d{5}\",,,, \"22012345\",,,, [6, 7]], [,, \"7(?:3555|(?:474|9[019]7)7)\\\\d{3}|7(?:[0-25-8]\\\\d\\\\d|3(?:[1-48]\\\\d|6[01]|7[01578])|4(?:2\\\\d|60|7[01578])|9(?:[2-4]\\\\d|5[01]|7[015]))\\\\d{4}\",,,, \"72345678\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"5\\\\d{7}\",,,, \"50012345\"], [,, \"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\",,,, \"80123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MK\", 389, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ML: [, [,, \"[24-9]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:07[0-8]|12[67])\\\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\\\d{5}\",,,, \"20212345\"], [,, \"2(?:0(?:01|79)|17\\\\d)\\\\d{4}|(?:5[01]|[679]\\\\d|8[2-49])\\\\d{6}\",,,, \"65012345\"], [,, \"80\\\\d{6}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ML\", 223, \"00\",,,,,,,, [[, \"(\\\\d{4})\", \"$1\", [\"67[057-9]|74[045]\", \"67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [,,,,,,,,, [-1]],,, [,, \"80\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MM: [, [,, \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",,,,,,, [6, 7, 8, 9, 10], [5]], [,, \"(?:1(?:(?:12|[28]\\\\d|3[56]|7[3-6]|9[0-6])\\\\d|4(?:2[29]|62|7[0-2]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\\\d|[26]2|7[0-2]|83)|51\\\\d\\\\d)|4(?:2(?:2\\\\d\\\\d|48[013])|3(?:20\\\\d|4(?:70|83)|56)|420\\\\d|5(?:2\\\\d|470))|6(?:0(?:[23]|88\\\\d)|(?:124|[56]2\\\\d)\\\\d|2472|3(?:20\\\\d|470)|4(?:2[04]\\\\d|472)|7(?:3\\\\d\\\\d|4[67]0|8(?:[01459]\\\\d|8))))\\\\d{4}|5(?:2(?:2\\\\d{5,6}|47[02]\\\\d{4})|(?:3472|4(?:2(?:1|86)|470)|522\\\\d|6(?:20\\\\d|483)|7(?:20\\\\d|48[01])|8(?:20\\\\d|47[02])|9(?:20\\\\d|470))\\\\d{4})|7(?:(?:0470|4(?:25\\\\d|470)|5(?:202|470|96\\\\d))\\\\d{4}|1(?:20\\\\d{4,5}|4(?:70|83)\\\\d{4}))|8(?:1(?:2\\\\d{5,6}|4(?:10|7[01]\\\\d)\\\\d{3})|2(?:2\\\\d{5,6}|(?:320|490\\\\d)\\\\d{3})|(?:3(?:2\\\\d\\\\d|470)|4[24-7]|5(?:(?:2\\\\d|51)\\\\d|4(?:[1-35-9]\\\\d|4[0-57-9]))|6[23])\\\\d{4})|(?:1[2-6]\\\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|(?:[35]2|64)\\\\d))\\\\d{4}|25\\\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\\\d{4}\",,,, \"1234567\",,, [6, 7, 8, 9], [5]], [,, \"(?:17[01]|9(?:2(?:[0-4]|[56]\\\\d\\\\d)|(?:3(?:[0-36]|4\\\\d)|(?:6\\\\d|8[89]|9[4-8])\\\\d|7(?:3|40|[5-9]\\\\d))\\\\d|4(?:(?:[0245]\\\\d|[1379])\\\\d|88)|5[0-6])\\\\d)\\\\d{4}|9[69]1\\\\d{6}|9(?:[68]\\\\d|9[089])\\\\d{5}\",,,, \"92123456\",,, [7, 8, 9, 10]], [,, \"80080(?:0[1-9]|2\\\\d)\\\\d{3}\",,,, \"8008001234\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"1333\\\\d{4}|[12]468\\\\d{4}\",,,, \"13331234\",,, [8]], \"MM\", 95, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|452|678|86\", \"[12]|452|6788|86\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [, \"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MN: [, [,, \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",,,,,,, [8, 9, 10], [4, 5, 6]], [,, \"[12]2[1-3]\\\\d{5,6}|(?:(?:[12](?:1|27)|5[368])\\\\d\\\\d|7(?:0(?:[0-5]\\\\d|7[078]|80)|128))\\\\d{4}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\\\d{6,7}\",,,, \"53123456\",,,, [4, 5, 6]], [,, \"(?:83[01]|92[039])\\\\d{5}|(?:5[05]|6[069]|8[015689]|9[013-9])\\\\d{6}\",,,, \"88123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"712[0-79]\\\\d{4}|7(?:1[013-9]|[25-9]\\\\d)\\\\d{5}\",,,, \"75123456\",,, [8]], \"MN\", 976, \"001\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MO: [, [,, \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",,,,,,, [7, 8]], [,, \"(?:28[2-9]|8(?:11|[2-57-9]\\\\d))\\\\d{5}\",,,, \"28212345\",,, [8]], [,, \"6800[0-79]\\\\d{3}|6(?:[235]\\\\d\\\\d|6(?:0[0-5]|[1-9]\\\\d)|8(?:0[1-9]|[14-8]\\\\d|2[5-9]|[39][0-4]))\\\\d{4}\",,,, \"66123456\",,, [8]], [,, \"0800\\\\d{3}\",,,, \"0800501\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MO\", 853, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MP: [, [,, \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",,,,,,, [10], [7]], [,, \"670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\",,,, \"6702345678\",,,, [7]], [,, \"670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\",,,, \"6702345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"MP\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"670$1\",, 1,,, [,,,,,,,,, [-1]],, \"670\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MQ: [, [,, \"(?:596\\\\d|7091)\\\\d{5}|(?:69|[89]\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"(?:596(?:[03-7]\\\\d|1[05]|2[7-9]|8[0-39]|9[04-9])|80[6-9]\\\\d\\\\d|9(?:477[6-9]|767[4589]))\\\\d{4}\",,,, \"596301234\"], [,, \"(?:69[67]\\\\d\\\\d|7091[0-3])\\\\d{4}\",,,, \"696201234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\"], [,, \"8[129]\\\\d{7}\",,,, \"810123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:397[0-3]|477[0-5]|76(?:6\\\\d|7[0-367]))\\\\d{4}\",,,, \"976612345\"], \"MQ\", 596, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-79]|8(?:0[6-9]|[36])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MR: [, [,, \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",,,,,,, [8]], [,, \"(?:25[08]|35\\\\d|45[1-7])\\\\d{5}\",,,, \"35123456\"], [,, \"[2-4][0-46-9]\\\\d{6}\",,,, \"22123456\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MR\", 222, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MS: [, [,, \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"6644(?:1[0-3]|91)\\\\d{4}\",,,, \"6644912345\",,,, [7]], [,, \"664(?:3(?:49|9[1-6])|49[2-6])\\\\d{4}\",,,, \"6644923456\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"MS\", 1, \"011\", \"1\",,, \"([34]\\\\d{6})$|1\", \"664$1\",,,,, [,,,,,,,,, [-1]],, \"664\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MT: [, [,, \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",,,,,,, [8]], [,, \"20(?:3[1-4]|6[059])\\\\d{4}|2(?:0[19]|[1-357]\\\\d|60)\\\\d{5}\",,,, \"21001234\"], [,, \"(?:7(?:210|[79]\\\\d\\\\d)|9(?:[29]\\\\d\\\\d|69[67]|8(?:1[1-3]|89|97)))\\\\d{4}\",,,, \"96961234\"], [,, \"800(?:02|[3467]\\\\d)\\\\d{3}\",,,, \"80071234\"], [,, \"5(?:0(?:0(?:37|43)|(?:6\\\\d|70|9[0168])\\\\d)|[12]\\\\d0[1-5])\\\\d{3}\",,,, \"50037123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3550\\\\d{4}\",,,, \"35501234\"], \"MT\", 356, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]],, [,, \"7117\\\\d{4}\",,,, \"71171234\"],,, [,,,,,,,,, [-1]], [,, \"501\\\\d{5}\",,,, \"50112345\"],,, [,,,,,,,,, [-1]]],\n      MU: [, [,, \"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",,,,,,, [7, 8, 10]], [,, \"(?:2(?:[0346-8]\\\\d|1[0-7])|4(?:[013568]\\\\d|2[4-8]|71)|54(?:[3-5]\\\\d|71)|6\\\\d\\\\d|8(?:14|3[129]))\\\\d{4}\",,,, \"54480123\",,, [7, 8]], [,, \"5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\\\d{4}|(?:5(?:2[5-9]|4[3-689]|[57]\\\\d|8[0-689]|9[0-8])|7(?:0[0-4]|3[013]))\\\\d{5}\",,,, \"52512345\",,, [8]], [,, \"802\\\\d{7}|80[0-2]\\\\d{4}\",,,, \"8001234\",,, [7, 10]], [,, \"30\\\\d{5}\",,,, \"3012345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3(?:20|9\\\\d)\\\\d{4}\",,,, \"3201234\",,, [7]], \"MU\", 230, \"0(?:0|[24-7]0|3[03])\",,,,,, \"020\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57]\"]], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MV: [, [,, \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",,,,,,, [7, 10]], [,, \"(?:3(?:0[0-4]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\\\d{4}\",,,, \"6701234\",,, [7]], [,, \"(?:46[46]|[79]\\\\d\\\\d)\\\\d{4}\",,,, \"7712345\",,, [7]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"900\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MV\", 960, \"0(?:0|19)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[34679]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"4(?:0[01]|50)\\\\d{4}\",,,, \"4001234\",,, [7]],,, [,,,,,,,,, [-1]]],\n      MW: [, [,, \"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",,,,,,, [7, 9]], [,, \"(?:1[2-9]|2[12]\\\\d\\\\d)\\\\d{5}\",,,, \"1234567\"], [,, \"111\\\\d{6}|(?:31|77|[89][89])\\\\d{7}\",,,, \"991234567\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MW\", 265, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MX: [, [,, \"[2-9]\\\\d{9}\",,,,,,, [10], [7, 8]], [,, \"657[12]\\\\d{6}|(?:2(?:0[01]|2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\",,,, \"2001234567\",,,, [7, 8]], [,, \"657[12]\\\\d{6}|(?:2(?:2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\",,,, \"2221234567\",,,, [7, 8]], [,, \"8(?:00|88)\\\\d{7}\",,,, \"8001234567\"], [,, \"900\\\\d{7}\",,,, \"9001234567\"], [,, \"300\\\\d{7}\",,,, \"3001234567\"], [,, \"500\\\\d{7}\",,,, \"5001234567\"], [,,,,,,,,, [-1]], \"MX\", 52, \"0[09]\",,,,,, \"00\",, [[, \"(\\\\d{5})\", \"$1\", [\"53\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"]]], [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MY: [, [,, \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"4270\\\\d{4}|(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\\\d|9[0-57])\\\\d|4(?:2[0-689]|[3-79]\\\\d|8[1-35689])|5(?:2[0-589]|[3468]\\\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\\\d|[3489][0-8]))\\\\d{5}\",,,, \"323856789\",,, [8, 9], [6, 7]], [,, \"1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\\\d{4}|1(?:0(?:[23568]\\\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\\\d\\\\d|6(?:0[5-9]|[1-9]\\\\d)|7(?:[0-4]\\\\d|5[0-7]))|(?:[269]\\\\d|[37][1-9]|4[235-9])\\\\d|5(?:31|9\\\\d\\\\d)|8(?:1[23]|[236]\\\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\\\d{5}\",,,, \"123456789\",,, [9, 10]], [,, \"1[378]00\\\\d{6}\",,,, \"1300123456\",,, [10]], [,, \"1600\\\\d{6}\",,,, \"1600123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"15(?:4(?:6[0-4]\\\\d|8(?:0[125]|[17]\\\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\\\d))\\\\d{4}\",,,, \"1546012345\",,, [10]], \"MY\", 60, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      MZ: [, [,, \"(?:2|8\\\\d)\\\\d{7}\",,,,,,, [8, 9]], [,, \"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\",,,, \"21123456\",,, [8]], [,, \"8[2-79]\\\\d{7}\",,,, \"821234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MZ\", 258, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NA: [, [,, \"[68]\\\\d{7,8}\",,,,,,, [8, 9]], [,, \"64426\\\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\\\d{4,5}|6(?:1(?:(?:0\\\\d|2[0189]|3[24-69]|4[5-9])\\\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\\\d{4}\",,,, \"61221234\"], [,, \"(?:60|8[1245])\\\\d{7}\",,,, \"811234567\",,, [9]], [,, \"80\\\\d{7}\",,,, \"800123456\",,, [9]], [,, \"8701\\\\d{5}\",,,, \"870123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"8(?:3\\\\d\\\\d|86)\\\\d{5}\",,,, \"88612345\"], \"NA\", 264, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NC: [, [,, \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",,,,,,, [6]], [,, \"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\",,,, \"201234\"], [,, \"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\",,,, \"751234\"], [,, \"050\\\\d{3}\",,,, \"050012\"], [,, \"36\\\\d{4}\",,,, \"366711\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NC\", 687, \"00\",,,,,,,, [[, \"(\\\\d{3})\", \"$1\", [\"5[6-8]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NE: [, [,, \"[027-9]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\",,,, \"20201234\"], [,, \"(?:23|7[0467]|[89]\\\\d)\\\\d{6}\",,,, \"93123456\"], [,, \"08\\\\d{6}\",,,, \"08123456\"], [,, \"09\\\\d{6}\",,,, \"09123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NE\", 227, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[0467]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NF: [, [,, \"[13]\\\\d{5}\",,,,,,, [6], [5]], [,, \"(?:1(?:06|17|28|39)|3[0-2]\\\\d)\\\\d{3}\",,,, \"106609\",,,, [5]], [,, \"(?:14|3[58])\\\\d{4}\",,,, \"381234\",,,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NF\", 672, \"00\",,,, \"([0-258]\\\\d{4})$\", \"3$1\",,, [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NG: [, [,, \"38\\\\d{6}|[78]\\\\d{9,13}|(?:20|9\\\\d)\\\\d{8}\",,,,,,, [8, 10, 11, 12, 13, 14], [6, 7]], [,, \"(?:20(?:[1259]\\\\d|3[013-9]|4[1-8]|6[024-689]|7[1-79]|8[2-9])|38)\\\\d{6}\",,,, \"2033123456\",,, [8, 10], [6, 7]], [,, \"(?:702[0-24-9]|819[01])\\\\d{6}|(?:7(?:0[13-9]|[12]\\\\d)|8(?:0[1-9]|1[0-8])|9(?:0[1-9]|1[1-6]))\\\\d{7}\",,,, \"8021234567\",,, [10]], [,, \"800\\\\d{7,11}\",,,, \"80017591759\",,, [10, 11, 12, 13, 14]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NG\", 234, \"009\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"20[129]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"700\\\\d{7,11}\",,,, \"7001234567\",,, [10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]]],\n      NI: [, [,, \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",,,,,,, [8]], [,, \"2\\\\d{7}\",,,, \"21234567\"], [,, \"(?:5(?:5[0-7]|[78]\\\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\\\d)\\\\d)\\\\d{5}\",,,, \"81234567\"], [,, \"1800\\\\d{4}\",,,, \"18001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NI\", 505, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NL: [, [,, \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",,,,,,, [5, 6, 7, 8, 9, 10, 11]], [,, \"(?:1(?:[035]\\\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\\\d\\\\d)\\\\d{6}\",,,, \"101234567\",,, [9]], [,, \"(?:6[1-58]|970\\\\d)\\\\d{7}\",,,, \"612345678\",,, [9, 11]], [,, \"800\\\\d{4,7}\",,,, \"8001234\",,, [7, 8, 9, 10]], [,, \"90[069]\\\\d{4,7}\",,,, \"9061234\",,, [7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:85|91)\\\\d{7}\",,,, \"851234567\",,, [9]], \"NL\", 31, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})\", \"$1\", [\"1[238]|[34]\"]], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"14\"]], [, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [,, \"66\\\\d{7}\",,,, \"662345678\",,, [9]],,, [,, \"140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)\\\\d\",,,,,,, [5, 6]], [,, \"140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\\\d{6})\\\\d\",,,, \"14020\",,, [5, 6, 9]],,, [,,,,,,,,, [-1]]],\n      NO: [, [,, \"(?:0|[2-9]\\\\d{3})\\\\d{4}\",,,,,,, [5, 8]], [,, \"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",,,, \"21234567\",,, [8]], [,, \"(?:4[015-8]|9\\\\d)\\\\d{6}\",,,, \"40612345\",,, [8]], [,, \"80[01]\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"82[09]\\\\d{5}\",,,, \"82012345\",,, [8]], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",,,, \"81021234\",,, [8]], [,, \"880\\\\d{5}\",,,, \"88012345\",,, [8]], [,, \"85[0-5]\\\\d{5}\",,,, \"85012345\",,, [8]], \"NO\", 47, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]\"]]],, [,,,,,,,,, [-1]], 1, \"[02-689]|7[0-8]\", [,,,,,,,,, [-1]], [,, \"(?:0[235-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\",,,, \"02000\"],,, [,, \"81[23]\\\\d{5}\",,,, \"81212345\",,, [8]]],\n      NP: [, [,, \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",,,,,,, [8, 10, 11], [6, 7]], [,, \"(?:1[0-6]\\\\d|99[02-6])\\\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\\\d{5}\",,,, \"14567890\",,, [8], [6, 7]], [,, \"9(?:00|6[0-3]|7[024-6]|8[0-24-68])\\\\d{7}\",,,, \"9841234567\",,, [10]], [,, \"1(?:66001|800\\\\d\\\\d)\\\\d{5}\",,,, \"16600101234\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NP\", 977, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{5})\", \"$1-$2-$3\", [\"1\"]]], [[, \"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NR: [, [,, \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",,,,,,, [7]], [,, \"444\\\\d{4}\",,,, \"4441234\"], [,, \"(?:55[3-9]|666|8\\\\d\\\\d)\\\\d{4}\",,,, \"5551234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NR\", 674, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NU: [, [,, \"(?:[4-7]|888\\\\d)\\\\d{3}\",,,,,,, [4, 7]], [,, \"[47]\\\\d{3}\",,,, \"7012\",,, [4]], [,, \"(?:[56]|888[1-9])\\\\d{3}\",,,, \"8884012\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NU\", 683, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      NZ: [, [,, \"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"240\\\\d{5}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{6}\",,,, \"32345678\",,, [8], [7]], [,, \"2(?:[0-27-9]\\\\d|6)\\\\d{6,7}|2(?:1\\\\d|75)\\\\d{5}\",,,, \"211234567\",,, [8, 9, 10]], [,, \"508\\\\d{6,7}|80\\\\d{6,8}\",,,, \"800123456\",,, [8, 9, 10]], [,, \"(?:1[13-57-9]\\\\d{5}|50(?:0[08]|30|66|77|88))\\\\d{3}|90\\\\d{6,8}\",,,, \"900123456\",,, [7, 8, 9, 10]], [,,,,,,,,, [-1]], [,, \"70\\\\d{7}\",,,, \"701234567\",,, [9]], [,,,,,,,,, [-1]], \"NZ\", 64, \"0(?:0|161)\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|8|90\", \"50(?:[0367]|88)|8|90\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[589]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"8(?:1[16-9]|22|3\\\\d|4[045]|5[459]|6[235-9]|7[0-3579]|90)\\\\d{2,7}\",,,, \"83012378\"],,, [,,,,,,,,, [-1]]],\n      OM: [, [,, \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",,,,,,, [7, 8, 9]], [,, \"2[1-6]\\\\d{6}\",,,, \"23123456\",,, [8]], [,, \"(?:1505|90[1-9]\\\\d)\\\\d{4}|(?:7[126-9]|9[1-9])\\\\d{6}\",,,, \"92123456\",,, [8]], [,, \"8007\\\\d{4,5}|(?:500|800[05])\\\\d{4}\",,,, \"80071234\"], [,, \"900\\\\d{5}\",,,, \"90012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"OM\", 968, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PA: [, [,, \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",,,,,,, [7, 8, 10, 11]], [,, \"(?:1(?:0\\\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[058]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[07-9]\\\\d|1[0-7]|2[0-5]|33|4[0-79]|5[0-35]|6[068])|4(?:00|3[0-579]|4\\\\d|7[0-57-9])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[0156]|7[0-24-9]|8[5-9]|90)|8(?:09|2[89]|3\\\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\\\d))\\\\d{4}\",,,, \"2001234\",,, [7]], [,, \"(?:1[16]1|21[89]|6\\\\d{3}|8(?:1[01]|7[23]))\\\\d{4}\",,,, \"61234567\",,, [7, 8]], [,, \"800\\\\d{4,5}|(?:00800|800\\\\d)\\\\d{6}\",,,, \"8001234\"], [,, \"(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\\\d{4}\",,,, \"8601234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PA\", 507, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PE: [, [,, \"(?:[14-8]|9\\\\d)\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"(?:(?:(?:4[34]|5[14])[0-8]|687)\\\\d|7(?:173|(?:3[0-8]|55)\\\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[0569]|[56]0)))\\\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\\\d{6}\",,,, \"11234567\",,, [8], [6, 7]], [,, \"9\\\\d{8}\",,,, \"912345678\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"805\\\\d{5}\",,,, \"80512345\",,, [8]], [,, \"801\\\\d{5}\",,,, \"80112345\",,, [8]], [,, \"80[24]\\\\d{5}\",,,, \"80212345\",,, [8]], [,,,,,,,,, [-1]], \"PE\", 51, \"00|19(?:1[124]|77|90)00\", \"0\", \" Anexo \",, \"0\",, \"00\",, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PF: [, [,, \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",,,,,,, [6, 8, 9]], [,, \"4(?:0[4-689]|9[4-68])\\\\d{5}\",,,, \"40412345\",,, [8]], [,, \"8[7-9]\\\\d{6}\",,,, \"87123456\",,, [8]], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"499\\\\d{5}\",,,, \"49901234\",,, [8]], \"PF\", 689, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,, \"44\\\\d{4}\",,,,,,, [6]], [,, \"44\\\\d{4}\",,,, \"440123\",,, [6]],,, [,,,,,,,,, [-1]]],\n      PG: [, [,, \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",,,,,,, [7, 8]], [,, \"(?:(?:3[0-2]|4[257]|5[34]|9[78])\\\\d|64[1-9]|85[02-46-9])\\\\d{4}\",,,, \"3123456\",,, [7]], [,, \"(?:7\\\\d|8[1-38])\\\\d{6}\",,,, \"70123456\",,, [8]], [,, \"180\\\\d{4}\",,,, \"1801234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"2(?:0[0-57]|7[568])\\\\d{4}\",,,, \"2751234\",,, [7]], \"PG\", 675, \"00|140[1-3]\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]],, [,, \"27[01]\\\\d{4}\",,,, \"2700123\",,, [7]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PH: [, [,, \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",,,,,,, [6, 8, 9, 10, 11, 12, 13], [4, 5, 7]], [,, \"(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\\\d{3}|88(?:22\\\\d\\\\d|42))\\\\d{4}|(?:2|8[2-8]\\\\d\\\\d)\\\\d{5}\",,,, \"232345678\",,, [6, 8, 9, 10], [4, 5, 7]], [,, \"(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\\\d|4[2-9]|8[135-9]|9[1-9]))\\\\d{7}\",,,, \"9051234567\",,, [10]], [,, \"1800\\\\d{7,9}\",,,, \"180012345678\",,, [11, 12, 13]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PH\", 63, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PK: [, [,, \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",,,,,,, [8, 9, 10, 11, 12], [5, 6, 7]], [,, \"(?:(?:21|42)[2-9]|58[126])\\\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\\\d{5,6}\",,,, \"2123456789\",,, [9, 10], [5, 6, 7, 8]], [,, \"3(?:[0-247]\\\\d|3[0-79]|55|64)\\\\d{7}\",,,, \"3012345678\",,, [10]], [,, \"800\\\\d{5}(?:\\\\d{3})?\",,,, \"80012345\",,, [8, 11]], [,, \"900\\\\d{5}\",,,, \"90012345\",,, [8]], [,,,,,,,,, [-1]], [,, \"122\\\\d{6}\",,,, \"122044444\",,, [9]], [,,,,,,,,, [-1]], \"PK\", 92, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\",,,, \"21111825888\",,, [11, 12]],,, [,,,,,,,,, [-1]]],\n      PL: [, [,, \"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10]], [,, \"47\\\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\\\d{6}|1(?:[0-8]\\\\d{5}|9\\\\d{3}(?:\\\\d{2})?))\",,,, \"123456789\",,, [7, 9]], [,, \"21(?:1[013-5]|2\\\\d|3[4-9])\\\\d{5}|(?:45|5[0137]|6[069]|7[2389]|88)\\\\d{7}\",,,, \"512345678\",,, [9]], [,, \"800\\\\d{6,7}\",,,, \"800123456\",,, [9, 10]], [,, \"70[01346-8]\\\\d{6}\",,,, \"701234567\",,, [9]], [,, \"801\\\\d{6}\",,,, \"801234567\",,, [9]], [,,,,,,,,, [-1]], [,, \"39\\\\d{7}\",,,, \"391234567\",,, [9]], \"PL\", 48, \"00\",,,,,,,, [[, \"(\\\\d{5})\", \"$1\", [\"19\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|20|64\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]],, [,, \"64\\\\d{4,7}\",,,, \"641234567\",,, [6, 7, 8, 9]],,, [,,,,,,,,, [-1]], [,, \"804\\\\d{6}\",,,, \"804123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n      PM: [, [,, \"[45]\\\\d{5}|(?:708|8\\\\d\\\\d)\\\\d{6}\",,,,,,, [6, 9]], [,, \"(?:4[1-35-9]|5[0-47-9]|80[6-9]\\\\d\\\\d)\\\\d{4}\",,,, \"430123\"], [,, \"(?:4[02-489]|5[02-9]|708(?:4[0-5]|5[0-6]))\\\\d{4}\",,,, \"551234\"], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\",,, [9]], [,, \"8[129]\\\\d{7}\",,,, \"810123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PM\", 508, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PR: [, [,, \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",,,,,,, [10], [7]], [,, \"(?:787|939)[2-9]\\\\d{6}\",,,, \"7872345678\",,,, [7]], [,, \"(?:787|939)[2-9]\\\\d{6}\",,,, \"7872345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"PR\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,,,,,,,,, [-1]],, \"787|939\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PS: [, [,, \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",,,,,,, [8, 9, 10], [7]], [,, \"(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\\\d{5}\",,,, \"22234567\",,, [8], [7]], [,, \"5[69]\\\\d{7}\",,,, \"599123456\",,, [9]], [,, \"1800\\\\d{6}\",,,, \"1800123456\",,, [10]], [,,,,,,,,, [-1]], [,, \"1700\\\\d{6}\",,,, \"1700123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PS\", 970, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PT: [, [,, \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",,,,,,, [9]], [,, \"2(?:[12]\\\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\\\d{6}\",,,, \"212345678\"], [,, \"6(?:[06]92(?:30|9\\\\d)|[35]92(?:[049]\\\\d|3[034]))\\\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\\\d\\\\d|480))\\\\d{5}\",,,, \"912345678\"], [,, \"80[02]\\\\d{6}\",,,, \"800123456\"], [,, \"(?:6(?:0[178]|4[68])\\\\d|76(?:0[1-57]|1[2-47]|2[237]))\\\\d{5}\",,,, \"760123456\"], [,, \"80(?:8\\\\d|9[1579])\\\\d{5}\",,,, \"808123456\"], [,, \"884[0-4689]\\\\d{5}\",,,, \"884123456\"], [,, \"30\\\\d{7}\",,,, \"301234567\"], \"PT\", 351, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]],, [,, \"6(?:222\\\\d|8988)\\\\d{4}\",,,, \"622212345\"],,, [,,,,,,,,, [-1]], [,, \"70(?:38[01]|596|(?:7\\\\d|8[17])\\\\d)\\\\d{4}\",,,, \"707123456\"],,, [,, \"600\\\\d{6}|6[06]92(?:0\\\\d|3[349]|49)\\\\d{3}\",,,, \"600110000\"]],\n      PW: [, [,, \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",,,,,,, [7]], [,, \"(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\\\d{4}\",,,, \"2771234\"], [,, \"(?:(?:46|83)[0-5]|6[2-4689]0)\\\\d{4}|(?:45|77|88)\\\\d{5}\",,,, \"6201234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PW\", 680, \"01[12]\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      PY: [, [,, \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",,,,,,, [6, 7, 8, 9, 10, 11], [5]], [,, \"(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\\\d|6[1-578]|75|8[0-8])|858)\\\\d{5,6}\",,,, \"212345678\",,, [7, 8, 9], [5, 6]], [,, \"9(?:51|6[129]|7[1-6]|8[1-7]|9[1-5])\\\\d{6}\",,,, \"961456789\",,, [9]], [,, \"9800\\\\d{5,7}\",,,, \"98000123456\",,, [9, 10, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"8700[0-4]\\\\d{4}\",,,, \"870012345\",,, [9]], \"PY\", 595, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-7])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"[2-9]0\\\\d{4,7}\",,,, \"201234567\",,, [6, 7, 8, 9]],,, [,,,,,,,,, [-1]]],\n      QA: [, [,, \"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",,,,,,, [7, 8, 9, 11]], [,, \"4(?:1111|2022)\\\\d{3}|4(?:[04]\\\\d\\\\d|14[0-6]|999)\\\\d{4}\",,,, \"44123456\",,, [8]], [,, \"[35-7]\\\\d{7}\",,,, \"33123456\",,, [8]], [,, \"800\\\\d{4}|(?:0080[01]|800)\\\\d{6}\",,,, \"8001234\",,, [7, 9, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"QA\", 974, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[16]|8\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]],, [,, \"2[16]\\\\d{5}\",,,, \"2123456\",,, [7]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      RE: [, [,, \"709\\\\d{6}|(?:26|[689]\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\",,,, \"262161234\"], [,, \"(?:69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\\\d{4}\",,,, \"692123456\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,, \"89[1-37-9]\\\\d{6}\",,,, \"891123456\"], [,, \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\",,,, \"810123456\"], [,,,,,,,,, [-1]], [,, \"9(?:399[0-3]|479[0-5]|76(?:2[278]|3[0-37]))\\\\d{4}\",,,, \"939901234\"], \"RE\", 262, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[26-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      RO: [, [,, \"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",,,,,,, [6, 9]], [,, \"[23][13-6]\\\\d{7}|(?:2(?:19\\\\d|[3-6]\\\\d9)|31\\\\d\\\\d)\\\\d\\\\d\",,,, \"211234567\"], [,, \"(?:630|702)0\\\\d{5}|(?:6(?:00|2\\\\d)|7(?:0[013-9]|1[0-3]|[2-7]\\\\d|8[03-8]|9[0-39]))\\\\d{6}\",,,, \"712034567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"90[0136]\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"801\\\\d{6}\",,,, \"801123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RO\", 40, \"00\", \"0\", \" int \",, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[236-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:37\\\\d|80[578])\\\\d{6}\",,,, \"372123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n      RS: [, [,, \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",,,,,,, [6, 7, 8, 9, 10, 11, 12], [4, 5]], [,, \"(?:11[1-9]\\\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\\\d))\\\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\\\d{4,9}\",,,, \"10234567\",,, [7, 8, 9, 10, 11, 12], [4, 5, 6]], [,, \"6(?:[0-689]|7\\\\d)\\\\d{6,7}\",,,, \"601234567\",,, [8, 9, 10]], [,, \"800\\\\d{3,9}\",,,, \"80012345\"], [,, \"(?:78\\\\d|90[0169])\\\\d{3,7}\",,,, \"90012345\",,, [6, 7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RS\", 381, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"7[06]\\\\d{4,10}\",,,, \"700123456\"],,, [,,,,,,,,, [-1]]],\n      RU: [, [,, \"8\\\\d{13}|[347-9]\\\\d{9}\",,,,,,, [10, 14], [7]], [,, \"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",,,, \"3011234567\",,, [10], [7]], [,, \"9\\\\d{9}\",,,, \"9123456789\",,, [10]], [,, \"8(?:0[04]|108\\\\d{3})\\\\d{7}\",,,, \"8001234567\"], [,, \"80[39]\\\\d{7}\",,,, \"8091234567\",,, [10]], [,,,,,,,,, [-1]], [,, \"808\\\\d{7}\",,,, \"8081234567\",,, [10]], [,,,,,,,,, [-1]], \"RU\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"[0-79]\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\",, 1], [, \"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\",, 1], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], [[, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\",, 1], [, \"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\",, 1], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], [,,,,,,,,, [-1]], 1, \"3[04-689]|[489]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      RW: [, [,, \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",,,,,,, [8, 9]], [,, \"(?:06|2[23568]\\\\d)\\\\d{6}\",,,, \"250123456\"], [,, \"7[237-9]\\\\d{7}\",,,, \"720123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"900\\\\d{6}\",,,, \"900123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RW\", 250, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SA: [, [,, \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",,,,,,, [9, 10], [7]], [,, \"1(?:1\\\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\",,,, \"112345678\",,, [9], [7]], [,, \"579[01]\\\\d{5}|5(?:[013-689]\\\\d|7[0-8])\\\\d{6}\",,,, \"512345678\",,, [9]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"925\\\\d{6}\",,,, \"925012345\",,, [9]], [,, \"920\\\\d{6}\",,,, \"920012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SA\", 966, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"811\\\\d{7}\",,,, \"8110123456\",,, [10]],,, [,,,,,,,,, [-1]]],\n      SB: [, [,, \"[6-9]\\\\d{6}|[1-6]\\\\d{4}\",,,,,,, [5, 7]], [,, \"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\",,,, \"40123\",,, [5]], [,, \"48\\\\d{3}|(?:(?:6[89]|7[1-9]|8[4-9])\\\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\\\d{4}\",,,, \"7421234\"], [,, \"1[38]\\\\d{3}\",,,, \"18123\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5[12]\\\\d{3}\",,,, \"51123\",,, [5]], \"SB\", 677, \"0[01]\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SC: [, [,, \"(?:[2489]\\\\d|64)\\\\d{5}\",,,,,,, [7]], [,, \"4[2-46]\\\\d{5}\",,,, \"4217123\"], [,, \"2[125-8]\\\\d{5}\",,,, \"2510123\"], [,, \"800[08]\\\\d{3}\",,,, \"8000000\"], [,, \"85\\\\d{5}\",,,, \"8512345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"971\\\\d{4}|(?:64|95)\\\\d{5}\",,,, \"6412345\"], \"SC\", 248, \"010|0[0-2]\",,,,,, \"00\",, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SD: [, [,, \"[19]\\\\d{8}\",,,,,,, [9]], [,, \"1(?:5\\\\d|8[35-7])\\\\d{6}\",,,, \"153123456\"], [,, \"(?:1[0-2]|9[0-3569])\\\\d{7}\",,,, \"911231234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SD\", 249, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SE: [, [,, \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 12]], [,, \"(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\\\d)\\\\d|90[1-9])\\\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\\\d{5,6}\",,,, \"8123456\",,, [7, 8, 9]], [,, \"7[02369]\\\\d{7}\",,,, \"701234567\",,, [9]], [,, \"20\\\\d{4,7}\",,,, \"20123456\",,, [6, 7, 8, 9]], [,, \"649\\\\d{6}|99[1-59]\\\\d{4}(?:\\\\d{3})?|9(?:00|39|44)[1-8]\\\\d{3,6}\",,,, \"9001234567\",,, [7, 8, 9, 10]], [,, \"77[0-7]\\\\d{6}\",,,, \"771234567\",,, [9]], [,, \"75[1-8]\\\\d{6}\",,,, \"751234567\",,, [9]], [,,,,,,,,, [-1]], \"SE\", 46, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"20\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"9(?:00|39|44|9)\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"]], [, \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1 $2 $3\", [\"9(?:00|39|44)\"]], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"10|7\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]]], [,, \"74[02-9]\\\\d{6}\",,,, \"740123456\",,, [9]],,, [,,,,,,,,, [-1]], [,, \"10[1-8]\\\\d{6}\",,,, \"102345678\",,, [9]],,, [,, \"(?:25[245]|67[3-68])\\\\d{9}\",,,, \"254123456789\",,, [12]]],\n      SG: [, [,, \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",,,,,,, [8, 10, 11]], [,, \"662[0-24-9]\\\\d{4}|6(?:[0-578]\\\\d|6[013-57-9]|9[0-35-9])\\\\d{5}\",,,, \"61234567\",,, [8]], [,, \"896[0-4]\\\\d{4}|(?:8(?:0[1-9]|[1-8]\\\\d|9[0-5])|9[0-8]\\\\d)\\\\d{5}\",,,, \"81234567\",,, [8]], [,, \"(?:18|8)00\\\\d{7}\",,,, \"18001234567\",,, [10, 11]], [,, \"1900\\\\d{7}\",,,, \"19001234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:3[12]\\\\d|666)\\\\d{5}\",,,, \"31234567\",,, [8]], \"SG\", 65, \"0[0-3]\\\\d\",,,,,,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"1[013-9]|77\", \"1(?:[013-8]|9(?:0[1-9]|[1-9]))|77\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"7000\\\\d{7}\",,,, \"70001234567\",,, [11]],,, [,,,,,,,,, [-1]]],\n      SH: [, [,, \"(?:[256]\\\\d|8)\\\\d{3}\",,,,,,, [4, 5]], [,, \"2(?:[0-57-9]\\\\d|6[4-9])\\\\d\\\\d\",,,, \"22158\"], [,, \"[56]\\\\d{4}\",,,, \"51234\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"262\\\\d\\\\d\",,,, \"26212\",,, [5]], \"SH\", 290, \"00\",,,,,,,,,, [,,,,,,,,, [-1]], 1, \"[256]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SI: [, [,, \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",,,,,,, [5, 6, 7, 8]], [,, \"(?:[1-357][2-8]|4[24-8])\\\\d{6}\",,,, \"12345678\",,, [8], [7]], [,, \"65(?:[178]\\\\d|5[56]|6[01])\\\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\\\d{6}\",,,, \"31234567\",,, [8]], [,, \"80\\\\d{4,6}\",,,, \"80123456\",,, [6, 7, 8]], [,, \"89[1-3]\\\\d{2,5}|90\\\\d{4,6}\",,,, \"90123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:59\\\\d\\\\d|8(?:1(?:[67]\\\\d|8[0-589])|2(?:0\\\\d|2[0-37-9]|8[0-2489])|3[389]\\\\d))\\\\d{4}\",,,, \"59012345\",,, [8]], \"SI\", 386, \"00|10(?:22|66|88|99)\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SJ: [, [,, \"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",,,,,,, [5, 8]], [,, \"79\\\\d{6}\",,,, \"79123456\",,, [8]], [,, \"(?:4[015-8]|9\\\\d)\\\\d{6}\",,,, \"41234567\",,, [8]], [,, \"80[01]\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"82[09]\\\\d{5}\",,,, \"82012345\",,, [8]], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",,,, \"81021234\",,, [8]], [,, \"880\\\\d{5}\",,,, \"88012345\",,, [8]], [,, \"85[0-5]\\\\d{5}\",,,, \"85012345\",,, [8]], \"SJ\", 47, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"79\", [,,,,,,,,, [-1]], [,, \"(?:0[235-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\",,,, \"02000\"],,, [,, \"81[23]\\\\d{5}\",,,, \"81212345\",,, [8]]],\n      SK: [, [,, \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",,,,,,, [6, 7, 9]], [,, \"(?:2(?:16|[2-9]\\\\d{3})|(?:(?:[3-5][1-8]\\\\d|819)\\\\d|601[1-5])\\\\d)\\\\d{4}|(?:2|[3-5][1-8])1[67]\\\\d{3}|[3-5][1-8]16\\\\d\\\\d\",,,, \"221234567\"], [,, \"909[1-9]\\\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\\\d)\\\\d{6}\",,,, \"912123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"9(?:00|[78]\\\\d)\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"8[5-9]\\\\d{7}\",,,, \"850123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"6(?:02|5[0-4]|9[0-6])\\\\d{6}\",,,, \"690123456\",,, [9]], \"SK\", 421, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"909\", \"9090\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [,, \"9090\\\\d{3}\",,,, \"9090123\",,, [7]],,, [,, \"9090\\\\d{3}|(?:602|8(?:00|[5-9]\\\\d)|9(?:00|[78]\\\\d))\\\\d{6}\",,,,,,, [7, 9]], [,, \"96\\\\d{7}\",,,, \"961234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n      SL: [, [,, \"(?:[237-9]\\\\d|66)\\\\d{6}\",,,,,,, [8], [6]], [,, \"22[2-4][2-9]\\\\d{4}\",,,, \"22221234\",,,, [6]], [,, \"(?:25|3[0-5]|66|7[2-9]|8[08]|9[09])\\\\d{6}\",,,, \"25123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SL\", 232, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SM: [, [,, \"(?:0549|[5-7]\\\\d)\\\\d{6}\",,,,,,, [8, 10], [6]], [,, \"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\",,,, \"0549886377\",,, [10], [6]], [,, \"6[16]\\\\d{6}\",,,, \"66661212\",,, [8]], [,,,,,,,,, [-1]], [,, \"7[178]\\\\d{6}\",,,, \"71123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5[158]\\\\d{6}\",,,, \"58001110\",,, [8]], \"SM\", 378, \"00\",,,, \"([89]\\\\d{5})$\", \"0549$1\",,, [[, \"(\\\\d{6})\", \"$1\", [\"[89]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SN: [, [,, \"(?:[378]\\\\d|93)\\\\d{7}\",,,,,,, [9]], [,, \"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\\\d{5}\",,,, \"301012345\"], [,, \"7(?:(?:[06-8]\\\\d|[19]0|21)\\\\d|5(?:0[01]|[19]0|2[25]|3[36]|[4-7]\\\\d|8[35]))\\\\d{5}\",,,, \"701234567\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,, \"88[4689]\\\\d{6}\",,,, \"884123456\"], [,, \"81[02468]\\\\d{6}\",,,, \"810123456\"], [,,,,,,,,, [-1]], [,, \"(?:3(?:392|9[01]\\\\d)\\\\d|93(?:3[13]0|929))\\\\d{4}\",,,, \"933301234\"], \"SN\", 221, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SO: [, [,, \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",,,,,,, [6, 7, 8, 9]], [,, \"(?:1\\\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\\\d{5}|(?:[134]\\\\d|8[125])\\\\d{4}\",,,, \"4012345\",,, [6, 7]], [,, \"(?:(?:15|(?:3[59]|4[89]|6\\\\d|7[79]|8[08])\\\\d|9(?:0\\\\d|[2-9]))\\\\d|2(?:4\\\\d|8))\\\\d{5}|(?:[67]\\\\d\\\\d|904)\\\\d{5}\",,,, \"71123456\",,, [7, 8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SO\", 252, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [, \"(\\\\d{6})\", \"$1\", [\"[134]\"]], [, \"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"(?:2|90)4|[67]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[348]|64|79|90\"]], [, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6[0-35-9]|77|9[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SR: [, [,, \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",,,,,,, [6, 7]], [,, \"(?:2[1-3]|3[0-7]|(?:4|68)\\\\d|5[2-58])\\\\d{4}\",,,, \"211234\"], [,, \"(?:7[124-7]|8[124-9])\\\\d{5}\",,,, \"7412345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"56\\\\d{4}\",,,, \"561234\",,, [6]], \"SR\", 597, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SS: [, [,, \"[19]\\\\d{8}\",,,,,,, [9]], [,, \"1[89]\\\\d{7}\",,,, \"181234567\"], [,, \"(?:12|9[1257-9])\\\\d{7}\",,,, \"977123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SS\", 211, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ST: [, [,, \"(?:22|9\\\\d)\\\\d{5}\",,,,,,, [7]], [,, \"22\\\\d{5}\",,,, \"2221234\"], [,, \"900[5-9]\\\\d{3}|9(?:0[1-9]|[89]\\\\d)\\\\d{4}\",,,, \"9812345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ST\", 239, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SV: [, [,, \"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\",,,,,,, [7, 8, 11]], [,, \"2(?:79(?:0[0347-9]|[1-9]\\\\d)|89(?:0[024589]|[1-9]\\\\d))\\\\d{3}|2(?:[1-69]\\\\d|[78][0-8])\\\\d{5}\",,,, \"21234567\",,, [8]], [,, \"[67]\\\\d{7}\",,,, \"70123456\",,, [8]], [,, \"800\\\\d{8}|80[01]\\\\d{4}\",,,, \"8001234\",,, [7, 11]], [,, \"900\\\\d{4}(?:\\\\d{4})?\",,,, \"9001234\",,, [7, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SV\", 503, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SX: [, [,, \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\",,,, \"7215425678\",,,, [7]], [,, \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\",,,, \"7215205678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"SX\", 1, \"011\", \"1\",,, \"(5\\\\d{6})$|1\", \"721$1\",,,,, [,,,,,,,,, [-1]],, \"721\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SY: [, [,, \"[1-359]\\\\d{8}|[1-5]\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"21\\\\d{6,7}|(?:1(?:[14]\\\\d|[2356])|2[235]|3(?:[13]\\\\d|4)|4[134]|5[1-3])\\\\d{6}\",,,, \"112345678\",,,, [6, 7]], [,, \"(?:50|9[1-689])\\\\d{7}\",,,, \"944567890\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SY\", 963, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-4]|5[1-3]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[59]\"], \"0$1\",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      SZ: [, [,, \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",,,,,,, [8, 9]], [,, \"[23][2-5]\\\\d{6}\",,,, \"22171234\",,, [8]], [,, \"7[6-9]\\\\d{6}\",,,, \"76123456\",,, [8]], [,, \"0800\\\\d{4}\",,,, \"08001234\",,, [8]], [,, \"900\\\\d{6}\",,,, \"900012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"70\\\\d{6}\",,,, \"70012345\",,, [8]], \"SZ\", 268, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,, \"0800\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TA: [, [,, \"8\\\\d{3}\",,,,,,, [4]], [,, \"8\\\\d{3}\",,,, \"8999\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TA\", 290, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"8\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TC: [, [,, \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"649(?:266|712|9(?:4\\\\d|50))\\\\d{4}\",,,, \"6497121234\",,,, [7]], [,, \"649(?:2(?:3[129]|4[1-79])|3\\\\d\\\\d|4[34][1-3])\\\\d{4}\",,,, \"6492311234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"649(?:71[01]|966)\\\\d{4}\",,,, \"6497101234\",,,, [7]], \"TC\", 1, \"011\", \"1\",,, \"([2-479]\\\\d{6})$|1\", \"649$1\",,,,, [,,,,,,,,, [-1]],, \"649\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TD: [, [,, \"(?:22|[689]\\\\d|77)\\\\d{6}\",,,,,,, [8]], [,, \"22(?:[37-9]0|5[0-5]|6[89])\\\\d{4}\",,,, \"22501234\"], [,, \"(?:[69]\\\\d|77|8[56])\\\\d{6}\",,,, \"63012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TD\", 235, \"00|16\",,,,,, \"00\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[26-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TG: [, [,, \"[279]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\\\d{5}\",,,, \"22212345\"], [,, \"(?:7[0-29]|9[0-36-9])\\\\d{6}\",,,, \"90112345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TG\", 228, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TH: [, [,, \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",,,,,,, [8, 9, 10, 13]], [,, \"(?:1[0689]|2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\",,,, \"21234567\",,, [8]], [,, \"67(?:1[0-8]|2[4-7])\\\\d{5}|(?:14|6[1-6]|[89]\\\\d)\\\\d{7}\",,,, \"812345678\",,, [9]], [,, \"(?:001800\\\\d|1800)\\\\d{6}\",,,, \"1800123456\",,, [10, 13]], [,, \"1900\\\\d{6}\",,,, \"1900123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"6[08]\\\\d{7}\",,,, \"601234567\",,, [9]], \"TH\", 66, \"00[1-9]\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TJ: [, [,, \"[0-57-9]\\\\d{8}\",,,,,,, [9], [3, 5, 6, 7]], [,, \"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\",,,, \"372123456\",,,, [3, 5, 6, 7]], [,, \"(?:33[03-9]|4(?:1[18]|4[02-479])|81[1-9])\\\\d{6}|(?:[09]\\\\d|1[0178]|2[02]|[34]0|5[05]|7[01578]|8[078])\\\\d{7}\",,,, \"917123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TJ\", 992, \"810\",,,,,, \"8~10\",, [[, \"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"44[02-479]|[34]7\"]], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[1245]|3[12])\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TK: [, [,, \"[2-47]\\\\d{3,6}\",,,,,,, [4, 5, 6, 7]], [,, \"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\",,,, \"3101\"], [,, \"7[2-4]\\\\d{2,5}\",,,, \"7290\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TK\", 690, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TL: [, [,, \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",,,,,,, [7, 8]], [,, \"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\",,,, \"2112345\",,, [7]], [,, \"7[2-8]\\\\d{6}\",,,, \"77212345\",,, [8]], [,, \"80\\\\d{5}\",,,, \"8012345\",,, [7]], [,, \"90\\\\d{5}\",,,, \"9012345\",,, [7]], [,,,,,,,,, [-1]], [,, \"70\\\\d{5}\",,,, \"7012345\",,, [7]], [,,,,,,,,, [-1]], \"TL\", 670, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TM: [, [,, \"(?:[1-6]\\\\d|71)\\\\d{6}\",,,,,,, [8]], [,, \"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\",,,, \"12345678\"], [,, \"(?:6\\\\d|71)\\\\d{6}\",,,, \"66123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TM\", 993, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[67]\"], \"8 $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TN: [, [,, \"[2-57-9]\\\\d{7}\",,,,,,, [8]], [,, \"81200\\\\d{3}|(?:3[0-2]|7\\\\d)\\\\d{6}\",,,, \"30010123\"], [,, \"3(?:001|[12]40)\\\\d{4}|(?:(?:[259]\\\\d|4[0-8])\\\\d|3(?:1[1-35]|6[0-4]|91))\\\\d{5}\",,,, \"20123456\"], [,, \"8010\\\\d{4}\",,,, \"80101234\"], [,, \"88\\\\d{6}\",,,, \"88123456\"], [,, \"8[12]10\\\\d{4}\",,,, \"81101234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TN\", 216, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TO: [, [,, \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",,,,,,, [5, 7]], [,, \"(?:2\\\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\\\d{3}\",,,, \"20123\",,, [5]], [,, \"(?:5(?:4[0-5]|5[4-6])|6(?:[09]\\\\d|3[02]|8[15-9])|(?:7\\\\d|8[46-9])\\\\d|999)\\\\d{4}\",,,, \"7715123\",,, [7]], [,, \"0800\\\\d{3}\",,,, \"0800222\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"55[0-37-9]\\\\d{4}\",,,, \"5510123\",,, [7]], \"TO\", 676, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TR: [, [,, \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [7, 10, 12, 13]], [,, \"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\",,,, \"2123456789\",,, [10]], [,, \"561(?:011|61\\\\d)\\\\d{4}|5(?:0[15-7]|1[06]|24|[34]\\\\d|5[1-59]|9[46])\\\\d{7}\",,,, \"5012345678\",,, [10]], [,, \"8(?:00\\\\d{7}(?:\\\\d{2,3})?|11\\\\d{7})\",,,, \"8001234567\",,, [10, 12, 13]], [,, \"(?:8[89]8|900)\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,, \"592(?:21[12]|461)\\\\d{4}\",,,, \"5922121234\",,, [10]], [,, \"850\\\\d{7}\",,,, \"8500123456\",,, [10]], \"TR\", 90, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d)(\\\\d{3})\", \"$1 $2 $3\", [\"444\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\",, 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\",, 1]], [,, \"512\\\\d{7}\",,,, \"5123456789\",,, [10]],,, [,, \"(?:444|811\\\\d{3})\\\\d{4}\",,,,,,, [7, 10]], [,, \"444\\\\d{4}\",,,, \"4441444\",,, [7]],,, [,,,,,,,,, [-1]]],\n      TT: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"868(?:2(?:01|1[5-9]|[23]\\\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\",,,, \"8682211234\",,,, [7]], [,, \"868(?:(?:2[5-9]|3\\\\d)\\\\d|4(?:3[0-6]|[6-9]\\\\d)|6(?:20|78|8\\\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\\\d))\\\\d{4}\",,,, \"8682911234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"TT\", 1, \"011\", \"1\",,, \"([2-46-8]\\\\d{6})$|1\", \"868$1\",,,,, [,,,,,,,,, [-1]],, \"868\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"868619\\\\d{4}\",,,, \"8686191234\",,,, [7]]],\n      TV: [, [,, \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",,,,,,, [5, 6, 7]], [,, \"2[02-9]\\\\d{3}\",,,, \"20123\",,, [5]], [,, \"(?:7[01]\\\\d|90)\\\\d{4}\",,,, \"901234\",,, [6, 7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TV\", 688, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      TW: [, [,, \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",,,,,,, [7, 8, 9, 10, 11]], [,, \"(?:2[2-8]\\\\d|370|55[01]|7[1-9])\\\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\\\d)|1[023]\\\\d)\\\\d{4,5}|(?:[239]\\\\d\\\\d|4(?:0[56]|12|49))\\\\d{5})|6(?:[01]\\\\d{7}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|8(?:(?:2(?:3\\\\d|4[0-269]|[578]0|66)|36[24-9]|90\\\\d\\\\d)\\\\d{4}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|(?:2(?:2(?:0\\\\d\\\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\\\d|1[0-4])|(?:4\\\\d|5[0-49]|6[0-29]|7[0-5])\\\\d)\\\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\\\d\\\\d|4(?:2(?:[089]\\\\d|7[1-9])|(?:3[0-4]|[78]\\\\d|9[01])\\\\d))\\\\d)\\\\d{3}\",,,, \"221234567\",,, [8, 9]], [,, \"(?:40001[0-2]|9[0-8]\\\\d{4})\\\\d{3}\",,,, \"912345678\",,, [9]], [,, \"80[0-79]\\\\d{6}|800\\\\d{5}\",,,, \"800123456\",,, [8, 9]], [,, \"20(?:[013-9]\\\\d\\\\d|2)\\\\d{4}\",,,, \"203123456\",,, [7, 9]], [,,,,,,,,, [-1]], [,, \"99\\\\d{7}\",,,, \"990123456\",,, [9]], [,, \"7010(?:[0-2679]\\\\d|3[0-7]|8[0-5])\\\\d{5}|70\\\\d{8}\",,,, \"7012345678\",,, [10, 11]], \"TW\", 886, \"0(?:0[25-79]|19)\", \"0\", \"#\",, \"0\",,,, [[, \"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"50[0-46-9]\\\\d{6}\",,,, \"500123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n      TZ: [, [,, \"(?:[25-8]\\\\d|41|90)\\\\d{7}\",,,,,,, [9]], [,, \"2[2-8]\\\\d{7}\",,,, \"222345678\"], [,, \"(?:6[125-9]|7[13-9])\\\\d{7}\",,,, \"621234567\"], [,, \"80[08]\\\\d{6}\",,,, \"800123456\"], [,, \"90\\\\d{7}\",,,, \"900123456\"], [,, \"8(?:40|6[01])\\\\d{6}\",,,, \"840123456\"], [,,,,,,,,, [-1]], [,, \"41\\\\d{7}\",,,, \"412345678\"], \"TZ\", 255, \"00[056]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"(?:8(?:[04]0|6[01])|90\\\\d)\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      UA: [, [,, \"[89]\\\\d{9}|[3-9]\\\\d{8}\",,,,,,, [9, 10], [5, 6, 7]], [,, \"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\",,,, \"311234567\",,, [9], [5, 6, 7]], [,, \"790\\\\d{6}|(?:39|50|6[36-8]|7[1-357]|9[1-9])\\\\d{7}\",,,, \"501234567\",,, [9]], [,, \"800[1-8]\\\\d{5,6}\",,,, \"800123456\"], [,, \"900[239]\\\\d{5,6}\",,,, \"900212345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"89[1-579]\\\\d{6}\",,,, \"891234567\",,, [9]], \"UA\", 380, \"00\", \"0\",,, \"0\",, \"0~0\",, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      UG: [, [,, \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",,,,,,, [9], [5, 6, 7]], [,, \"20(?:(?:240|30[67])\\\\d|6(?:00[0-2]|30[0-4]))\\\\d{3}|(?:20(?:[017]\\\\d|2[5-9]|3[1-4]|5[0-4]|6[15-9])|[34]\\\\d{3})\\\\d{5}\",,,, \"312345678\",,,, [5, 6, 7]], [,, \"72[48]0\\\\d{5}|7(?:[015-8]\\\\d|2[067]|36|4[0-6]|9[89])\\\\d{6}\",,,, \"712345678\"], [,, \"800[1-3]\\\\d{5}\",,,, \"800123456\"], [,, \"90[1-3]\\\\d{6}\",,,, \"901123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UG\", 256, \"00[057]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      US: [, [,, \"[2-9]\\\\d{9}|3\\\\d{6}\",,,,,,, [10], [7]], [,, \"(?:3052(?:0[0-8]|[1-9]\\\\d)|5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:305[3-9]|472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",,,, \"2015550123\",,,, [7]], [,, \"(?:3052(?:0[0-8]|[1-9]\\\\d)|5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:305[3-9]|472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",,,, \"2015550123\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"305209\\\\d{4}\",,,, \"3052090123\",,,, [7]], \"US\", 1, \"011\", \"1\",,, \"1\",,, 1, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"],,, 1], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[24-9]|3(?:[02-9]|1[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"],,, 1]], [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-9]\"]]], [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      UY: [, [,, \"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 11, 12, 13]], [,, \"(?:1(?:770|9(?:20|[89]7))|(?:2\\\\d|4[2-7])\\\\d\\\\d)\\\\d{4}\",,,, \"21231234\",,, [8], [7]], [,, \"9[1-9]\\\\d{6}\",,,, \"94231234\",,, [8]], [,, \"0004\\\\d{2,9}|(?:405|80[05])\\\\d{4}\",,,, \"8001234\"], [,, \"90[0-8]\\\\d{4}\",,,, \"9001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UY\", 598, \"0(?:0|1[3-9]\\\\d)\", \"0\", \" int. \",, \"0\",, \"00\",, [[, \"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[49]0|8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3 $4\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      UZ: [, [,, \"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\",,,,,,, [9]], [,, \"(?:55\\\\d\\\\d|6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|[69]\\\\d\\\\d|7(?:[23]\\\\d|7[69]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|(?:1[12]|[68]\\\\d)\\\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|9(?:22|5[1-9])))\\\\d{5}\",,,, \"669050123\"], [,, \"(?:(?:[25]0|33|88|9[0-57-9])\\\\d{3}|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:(?:11|7\\\\d)\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\\\d)\\\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079])))|7(?:[07]\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07]))))\\\\d{4}\",,,, \"912345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UZ\", 998, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      VA: [, [,, \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",,,,,,, [6, 7, 8, 9, 10, 11, 12]], [,, \"06698\\\\d{1,6}\",,,, \"0669812345\",,, [6, 7, 8, 9, 10, 11]], [,, \"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",,,, \"3123456789\",,, [9, 10]], [,, \"80(?:0\\\\d{3}|3)\\\\d{3}\",,,, \"800123456\",,, [6, 9]], [,, \"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",,,, \"899123456\",,, [6, 8, 9, 10]], [,, \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",,,, \"848123456\",,, [6, 9]], [,, \"1(?:78\\\\d|99)\\\\d{6}\",,,, \"1781234567\",,, [9, 10]], [,, \"55\\\\d{8}\",,,, \"5512345678\",,, [10]], \"VA\", 39, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"06698\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"3[2-8]\\\\d{9,10}\",,,, \"33101234501\",,, [11, 12]]],\n      VC: [, [,, \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\",,,, \"7842661234\",,,, [7]], [,, \"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\\\d{4}\",,,, \"7844301234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"78451[0-2]\\\\d{4}\",,,, \"7845101234\",,,, [7]], \"VC\", 1, \"011\", \"1\",,, \"([2-7]\\\\d{6})$|1\", \"784$1\",,,,, [,,,,,,,,, [-1]],, \"784\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      VE: [, [,, \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",,,,,,, [10], [7]], [,, \"(?:2(?:12|3[457-9]|[467]\\\\d|[58][1-9]|9[1-6])|[4-6]00)\\\\d{7}\",,,, \"2121234567\",,,, [7]], [,, \"4(?:1[24-8]|2[46])\\\\d{7}\",,,, \"4121234567\"], [,, \"800\\\\d{7}\",,,, \"8001234567\"], [,, \"90[01]\\\\d{7}\",,,, \"9001234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"VE\", 58, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\", \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"501\\\\d{7}\",,,, \"5010123456\",,,, [7]],,, [,,,,,,,,, [-1]]],\n      VG: [, [,, \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\\\d{4}\",,,, \"2842291234\",,,, [7]], [,, \"284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|9[69])|5(?:4[0-7]|68|9[69]))\\\\d{4}\",,,, \"2843001234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"VG\", 1, \"011\", \"1\",,, \"([2-578]\\\\d{6})$|1\", \"284$1\",,,,, [,,,,,,,,, [-1]],, \"284\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      VI: [, [,, \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",,,,,,, [10], [7]], [,, \"340(?:2(?:0\\\\d|10|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\\\d)|884|998)\\\\d{4}\",,,, \"3406421234\",,,, [7]], [,, \"340(?:2(?:0\\\\d|10|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\\\d)|884|998)\\\\d{4}\",,,, \"3406421234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"VI\", 1, \"011\", \"1\",,, \"([2-9]\\\\d{6})$|1\", \"340$1\",, 1,,, [,,,,,,,,, [-1]],, \"340\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      VN: [, [,, \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",,,,,,, [7, 8, 9, 10]], [,, \"2(?:0[3-9]|1[0-689]|2[0-25-9]|[38][2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|9[0-4679])\\\\d{7}\",,,, \"2101234567\",,, [10]], [,, \"(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\\\d{6}|(?:3\\\\d|5[1689]|7[06-9]|8[1-8]|9[0-8])\\\\d{7}\",,,, \"912345678\",,, [9]], [,, \"1800\\\\d{4,6}|12(?:0[13]|28)\\\\d{4}\",,,, \"1800123456\",,, [8, 9, 10]], [,, \"1900\\\\d{4,6}\",,,, \"1900123456\",,, [8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"672\\\\d{6}\",,,, \"672012345\",,, [9]], \"VN\", 84, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[17]99\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"69\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\",, 1]], [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\",, 1]], [,,,,,,,,, [-1]],,, [,, \"[17]99\\\\d{4}|69\\\\d{5,6}\",,,,,,, [7, 8]], [,, \"(?:[17]99|80\\\\d)\\\\d{4}|69\\\\d{5,6}\",,,, \"1992000\",,, [7, 8]],,, [,,,,,,,,, [-1]]],\n      VU: [, [,, \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",,,,,,, [5, 7]], [,, \"(?:38[0-8]|48[4-9])\\\\d\\\\d|(?:2[02-9]|3[4-7]|88)\\\\d{3}\",,,, \"22123\",,, [5]], [,, \"(?:[58]\\\\d|7[013-7])\\\\d{5}\",,,, \"5912345\",,, [7]], [,, \"81[18]\\\\d\\\\d\",,,, \"81123\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:0[1-9]|1[01])\\\\d{4}\",,,, \"9010123\",,, [7]], \"VU\", 678, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:3[03]|900\\\\d)\\\\d{3}\",,,, \"30123\"],,, [,,,,,,,,, [-1]]],\n      WF: [, [,, \"(?:40|72|8\\\\d{4})\\\\d{4}|[89]\\\\d{5}\",,,,,,, [6, 9]], [,, \"72\\\\d{4}\",,,, \"721234\",,, [6]], [,, \"(?:72|8[23])\\\\d{4}\",,,, \"821234\",,, [6]], [,, \"80[0-5]\\\\d{6}\",,,, \"800012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9[23]\\\\d{4}\",,,, \"921234\",,, [6]], \"WF\", 681, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[47-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"[48]0\\\\d{4}\",,,, \"401234\",,, [6]]],\n      WS: [, [,, \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",,,,,,, [5, 6, 7, 10]], [,, \"6[1-9]\\\\d{3}|(?:[2-5]|60)\\\\d{4}\",,,, \"22123\",,, [5, 6]], [,, \"(?:7[1-35-7]|8(?:[3-7]|9\\\\d{3}))\\\\d{5}\",,,, \"7212345\",,, [7, 10]], [,, \"800\\\\d{3}\",,,, \"800123\",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"WS\", 685, \"0\",,,,,,,, [[, \"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      XK: [, [,, \"2\\\\d{7,8}|3\\\\d{7,11}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",,,,,,, [8, 9, 10, 11, 12]], [,, \"38\\\\d{6,10}|(?:2[89]|39)(?:0\\\\d{5,6}|[1-9]\\\\d{5})\",,,, \"28012345\"], [,, \"4[3-9]\\\\d{6}\",,,, \"43201234\",,, [8]], [,, \"800\\\\d{5}\",,,, \"80001234\",,, [8]], [,, \"900\\\\d{5}\",,,, \"90001234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"XK\", 383, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2|39\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7,10})\", \"$1 $2\", [\"3\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      YE: [, [,, \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",,,,,,, [7, 8, 9], [6]], [,, \"78[0-7]\\\\d{4}|17\\\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\\\d{5}\",,,, \"1234567\",,, [7, 8], [6]], [,, \"7[01378]\\\\d{7}\",,,, \"712345678\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"YE\", 967, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7(?:[24-6]|8[0-7])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      YT: [, [,, \"7093\\\\d{5}|(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",,,,,,, [9]], [,, \"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\",,,, \"269601234\"], [,, \"(?:639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\\\d{4}\",,,, \"639012345\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\",,,, \"939801234\"], \"YT\", 262, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ZA: [, [,, \"[1-79]\\\\d{8}|8\\\\d{4,9}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"(?:2(?:0330|4302)|52087)0\\\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\",,,, \"101234567\",,, [9]], [,, \"(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\\\d{3}|8[1-4]\\\\d{3,7}|(?:2[27]|47|54)4950\\\\d{3}|(?:1(?:049[2-4]|9[12]\\\\d\\\\d)|(?:6\\\\d\\\\d|7(?:[0-46-9]\\\\d|5[0-4]))\\\\d\\\\d|8(?:5\\\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\\\d{3}|(?:12|[2-5]1)492\\\\d{4}\",,,, \"711234567\",,, [5, 6, 7, 8, 9]], [,, \"80\\\\d{7}\",,,, \"801234567\",,, [9]], [,, \"(?:86[2-9]|9[0-2]\\\\d)\\\\d{6}\",,,, \"862345678\",,, [9]], [,, \"860\\\\d{6}\",,,, \"860123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\\\d)\\\\d{5}\",,,, \"871234567\",,, [9]], \"ZA\", 27, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"861\\\\d{6,7}\",,,, \"861123456\",,, [9, 10]],,, [,,,,,,,,, [-1]]],\n      ZM: [, [,, \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",,,,,,, [9], [6]], [,, \"21[1-8]\\\\d{6}\",,,, \"211234567\",,,, [6]], [,, \"(?:7[5-79]|9[5-8])\\\\d{7}\",,,, \"955123456\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"63\\\\d{7}\",,,, \"630123456\"], \"ZM\", 260, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      ZW: [, [,, \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",,,,,,, [5, 6, 7, 8, 9, 10], [3, 4]], [,, \"(?:1(?:(?:3\\\\d|9)\\\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\\\d\\\\d|[56](?:[14]\\\\d\\\\d|20)|7(?:[089]|2[03]|[35]\\\\d\\\\d))\\\\d|4(?:2\\\\d\\\\d|8))\\\\d|1(?:2|[39]\\\\d{4}))|3(?:(?:123|(?:29\\\\d|92)\\\\d)\\\\d\\\\d|7(?:[19]|[56]\\\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\\\d{3}|83)|5(?:25\\\\d\\\\d|[78])|[689]\\\\d)|6(?:(?:[16-8]21|28|52[013])\\\\d\\\\d|[39])|8(?:[1349]28|523)\\\\d\\\\d)\\\\d{3}|(?:4\\\\d\\\\d|9[2-9])\\\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\\\d|7[1-7])\\\\d|2(?:[278]\\\\d|92)|58(?:2\\\\d|3))|3(?:[26]|9\\\\d{3})|5(?:4\\\\d|5)\\\\d\\\\d)\\\\d|6(?:(?:(?:[0-246]|[78]\\\\d)\\\\d|37)\\\\d|5[2-8]))\\\\d\\\\d|(?:2(?:[569]\\\\d|8[2-57-9])|3(?:[013-59]\\\\d|8[37])|6[89]8)\\\\d{3}\",,,, \"1312345\",,,, [3, 4]], [,, \"7(?:[1278]\\\\d|3[1-9])\\\\d{6}\",,,, \"712345678\",,, [9]], [,, \"80(?:[01]\\\\d|20|8[0-8])\\\\d{3}\",,,, \"8001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"86(?:1[12]|22|30|44|55|77|8[368])\\\\d{6}\",,,, \"8686123456\",,, [10]], \"ZW\", 263, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      800: [, [,, \"(?:00|[1-9]\\\\d)\\\\d{6}\",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:00|[1-9]\\\\d)\\\\d{6}\",,,, \"12345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 800,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      808: [, [,, \"[1-9]\\\\d{7}\",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"[1-9]\\\\d{7}\",,,, \"12345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 808,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      870: [, [,, \"7\\\\d{11}|[235-7]\\\\d{8}\",,,,,,, [9, 12]], [,,,,,,,,, [-1]], [,, \"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\",,,, \"301234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"2\\\\d{8}\",,,, \"201234567\",,, [9]], \"001\", 870,,,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-7]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      878: [, [,, \"10\\\\d{10}\",,,,,,, [12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"10\\\\d{10}\",,,, \"101234567890\"], \"001\", 878,,,,,,,, 1, [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      881: [, [,, \"6\\\\d{9}|[0-36-9]\\\\d{8}\",,,,,,, [9, 10]], [,,,,,,,,, [-1]], [,, \"6\\\\d{9}|[0-36-9]\\\\d{8}\",,,, \"612345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 881,,,,,,,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-37-9]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{5,6})\", \"$1 $2 $3\", [\"6\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      882: [, [,, \"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",,,,,,, [7, 8, 9, 10, 11, 12]], [,,,,,,,,, [-1]], [,, \"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",,,, \"3421234\",,, [7, 8, 9, 10, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\",,,, \"390123456789\"], \"001\", 882,,,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"49\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1[36]|9\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"16\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|23|3(?:[15]|4[57])|4|51\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [, \"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-35]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"348[57]\\\\d{7}\",,,, \"34851234567\",,, [11]]],\n      883: [, [,, \"(?:[1-4]\\\\d|51)\\\\d{6,10}\",,,,,,, [8, 9, 10, 11, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\",,,, \"510012345\"], \"001\", 883,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3\", [\"[14]|2[24-689]|3[02-689]|51[24-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"21\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[235]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n      888: [, [,, \"\\\\d{11}\",,,,,,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 888,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"\\\\d{11}\",,,, \"12345678901\"],,, [,,,,,,,,, [-1]]],\n      979: [, [,, \"[1359]\\\\d{8}\",,,,,,, [9], [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"[1359]\\\\d{8}\",,,, \"123456789\",,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 979,,,,,,,, 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]]\n    };\n  function K() {\n    this.g = {};\n  }\n  K.h = void 0;\n  K.g = function () {\n    return K.h ? K.h : K.h = new K();\n  };\n  var Ea = {\n      0: \"0\",\n      1: \"1\",\n      2: \"2\",\n      3: \"3\",\n      4: \"4\",\n      5: \"5\",\n      6: \"6\",\n      7: \"7\",\n      8: \"8\",\n      9: \"9\",\n      \"\\uFF10\": \"0\",\n      \"\\uFF11\": \"1\",\n      \"\\uFF12\": \"2\",\n      \"\\uFF13\": \"3\",\n      \"\\uFF14\": \"4\",\n      \"\\uFF15\": \"5\",\n      \"\\uFF16\": \"6\",\n      \"\\uFF17\": \"7\",\n      \"\\uFF18\": \"8\",\n      \"\\uFF19\": \"9\",\n      \"\\u0660\": \"0\",\n      \"\\u0661\": \"1\",\n      \"\\u0662\": \"2\",\n      \"\\u0663\": \"3\",\n      \"\\u0664\": \"4\",\n      \"\\u0665\": \"5\",\n      \"\\u0666\": \"6\",\n      \"\\u0667\": \"7\",\n      \"\\u0668\": \"8\",\n      \"\\u0669\": \"9\",\n      \"\\u06F0\": \"0\",\n      \"\\u06F1\": \"1\",\n      \"\\u06F2\": \"2\",\n      \"\\u06F3\": \"3\",\n      \"\\u06F4\": \"4\",\n      \"\\u06F5\": \"5\",\n      \"\\u06F6\": \"6\",\n      \"\\u06F7\": \"7\",\n      \"\\u06F8\": \"8\",\n      \"\\u06F9\": \"9\"\n    },\n    Fa = {\n      0: \"0\",\n      1: \"1\",\n      2: \"2\",\n      3: \"3\",\n      4: \"4\",\n      5: \"5\",\n      6: \"6\",\n      7: \"7\",\n      8: \"8\",\n      9: \"9\",\n      \"+\": \"+\",\n      \"*\": \"*\",\n      \"#\": \"#\"\n    },\n    Ga = {\n      0: \"0\",\n      1: \"1\",\n      2: \"2\",\n      3: \"3\",\n      4: \"4\",\n      5: \"5\",\n      6: \"6\",\n      7: \"7\",\n      8: \"8\",\n      9: \"9\",\n      \"\\uFF10\": \"0\",\n      \"\\uFF11\": \"1\",\n      \"\\uFF12\": \"2\",\n      \"\\uFF13\": \"3\",\n      \"\\uFF14\": \"4\",\n      \"\\uFF15\": \"5\",\n      \"\\uFF16\": \"6\",\n      \"\\uFF17\": \"7\",\n      \"\\uFF18\": \"8\",\n      \"\\uFF19\": \"9\",\n      \"\\u0660\": \"0\",\n      \"\\u0661\": \"1\",\n      \"\\u0662\": \"2\",\n      \"\\u0663\": \"3\",\n      \"\\u0664\": \"4\",\n      \"\\u0665\": \"5\",\n      \"\\u0666\": \"6\",\n      \"\\u0667\": \"7\",\n      \"\\u0668\": \"8\",\n      \"\\u0669\": \"9\",\n      \"\\u06F0\": \"0\",\n      \"\\u06F1\": \"1\",\n      \"\\u06F2\": \"2\",\n      \"\\u06F3\": \"3\",\n      \"\\u06F4\": \"4\",\n      \"\\u06F5\": \"5\",\n      \"\\u06F6\": \"6\",\n      \"\\u06F7\": \"7\",\n      \"\\u06F8\": \"8\",\n      \"\\u06F9\": \"9\",\n      A: \"2\",\n      B: \"2\",\n      C: \"2\",\n      D: \"3\",\n      E: \"3\",\n      F: \"3\",\n      G: \"4\",\n      H: \"4\",\n      I: \"4\",\n      J: \"5\",\n      K: \"5\",\n      L: \"5\",\n      M: \"6\",\n      N: \"6\",\n      O: \"6\",\n      P: \"7\",\n      Q: \"7\",\n      R: \"7\",\n      S: \"7\",\n      T: \"8\",\n      U: \"8\",\n      V: \"8\",\n      W: \"9\",\n      X: \"9\",\n      Y: \"9\",\n      Z: \"9\"\n    },\n    Ha = RegExp(\"[+\\uFF0B]+\"),\n    L = RegExp(\"^[+\\uFF0B]+\"),\n    Ia = RegExp(\"([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])\"),\n    Ja = RegExp(\"[+\\uFF0B0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]\"),\n    Ka = /[\\\\\\/] *x/,\n    La = RegExp(\"[^0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9A-Za-z#]+$\"),\n    Ma = /(?:.*?[A-Za-z]){3}.*/,\n    Na = RegExp(\"^\\\\+([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]|[\\\\-\\\\.\\\\(\\\\)]?)*[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]|[\\\\-\\\\.\\\\(\\\\)]?)*$\"),\n    Oa = RegExp(\"^([A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]+((\\\\-)*[A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])*\\\\.)*[A-Za-z]+((\\\\-)*[A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])*\\\\.?$\");\n  function M(a) {\n    return \"([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]{1,\" + a + \"})\";\n  }\n  function Pa() {\n    return \";ext=\" + M(\"20\") + \"|[ \\xA0\\\\t,]*(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\" + (M(\"20\") + \"#?|[ \\xA0\\\\t,]*(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"9\") + \"#?|[- ]+\") + (M(\"6\") + \"#|[ \\xA0\\\\t]*(?:,{2}|;)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"15\") + \"#?|[ \\xA0\\\\t]*(?:,)+[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"9\") + \"#?\");\n  }\n  var Qa = new RegExp(\"(?:\" + Pa() + \")$\", \"i\"),\n    Ra = new RegExp(\"^[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]{2}$|^[+\\uFF0B]*(?:[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E*]*[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]){3,}[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E*A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]*(?:\" + Pa() + \")?$\", \"i\"),\n    Sa = /(\\$\\d)/,\n    Ta = /^\\(?\\$1\\)?$/;\n  function Ua(a) {\n    return 2 > a.length ? false : N(Ra, a);\n  }\n  function Va(a) {\n    return N(Ma, a) ? O(a, Ga) : O(a, Ea);\n  }\n  function Wa(a) {\n    var b = Va(a.toString());\n    E(a);\n    a.g(b);\n  }\n  function Xa(a) {\n    return null != a && (1 != x(a, 9) || -1 != u(a, 9)[0]);\n  }\n  function O(a, b) {\n    for (var c = new D(), d, e = a.length, f = 0; f < e; ++f) d = a.charAt(f), d = b[d.toUpperCase()], null != d && c.g(d);\n    return c.toString();\n  }\n  function Ya(a) {\n    return 0 == a.length || Ta.test(a);\n  }\n  function P(a) {\n    return null != a && isNaN(a) && a.toUpperCase() in Da;\n  }\n  K.prototype.format = function (a, b) {\n    if (0 == r(a, 2) && q(a, 5)) {\n      var c = w(a, 5);\n      if (0 < c.length) return c;\n    }\n    c = w(a, 1);\n    var d = Q(a);\n    if (0 == b) return Za(c, 0, d, \"\");\n    if (!(c in J)) return d;\n    var e = R(this, c, S(c));\n    a = q(a, 3) && 0 != r(a, 3).length ? 3 == b ? \";ext=\" + r(a, 3) : q(e, 13) ? r(e, 13) + w(a, 3) : \" ext. \" + w(a, 3) : \"\";\n    a: {\n      e = 0 == u(e, 20).length || 2 == b ? u(e, 19) : u(e, 20);\n      for (var f, g = e.length, h = 0; h < g; ++h) {\n        f = e[h];\n        var l = x(f, 3);\n        if (0 == l || 0 == d.search(r(f, 3, l - 1))) {\n          if (l = new RegExp(r(f, 1)), N(l, d)) {\n            e = f;\n            break a;\n          }\n        }\n      }\n      e = null;\n    }\n    null != e && (g = e, e = w(g, 2), f = new RegExp(r(g, 1)), w(g, 5), g = w(g, 4), d = 2 == b && null != g && 0 < g.length ? d.replace(f, e.replace(Sa, g)) : d.replace(f, e), 3 == b && (d = d.replace(RegExp(\"^[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]+\"), \"\"), d = d.replace(RegExp(\"[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]+\", \"g\"), \"-\")));\n    return Za(c, b, d, a);\n  };\n  function R(a, b, c) {\n    return \"001\" == c ? T(a, \"\" + b) : T(a, c);\n  }\n  function Q(a) {\n    if (!q(a, 2)) return \"\";\n    var b = \"\" + r(a, 2);\n    return q(a, 4) && r(a, 4) && 0 < w(a, 8) ? Array(w(a, 8) + 1).join(\"0\") + b : b;\n  }\n  function Za(a, b, c, d) {\n    switch (b) {\n      case 0:\n        return \"+\" + a + c + d;\n      case 1:\n        return \"+\" + a + \" \" + c + d;\n      case 3:\n        return \"tel:+\" + a + \"-\" + c + d;\n      default:\n        return c + d;\n    }\n  }\n  function U(a, b) {\n    switch (b) {\n      case 4:\n        return r(a, 5);\n      case 3:\n        return r(a, 4);\n      case 1:\n        return r(a, 3);\n      case 0:\n      case 2:\n        return r(a, 2);\n      case 5:\n        return r(a, 6);\n      case 6:\n        return r(a, 8);\n      case 7:\n        return r(a, 7);\n      case 8:\n        return r(a, 21);\n      case 9:\n        return r(a, 25);\n      case 10:\n        return r(a, 28);\n      default:\n        return r(a, 1);\n    }\n  }\n  function $a(a, b) {\n    var c = ab(a, b);\n    a = R(a, w(b, 1), c);\n    if (null == a) return -1;\n    b = Q(b);\n    return bb(b, a);\n  }\n  function bb(a, b) {\n    return V(a, r(b, 1)) ? V(a, r(b, 5)) ? 4 : V(a, r(b, 4)) ? 3 : V(a, r(b, 6)) ? 5 : V(a, r(b, 8)) ? 6 : V(a, r(b, 7)) ? 7 : V(a, r(b, 21)) ? 8 : V(a, r(b, 25)) ? 9 : V(a, r(b, 28)) ? 10 : V(a, r(b, 2)) ? r(b, 18) || V(a, r(b, 3)) ? 2 : 0 : !r(b, 18) && V(a, r(b, 3)) ? 1 : -1 : -1;\n  }\n  function T(a, b) {\n    if (null == b) return null;\n    b = b.toUpperCase();\n    var c = a.g[b];\n    if (null == c) {\n      c = Da[b];\n      if (null == c) return null;\n      c = new C().g(H.m(), c);\n      a.g[b] = c;\n    }\n    return c;\n  }\n  function V(a, b) {\n    var c = a.length;\n    return 0 < x(b, 9) && -1 == u(b, 9).indexOf(c) ? false : N(w(b, 2), a);\n  }\n  function cb(a, b) {\n    var c = ab(a, b);\n    var d = w(b, 1);\n    var e = R(a, d, c);\n    null == e || \"001\" != c && d != db(a, c) ? e = false : (a = Q(b), e = -1 != bb(a, e));\n    return e;\n  }\n  function ab(a, b) {\n    if (null == b) return null;\n    var c = w(b, 1);\n    c = J[c];\n    if (null == c) a = null;else if (1 == c.length) a = c[0];else a: {\n      b = Q(b);\n      for (var d, e = c.length, f = 0; f < e; f++) {\n        d = c[f];\n        var g = T(a, d);\n        if (q(g, 23)) {\n          if (0 == b.search(r(g, 23))) {\n            a = d;\n            break a;\n          }\n        } else if (-1 != bb(b, g)) {\n          a = d;\n          break a;\n        }\n      }\n      a = null;\n    }\n    return a;\n  }\n  function S(a) {\n    a = J[a];\n    return null == a ? \"ZZ\" : a[0];\n  }\n  function db(a, b) {\n    a = T(a, b);\n    if (null == a) throw Error(\"Invalid region code: \" + b);\n    return w(a, 10);\n  }\n  function W(a, b, c, d) {\n    var e = U(c, d),\n      f = 0 == x(e, 9) ? u(r(c, 1), 9) : u(e, 9);\n    e = u(e, 10);\n    if (2 == d) if (Xa(U(c, 0))) a = U(c, 1), Xa(a) && (f = f.concat(0 == x(a, 9) ? u(r(c, 1), 9) : u(a, 9)), f.sort(), 0 == e.length ? e = u(a, 10) : (e = e.concat(u(a, 10)), e.sort()));else return W(a, b, c, 1);\n    if (-1 == f[0]) return 5;\n    b = b.length;\n    if (-1 < e.indexOf(b)) return 4;\n    c = f[0];\n    return c == b ? 0 : c > b ? 2 : f[f.length - 1] < b ? 3 : -1 < f.indexOf(b, 1) ? 0 : 5;\n  }\n  function X(a, b, c) {\n    var d = Q(b);\n    b = w(b, 1);\n    if (!(b in J)) return 1;\n    b = R(a, b, S(b));\n    return W(a, d, b, c);\n  }\n  function eb(a, b) {\n    a = a.toString();\n    if (0 == a.length || \"0\" == a.charAt(0)) return 0;\n    for (var c, d = a.length, e = 1; 3 >= e && e <= d; ++e) if (c = parseInt(a.substring(0, e), 10), c in J) return b.g(a.substring(e)), c;\n    return 0;\n  }\n  function fb(a, b, c, d, e, f) {\n    if (0 == b.length) return 0;\n    b = new D(b);\n    var g;\n    null != c && (g = r(c, 11));\n    null == g && (g = \"NonMatch\");\n    var h = b.toString();\n    if (0 == h.length) g = 20;else if (L.test(h)) h = h.replace(L, \"\"), E(b), b.g(Va(h)), g = 1;else {\n      h = new RegExp(g);\n      Wa(b);\n      g = b.toString();\n      if (0 == g.search(h)) {\n        h = g.match(h)[0].length;\n        var l = g.substring(h).match(Ia);\n        l && null != l[1] && 0 < l[1].length && \"0\" == O(l[1], Ea) ? g = false : (E(b), b.g(g.substring(h)), g = true);\n      } else g = false;\n      g = g ? 5 : 20;\n    }\n    e && t(f, 6, g);\n    if (20 != g) {\n      if (2 >= b.h.length) throw Error(\"Phone number too short after IDD\");\n      a = eb(b, d);\n      if (0 != a) return t(f, 1, a), a;\n      throw Error(\"Invalid country calling code\");\n    }\n    if (null != c && (g = w(c, 10), h = \"\" + g, l = b.toString(), 0 == l.lastIndexOf(h, 0) && (h = new D(l.substring(h.length)), l = r(c, 1), l = new RegExp(w(l, 2)), gb(h, c, null), h = h.toString(), !N(l, b.toString()) && N(l, h) || 3 == W(a, b.toString(), c, -1)))) return d.g(h), e && t(f, 6, 10), t(f, 1, g), g;\n    t(f, 1, 0);\n    return 0;\n  }\n  function gb(a, b, c) {\n    var d = a.toString(),\n      e = d.length,\n      f = r(b, 15);\n    if (0 != e && null != f && 0 != f.length) {\n      var g = new RegExp(\"^(?:\" + f + \")\");\n      if (e = g.exec(d)) {\n        f = new RegExp(w(r(b, 1), 2));\n        var h = N(f, d),\n          l = e.length - 1;\n        b = r(b, 16);\n        if (null == b || 0 == b.length || null == e[l] || 0 == e[l].length) {\n          if (!h || N(f, d.substring(e[0].length))) null != c && 0 < l && null != e[l] && c.g(e[1]), a.set(d.substring(e[0].length));\n        } else if (d = d.replace(g, b), !h || N(f, d)) null != c && 0 < l && c.g(e[1]), a.set(d);\n      }\n    }\n  }\n  function Y(a, b, c) {\n    if (!P(c) && 0 < b.length && \"+\" != b.charAt(0)) throw Error(\"Invalid country calling code\");\n    return hb(a, b, c, true);\n  }\n  function hb(a, b, c, d) {\n    if (null == b) throw Error(\"The string supplied did not seem to be a phone number\");\n    if (250 < b.length) throw Error(\"The string supplied is too long to be a phone number\");\n    var e = new D();\n    var f = b.indexOf(\";phone-context=\");\n    if (-1 === f) f = null;else if (f += 15, f >= b.length) f = \"\";else {\n      var g = b.indexOf(\";\", f);\n      f = -1 !== g ? b.substring(f, g) : b.substring(f);\n    }\n    var h = f;\n    null == h ? g = true : 0 === h.length ? g = false : (g = Na.exec(h), h = Oa.exec(h), g = null !== g || null !== h);\n    if (!g) throw Error(\"The string supplied did not seem to be a phone number\");\n    null != f ? (\"+\" === f.charAt(0) && e.g(f), f = b.indexOf(\"tel:\"), e.g(b.substring(0 <= f ? f + 4 : 0, b.indexOf(\";phone-context=\")))) : (f = e.g, g = b ?? \"\", h = g.search(Ja), 0 <= h ? (g = g.substring(h), g = g.replace(La, \"\"), h = g.search(Ka), 0 <= h && (g = g.substring(0, h))) : g = \"\", f.call(e, g));\n    f = e.toString();\n    g = f.indexOf(\";isub=\");\n    0 < g && (E(e), e.g(f.substring(0, g)));\n    if (!Ua(e.toString())) throw Error(\"The string supplied did not seem to be a phone number\");\n    f = e.toString();\n    if (!(P(c) || null != f && 0 < f.length && L.test(f))) throw Error(\"Invalid country calling code\");\n    f = new I();\n    d && t(f, 5, b);\n    a: {\n      b = e.toString();\n      g = b.search(Qa);\n      if (0 <= g && Ua(b.substring(0, g))) {\n        h = b.match(Qa);\n        for (var l = h.length, A = 1; A < l; ++A) if (null != h[A] && 0 < h[A].length) {\n          E(e);\n          e.g(b.substring(0, g));\n          b = h[A];\n          break a;\n        }\n      }\n      b = \"\";\n    }\n    0 < b.length && t(f, 3, b);\n    g = T(a, c);\n    b = new D();\n    h = 0;\n    l = e.toString();\n    try {\n      h = fb(a, l, g, b, d, f);\n    } catch (ca) {\n      if (\"Invalid country calling code\" == ca.message && L.test(l)) {\n        if (l = l.replace(L, \"\"), h = fb(a, l, g, b, d, f), 0 == h) throw ca;\n      } else throw ca;\n    }\n    0 != h ? (e = S(h), e != c && (g = R(a, h, e))) : (Wa(e), b.g(e.toString()), null != c ? (h = w(g, 10), t(f, 1, h)) : d && (delete f.h[6], f.g && delete f.g[6]));\n    if (2 > b.h.length) throw Error(\"The string supplied is too short to be a phone number\");\n    null != g && (c = new D(), e = new D(b.toString()), gb(e, g, c), a = W(a, e.toString(), g, -1), 2 != a && 4 != a && 5 != a && (b = e, d && 0 < c.toString().length && t(f, 7, c.toString())));\n    d = b.toString();\n    a = d.length;\n    if (2 > a) throw Error(\"The string supplied is too short to be a phone number\");\n    if (17 < a) throw Error(\"The string supplied is too long to be a phone number\");\n    if (1 < d.length && \"0\" == d.charAt(0)) {\n      t(f, 4, true);\n      for (a = 1; a < d.length - 1 && \"0\" == d.charAt(a);) a++;\n      1 != a && t(f, 8, a);\n    }\n    t(f, 2, parseInt(d, 10));\n    return f;\n  }\n  function N(a, b) {\n    return (a = \"string\" == typeof a ? b.match(\"^(?:\" + a + \")$\") : b.match(a)) && a[0].length == b.length ? true : false;\n  }\n  ;\n  function ib(a) {\n    this.fa = RegExp(\"\\u2008\");\n    this.ja = \"\";\n    this.v = new D();\n    this.da = \"\";\n    this.s = new D();\n    this.ba = new D();\n    this.u = true;\n    this.ea = this.ca = this.la = false;\n    this.ga = K.g();\n    this.$ = 0;\n    this.h = new D();\n    this.ha = false;\n    this.o = \"\";\n    this.g = new D();\n    this.j = [];\n    this.ka = a;\n    this.l = jb(this, this.ka);\n  }\n  var kb = new H();\n  t(kb, 11, \"NA\");\n  var lb = RegExp(\"^[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*\\\\$1[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*(\\\\$\\\\d[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*)*$\"),\n    mb = /[- ]/;\n  function jb(a, b) {\n    var c = a.ga;\n    b = P(b) ? db(c, b) : 0;\n    a = T(a.ga, S(b));\n    return null != a ? a : kb;\n  }\n  function nb(a) {\n    for (var b = a.j.length, c = 0; c < b; ++c) {\n      var d = a.j[c],\n        e = w(d, 1);\n      if (a.da == e) return false;\n      var f = a;\n      var g = d,\n        h = w(g, 1);\n      E(f.v);\n      var l = f;\n      g = w(g, 2);\n      var A = \"999999999999999\".match(h)[0];\n      A.length < l.g.h.length ? l = \"\" : (l = A.replace(new RegExp(h, \"g\"), g), l = l.replace(RegExp(\"9\", \"g\"), \"\\u2008\"));\n      0 < l.length ? (f.v.g(l), f = true) : f = false;\n      if (f) return a.da = e, a.ha = mb.test(r(d, 4)), a.$ = 0, true;\n    }\n    return a.u = false;\n  }\n  function ob(a, b) {\n    for (var c = [], d = b.length - 3, e = a.j.length, f = 0; f < e; ++f) {\n      var g = a.j[f];\n      0 == x(g, 3) ? c.push(a.j[f]) : (g = r(g, 3, Math.min(d, x(g, 3) - 1)), 0 == b.search(g) && c.push(a.j[f]));\n    }\n    a.j = c;\n  }\n  function pb(a, b) {\n    a.s.g(b);\n    var c = b;\n    Ia.test(c) || 1 == a.s.h.length && Ha.test(c) ? (\"+\" == b ? (c = b, a.ba.g(b)) : (c = Ea[b], a.ba.g(c), a.g.g(c)), b = c) : (a.u = false, a.la = true);\n    if (!a.u) {\n      if (!a.la) {\n        if (qb(a)) {\n          if (rb(a)) return sb(a);\n        } else if (0 < a.o.length && (b = a.g.toString(), E(a.g), a.g.g(a.o), a.g.g(b), b = a.h.toString(), c = b.lastIndexOf(a.o), E(a.h), a.h.g(b.substring(0, c))), a.o != tb(a)) return a.h.g(\" \"), sb(a);\n      }\n      return a.s.toString();\n    }\n    switch (a.ba.h.length) {\n      case 0:\n      case 1:\n      case 2:\n        return a.s.toString();\n      case 3:\n        if (qb(a)) a.ea = true;else return a.o = tb(a), ub(a);\n      default:\n        if (a.ea) return rb(a) && (a.ea = false), a.h.toString() + a.g.toString();\n        if (0 < a.j.length) {\n          b = vb(a, b);\n          c = wb(a);\n          if (0 < c.length) return c;\n          ob(a, a.g.toString());\n          return nb(a) ? xb(a) : a.u ? Z(a, b) : a.s.toString();\n        }\n        return ub(a);\n    }\n  }\n  function sb(a) {\n    a.u = true;\n    a.ea = false;\n    a.j = [];\n    a.$ = 0;\n    E(a.v);\n    a.da = \"\";\n    return ub(a);\n  }\n  function wb(a) {\n    for (var b = a.g.toString(), c = a.j.length, d = 0; d < c; ++d) {\n      var e = a.j[d],\n        f = w(e, 1);\n      if (new RegExp(\"^(?:\" + f + \")$\").test(b) && (a.ha = mb.test(r(e, 4)), e = b.replace(new RegExp(f, \"g\"), r(e, 2)), e = Z(a, e), O(e, Fa) == a.ba)) return e;\n    }\n    return \"\";\n  }\n  function Z(a, b) {\n    var c = a.h.h.length;\n    return a.ha && 0 < c && \" \" != a.h.toString().charAt(c - 1) ? a.h + \" \" + b : a.h + b;\n  }\n  function ub(a) {\n    var b = a.g.toString();\n    if (3 <= b.length) {\n      for (var c = a.ca && 0 == a.o.length && 0 < x(a.l, 20) ? u(a.l, 20) : u(a.l, 19), d = c.length, e = 0; e < d; ++e) {\n        var f = c[e];\n        0 < a.o.length && Ya(w(f, 4)) && !r(f, 6) && !q(f, 5) || (0 != a.o.length || a.ca || Ya(w(f, 4)) || r(f, 6)) && lb.test(w(f, 2)) && a.j.push(f);\n      }\n      ob(a, b);\n      b = wb(a);\n      return 0 < b.length ? b : nb(a) ? xb(a) : a.s.toString();\n    }\n    return Z(a, b);\n  }\n  function xb(a) {\n    var b = a.g.toString(),\n      c = b.length;\n    if (0 < c) {\n      for (var d = \"\", e = 0; e < c; e++) d = vb(a, b.charAt(e));\n      return a.u ? Z(a, d) : a.s.toString();\n    }\n    return a.h.toString();\n  }\n  function tb(a) {\n    var b = a.g.toString(),\n      c = 0;\n    if (1 != r(a.l, 10)) var d = false;else d = a.g.toString(), d = \"1\" == d.charAt(0) && \"0\" != d.charAt(1) && \"1\" != d.charAt(1);\n    d ? (c = 1, a.h.g(\"1\").g(\" \"), a.ca = true) : q(a.l, 15) && (d = new RegExp(\"^(?:\" + r(a.l, 15) + \")\"), d = b.match(d), null != d && null != d[0] && 0 < d[0].length && (a.ca = true, c = d[0].length, a.h.g(b.substring(0, c))));\n    E(a.g);\n    a.g.g(b.substring(c));\n    return b.substring(0, c);\n  }\n  function qb(a) {\n    var b = a.ba.toString(),\n      c = new RegExp(\"^(?:\\\\+|\" + r(a.l, 11) + \")\");\n    c = b.match(c);\n    return null != c && null != c[0] && 0 < c[0].length ? (a.ca = true, c = c[0].length, E(a.g), a.g.g(b.substring(c)), E(a.h), a.h.g(b.substring(0, c)), \"+\" != b.charAt(0) && a.h.g(\" \"), true) : false;\n  }\n  function rb(a) {\n    if (0 == a.g.h.length) return false;\n    var b = new D(),\n      c = eb(a.g, b);\n    if (0 == c) return false;\n    E(a.g);\n    a.g.g(b.toString());\n    b = S(c);\n    \"001\" == b ? a.l = T(a.ga, \"\" + c) : b != a.ka && (a.l = jb(a, b));\n    a.h.g(\"\" + c).g(\" \");\n    a.o = \"\";\n    return true;\n  }\n  function vb(a, b) {\n    var c = a.v.toString();\n    if (0 <= c.substring(a.$).search(a.fa)) {\n      var d = c.search(a.fa);\n      b = c.replace(a.fa, b);\n      E(a.v);\n      a.v.g(b);\n      a.$ = d;\n      return b.substring(0, a.$ + 1);\n    }\n    1 == a.j.length && (a.u = false);\n    a.da = \"\";\n    return a.s.toString();\n  }\n  ;\n  const yb = {\n    FIXED_LINE: 0,\n    MOBILE: 1,\n    FIXED_LINE_OR_MOBILE: 2,\n    TOLL_FREE: 3,\n    PREMIUM_RATE: 4,\n    SHARED_COST: 5,\n    VOIP: 6,\n    PERSONAL_NUMBER: 7,\n    PAGER: 8,\n    UAN: 9,\n    VOICEMAIL: 10,\n    UNKNOWN: -1\n  };\n  m(\"intlTelInputUtilsTemp\", {});\n  m(\"intlTelInputUtilsTemp.formatNumberAsYouType\", (a, b) => {\n    try {\n      const c = a.replace(/[^+0-9]/g, \"\"),\n        d = new ib(b);\n      b = \"\";\n      for (let e = 0; e < c.length; e++) d.ja = pb(d, c.charAt(e)), b = d.ja;\n      return b;\n    } catch {\n      return a;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.formatNumber\", (a, b, c) => {\n    try {\n      const e = K.g(),\n        f = Y(e, a, b);\n      var d = X(e, f, -1);\n      return 0 == d || 4 == d ? e.format(f, \"undefined\" === typeof c ? 0 : c) : a;\n    } catch {\n      return a;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getExampleNumber\", (a, b, c, d) => {\n    try {\n      const l = K.g();\n      a: {\n        var e = l;\n        if (P(a)) {\n          var f = U(T(e, a), c);\n          try {\n            if (q(f, 6)) {\n              var g = r(f, 6);\n              var h = hb(e, g, a, false);\n              break a;\n            }\n          } catch (A) {}\n        }\n        h = null;\n      }\n      return l.format(h, d ? 0 : b ? 2 : 1);\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getExtension\", (a, b) => {\n    try {\n      return r(Y(K.g(), a, b), 3);\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getNumberType\", (a, b) => {\n    try {\n      const c = K.g(),\n        d = Y(c, a, b);\n      return $a(c, d);\n    } catch {\n      return -99;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getValidationError\", (a, b) => {\n    if (!b) return 1;\n    try {\n      const c = K.g(),\n        d = Y(c, a, b);\n      return X(c, d, -1);\n    } catch (c) {\n      return \"Invalid country calling code\" === c.message ? 1 : 3 >= a.length || \"Phone number too short after IDD\" === c.message || \"The string supplied is too short to be a phone number\" === c.message ? 2 : \"The string supplied is too long to be a phone number\" === c.message ? 3 : -99;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.isValidNumber\", (a, b, c) => {\n    try {\n      const d = K.g(),\n        e = Y(d, a, b),\n        f = cb(d, e);\n      if (c) {\n        const g = c.map(h => yb[h]);\n        return f && g.includes($a(d, e));\n      }\n      return f;\n    } catch {\n      return false;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.isPossibleNumber\", (a, b, c) => {\n    try {\n      const d = K.g(),\n        e = Y(d, a, b);\n      if (c) {\n        c.includes(\"FIXED_LINE_OR_MOBILE\") && (c.includes(\"MOBILE\") || c.push(\"MOBILE\"), c.includes(\"FIXED_LINE\") || c.push(\"FIXED_LINE\"));\n        for (let f of c) if (0 === X(d, e, yb[f])) return true;\n        return false;\n      }\n      return 0 === X(d, e, -1);\n    } catch {\n      return false;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getCoreNumber\", (a, b) => {\n    try {\n      return r(Y(K.g(), a, b), 2).toString();\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.numberFormat\", {\n    E164: 0,\n    INTERNATIONAL: 1,\n    NATIONAL: 2,\n    RFC3966: 3\n  });\n  m(\"intlTelInputUtilsTemp.numberType\", yb);\n  m(\"intlTelInputUtilsTemp.validationError\", {\n    IS_POSSIBLE: 0,\n    INVALID_COUNTRY_CODE: 1,\n    TOO_SHORT: 2,\n    TOO_LONG: 3,\n    IS_POSSIBLE_LOCAL_ONLY: 4,\n    INVALID_LENGTH: 5\n  });\n})();\nvar utils = window.intlTelInputUtilsTemp;\ndelete window.intlTelInputUtilsTemp;\nvar utils_default = utils;\n\n// src/js/intl-tel-input/intlTelInputWithUtils.ts\nintl_tel_input_default.utils = utils_default;\nvar intlTelInputWithUtils_default = intl_tel_input_default;\n\n// react/src/intl-tel-input/reactWithUtils.tsx\nimport React, { useRef, useEffect, forwardRef, useImperativeHandle, useCallback } from \"react\";\nvar IntlTelInput = forwardRef(function IntlTelInput2({\n  initialValue = \"\",\n  onChangeNumber = () => {},\n  onChangeCountry = () => {},\n  onChangeValidity = () => {},\n  onChangeErrorCode = () => {},\n  usePreciseValidation = false,\n  initOptions = {},\n  inputProps = {},\n  disabled = void 0\n}, ref) {\n  const inputRef = useRef(null);\n  const itiRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    getInstance: () => itiRef.current,\n    getInput: () => inputRef.current\n  }));\n  const update = useCallback(() => {\n    const num = itiRef.current?.getNumber() || \"\";\n    const countryIso = itiRef.current?.getSelectedCountryData().iso2 || \"\";\n    onChangeNumber(num);\n    onChangeCountry(countryIso);\n    if (itiRef.current) {\n      const isValid = usePreciseValidation ? itiRef.current.isValidNumberPrecise() : itiRef.current.isValidNumber();\n      if (isValid) {\n        onChangeValidity(true);\n        onChangeErrorCode(null);\n      } else {\n        const errorCode = itiRef.current.getValidationError();\n        onChangeValidity(false);\n        onChangeErrorCode(errorCode);\n      }\n    }\n  }, [onChangeCountry, onChangeErrorCode, onChangeNumber, onChangeValidity, usePreciseValidation]);\n  useEffect(() => {\n    if (inputRef.current) {\n      itiRef.current = intlTelInputWithUtils_default(inputRef.current, initOptions);\n    }\n    return () => {\n      itiRef.current?.destroy();\n    };\n  }, []);\n  useEffect(() => {\n    const inputRefCurrent = inputRef.current;\n    if (inputRefCurrent) {\n      inputRefCurrent.addEventListener(\"countrychange\", update);\n      itiRef.current.promise.then(update);\n    }\n    return () => {\n      if (inputRefCurrent) {\n        inputRefCurrent.removeEventListener(\"countrychange\", update);\n      }\n    };\n  }, [update]);\n  useEffect(() => {\n    if (itiRef.current && disabled !== void 0) {\n      itiRef.current.setDisabled(disabled);\n    }\n  }, [disabled]);\n  return /* @__PURE__ */React.createElement(\"input\", {\n    type: \"tel\",\n    ref: inputRef,\n    onInput: update,\n    defaultValue: initialValue,\n    ...inputProps\n  });\n});\nvar reactWithUtils_default = IntlTelInput;\nexport { reactWithUtils_default as default, intlTelInputWithUtils_default as intlTelInput };","map":{"version":3,"names":["rawCountryData","allCountries","i","length","c","name","iso2","dialCode","priority","areaCodes","nodeById","nationalPrefix","data_default","countryTranslations","ad","ae","af","ag","ai","al","am","ao","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gt","gu","gw","gy","hk","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","sv","sx","sy","sz","tc","td","tg","th","tj","tk","tl","tm","tn","to","tr","tt","tv","tw","tz","ua","ug","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw","countries_default","interfaceTranslations","selectedCountryAriaLabel","noCountrySelected","countryListAriaLabel","searchPlaceholder","zeroSearchResults","oneSearchResult","multipleSearchResults","ac","xk","interface_default","allTranslations","en_default","defaults","allowDropdown","autoPlaceholder","containerClass","countryOrder","countrySearch","customPlaceholder","dropdownContainer","excludeCountries","fixDropdownWidth","formatAsYouType","formatOnDisplay","geoIpLookup","hiddenInput","i18n","initialCountry","loadUtils","nationalMode","onlyCountries","placeholderNumberType","showFlags","separateDialCode","strictMode","useFullscreenPopup","navigator","window","test","userAgent","innerWidth","validationNumberTypes","regionlessNanpNumbers","getNumeric","s","replace","normaliseString","normalize","toLowerCase","isRegionlessNanp","number","numeric","charAt","areaCode","substr","indexOf","translateCursorPosition","relevantChars","formattedValue","prevCaretPos","isDeleteForwards","count","createEl","attrs","container","el","document","createElement","Object","entries","forEach","key","value","setAttribute","appendChild","forEachInstance","method","args","instances","intlTelInput","values","instance","Iti","constructor","input","customOptions","telInput","highlightedItem","options","assign","hadInitialPlaceholder","Boolean","getAttribute","_init","body","isAndroid","isRTL","closest","showOnDefaultSide","showSelectedCountryOnLeft","originalPaddingRight","style","paddingRight","originalPaddingLeft","paddingLeft","autoCountryPromise","Promise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processDialCodes","_translateCountryNames","_sortCountries","map","country","countries","sort","a","b","aIndex","bIndex","aIndexExists","bIndexExists","localeCompare","_addToDialCodeMap","dialCodeMaxLen","dialCodeToIso2Map","hasOwnProperty","index","lowerCaseOnlyCountries","filter","lowerCaseExcludeCountries","dialCodes","rootIso2Code","j","k","partialAreaCode","partialDialCode","classList","add","hasAttribute","form","parentClass","wrapper","class","parentNode","insertBefore","countryContainer","left","right","selectedCountry","type","disabled","selectedCountryPrimary","selectedCountryInner","selectedCountryA11yText","dropdownArrow","selectedDialCode","extraClasses","dropdownContent","searchInput","placeholder","role","searchResultsA11yText","countryList","_appendListItems","_updateSearchResultsText","dropdownClasses","dropdown","_updateInputPadding","telInputName","names","phone","existingInput","querySelector","hiddenInputCountry","extraClass","listItem","tabindex","content","insertAdjacentHTML","overrideAutoCountry","attributeValue","inputValue","useAttribute","val","_getDialCode","isRegionlessNanpNumber","isAutoCountry","_updateCountryFromNumber","lowerInitialCountry","isValidInitialCountry","_getCountryData","_setCountry","_updateValFromNumber","_initTelInputListeners","_initDropdownListeners","_initHiddenInputListener","_handleHiddenInputSubmit","getNumber","getSelectedCountryData","addEventListener","_handleLabelClick","e","contains","focus","preventDefault","label","_handleClickSelectedCountry","readOnly","_openDropdown","_handleCountryContainerKeydown","isDropdownHidden","includes","stopPropagation","_closeDropdown","utils","_handlePageLoad","removeEventListener","attachUtils","catch","documentReady","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","iso2Lower","isValidIso2","setTimeout","_openDropdownWithPlus","_filterCountries","userOverrideFormatting","_handleInputEvent","data","currentCaretPos","selectionStart","valueBeforeCaret","substring","valueAfterCaret","_triggerCountryChange","isFormattingChar","isPaste","inputType","disableFormatOnSetNumber","detail","relevantCharsBeforeCaret","_formatNumberAsYouType","newCaretPos","setSelectionRange","_handleKeydownEvent","altKey","ctrlKey","metaKey","alreadyHasPlus","isInitialPlus","isNumeric","isAllowedChar","newValue","slice","selectionEnd","newFullNumber","_getFullNumber","coreNumber","getCoreNumber","hasExceededMaxLength","maxCoreNumberLength","isChangingDialCode","currentCountry","newCountry","_getCountryFromNumber","_cap","max","parseInt","_trigger","detailProps","CustomEvent","bubbles","cancelable","dispatchEvent","width","offsetWidth","remove","_setDropdownPosition","firstCountryItem","firstElementChild","_highlightListItem","scrollTop","_bindDropdownListeners","inputPosRelativeToVP","getBoundingClientRect","inputHeight","offsetHeight","top","_handleWindowScroll","_handleMouseoverCountryList","target","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","documentElement","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","clearTimeout","_searchForCountry","doFilter","inputQuery","trim","keyupTimer","_handleSearchChange","startsWith","_scrollTo","isReset","noCountriesAddedYet","innerHTML","normalisedQuery","normalisedCountryName","countryInitials","split","word","join","fullDialCode","childElementCount","searchText","toString","textContent","next","previousElementSibling","nextElementSibling","lastElementChild","fullNumber","useNational","NATIONAL","INTERNATIONAL","numberFormat","format","formatNumber","_beforeSetNumber","_ensureHasDialCode","hasPrefix","cleanNumber","plusIndex","selectedIso2","dialCodeMatch","dialCodeMatchNumeric","iso2Codes","defaultCountry","alreadySelected","shouldFocus","prevItem","activeDescendant","allowFail","Error","prevCountry","flagClass","a11yText","className","_setSelectedCountryTitleAttribute","_updatePlaceholder","_updateMaxLength","selectedCountryWidth","_getHiddenSelectedCountryWidth","inputPadding","numberType","exampleNumber","getExampleNumber","validNumber","isPossibleNumber","title","containerClone","cloneNode","visibility","countryContainerClone","selectedCountryClone","removeChild","shouldSetPlaceholder","countryChanged","_updateDialCode","removeAttribute","element","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","heightDifference","newDialCodeBare","inputVal","newDialCode","newNumber","prevDialCode","includeAreaCode","numericChars","isNaN","overrideVal","prefix","numericVal","start","result","formatNumberAsYouType","afterDialCode","hasSelectedCountryOrGlobe","setCountry","handleUtils","destroy","getExtension","getNumberType","getValidationError","isValidNumber","alphaCharPosition","search","beforeAlphaChar","beforeAlphaIsValid","_utilsIsPossibleNumber","isValid","isValidNumberPrecise","_utilsIsValidNumber","isCountryChange","setNumber","isSetNumber","setPlaceholderNumberType","setDisabled","source","startedLoadingUtilsScript","loadCall","error","TypeError","then","module","utils2","default","iti","readyState","getCountryData","getInstance","id2","version","intl_tel_input_default","self","m","execScript","d","shift","prototype","n","f","g","Array","arguments","h","apply","aa","da","ea","fa","ha","ia","ja","ka","trustedTypes","emptyHTML","l","o","oa","ra","defaultValue","ta","p","has","q","get","r","set","t","wa","u","clone","v","w","Number","String","x","push","y","z","xa","B","C","call","D","E","F","ya","G","H","Aa","required","I","Ba","Ca","ctor","J","Da","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","K","Ea","Fa","Ga","A","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Ha","RegExp","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","Ra","Sa","Ta","Ua","Va","Wa","Xa","toUpperCase","Ya","Za","$a","ab","cb","db","concat","eb","fb","match","lastIndexOf","exec","hb","message","ib","$","jb","kb","mb","nb","ob","Math","min","pb","qb","rb","tb","ub","vb","wb","xb","yb","FIXED_LINE","MOBILE","FIXED_LINE_OR_MOBILE","TOLL_FREE","PREMIUM_RATE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL","UNKNOWN","E164","RFC3966","IS_POSSIBLE","INVALID_COUNTRY_CODE","TOO_SHORT","TOO_LONG","IS_POSSIBLE_LOCAL_ONLY","INVALID_LENGTH","intlTelInputUtilsTemp","utils_default","intlTelInputWithUtils_default","React","useRef","useEffect","forwardRef","useImperativeHandle","useCallback","IntlTelInput","IntlTelInput2","initialValue","onChangeNumber","onChangeCountry","onChangeValidity","onChangeErrorCode","usePreciseValidation","initOptions","inputProps","ref","inputRef","itiRef","current","getInput","update","num","countryIso","errorCode","inputRefCurrent","onInput","reactWithUtils_default"],"sources":["/home/sl/PycharmProjects/presenza/frontend/presence-tracker/node_modules/intl-tel-input/react/build/IntlTelInputWithUtils.js"],"sourcesContent":["// src/js/intl-tel-input/data.ts\nvar rawCountryData = [\n  [\n    \"af\",\n    // Afghanistan\n    \"93\"\n  ],\n  [\n    \"ax\",\n    // Åland Islands\n    \"358\",\n    1\n  ],\n  [\n    \"al\",\n    // Albania\n    \"355\"\n  ],\n  [\n    \"dz\",\n    // Algeria\n    \"213\"\n  ],\n  [\n    \"as\",\n    // American Samoa\n    \"1\",\n    5,\n    [\"684\"]\n  ],\n  [\n    \"ad\",\n    // Andorra\n    \"376\"\n  ],\n  [\n    \"ao\",\n    // Angola\n    \"244\"\n  ],\n  [\n    \"ai\",\n    // Anguilla\n    \"1\",\n    6,\n    [\"264\"]\n  ],\n  [\n    \"ag\",\n    // Antigua and Barbuda\n    \"1\",\n    7,\n    [\"268\"]\n  ],\n  [\n    \"ar\",\n    // Argentina\n    \"54\"\n  ],\n  [\n    \"am\",\n    // Armenia\n    \"374\"\n  ],\n  [\n    \"aw\",\n    // Aruba\n    \"297\"\n  ],\n  [\n    \"ac\",\n    // Ascension Island\n    \"247\"\n  ],\n  [\n    \"au\",\n    // Australia\n    \"61\",\n    0,\n    null,\n    \"0\"\n  ],\n  [\n    \"at\",\n    // Austria\n    \"43\"\n  ],\n  [\n    \"az\",\n    // Azerbaijan\n    \"994\"\n  ],\n  [\n    \"bs\",\n    // Bahamas\n    \"1\",\n    8,\n    [\"242\"]\n  ],\n  [\n    \"bh\",\n    // Bahrain\n    \"973\"\n  ],\n  [\n    \"bd\",\n    // Bangladesh\n    \"880\"\n  ],\n  [\n    \"bb\",\n    // Barbados\n    \"1\",\n    9,\n    [\"246\"]\n  ],\n  [\n    \"by\",\n    // Belarus\n    \"375\"\n  ],\n  [\n    \"be\",\n    // Belgium\n    \"32\"\n  ],\n  [\n    \"bz\",\n    // Belize\n    \"501\"\n  ],\n  [\n    \"bj\",\n    // Benin\n    \"229\"\n  ],\n  [\n    \"bm\",\n    // Bermuda\n    \"1\",\n    10,\n    [\"441\"]\n  ],\n  [\n    \"bt\",\n    // Bhutan\n    \"975\"\n  ],\n  [\n    \"bo\",\n    // Bolivia\n    \"591\"\n  ],\n  [\n    \"ba\",\n    // Bosnia and Herzegovina\n    \"387\"\n  ],\n  [\n    \"bw\",\n    // Botswana\n    \"267\"\n  ],\n  [\n    \"br\",\n    // Brazil\n    \"55\"\n  ],\n  [\n    \"io\",\n    // British Indian Ocean Territory\n    \"246\"\n  ],\n  [\n    \"vg\",\n    // British Virgin Islands\n    \"1\",\n    11,\n    [\"284\"]\n  ],\n  [\n    \"bn\",\n    // Brunei\n    \"673\"\n  ],\n  [\n    \"bg\",\n    // Bulgaria\n    \"359\"\n  ],\n  [\n    \"bf\",\n    // Burkina Faso\n    \"226\"\n  ],\n  [\n    \"bi\",\n    // Burundi\n    \"257\"\n  ],\n  [\n    \"kh\",\n    // Cambodia\n    \"855\"\n  ],\n  [\n    \"cm\",\n    // Cameroon\n    \"237\"\n  ],\n  [\n    \"ca\",\n    // Canada\n    \"1\",\n    1,\n    [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"879\", \"902\", \"905\"]\n  ],\n  [\n    \"cv\",\n    // Cape Verde\n    \"238\"\n  ],\n  [\n    \"bq\",\n    // Caribbean Netherlands\n    \"599\",\n    1,\n    [\"3\", \"4\", \"7\"]\n  ],\n  [\n    \"ky\",\n    // Cayman Islands\n    \"1\",\n    12,\n    [\"345\"]\n  ],\n  [\n    \"cf\",\n    // Central African Republic\n    \"236\"\n  ],\n  [\n    \"td\",\n    // Chad\n    \"235\"\n  ],\n  [\n    \"cl\",\n    // Chile\n    \"56\"\n  ],\n  [\n    \"cn\",\n    // China\n    \"86\"\n  ],\n  [\n    \"cx\",\n    // Christmas Island\n    \"61\",\n    2,\n    [\"89164\"],\n    \"0\"\n  ],\n  [\n    \"cc\",\n    // Cocos (Keeling) Islands\n    \"61\",\n    1,\n    [\"89162\"],\n    \"0\"\n  ],\n  [\n    \"co\",\n    // Colombia\n    \"57\"\n  ],\n  [\n    \"km\",\n    // Comoros\n    \"269\"\n  ],\n  [\n    \"cg\",\n    // Congo (Brazzaville)\n    \"242\"\n  ],\n  [\n    \"cd\",\n    // Congo (Kinshasa)\n    \"243\"\n  ],\n  [\n    \"ck\",\n    // Cook Islands\n    \"682\"\n  ],\n  [\n    \"cr\",\n    // Costa Rica\n    \"506\"\n  ],\n  [\n    \"ci\",\n    // Côte d'Ivoire\n    \"225\"\n  ],\n  [\n    \"hr\",\n    // Croatia\n    \"385\"\n  ],\n  [\n    \"cu\",\n    // Cuba\n    \"53\"\n  ],\n  [\n    \"cw\",\n    // Curaçao\n    \"599\",\n    0\n  ],\n  [\n    \"cy\",\n    // Cyprus\n    \"357\"\n  ],\n  [\n    \"cz\",\n    // Czech Republic\n    \"420\"\n  ],\n  [\n    \"dk\",\n    // Denmark\n    \"45\"\n  ],\n  [\n    \"dj\",\n    // Djibouti\n    \"253\"\n  ],\n  [\n    \"dm\",\n    // Dominica\n    \"1\",\n    13,\n    [\"767\"]\n  ],\n  [\n    \"do\",\n    // Dominican Republic\n    \"1\",\n    2,\n    [\"809\", \"829\", \"849\"]\n  ],\n  [\n    \"ec\",\n    // Ecuador\n    \"593\"\n  ],\n  [\n    \"eg\",\n    // Egypt\n    \"20\"\n  ],\n  [\n    \"sv\",\n    // El Salvador\n    \"503\"\n  ],\n  [\n    \"gq\",\n    // Equatorial Guinea\n    \"240\"\n  ],\n  [\n    \"er\",\n    // Eritrea\n    \"291\"\n  ],\n  [\n    \"ee\",\n    // Estonia\n    \"372\"\n  ],\n  [\n    \"sz\",\n    // Eswatini\n    \"268\"\n  ],\n  [\n    \"et\",\n    // Ethiopia\n    \"251\"\n  ],\n  [\n    \"fk\",\n    // Falkland Islands (Malvinas)\n    \"500\"\n  ],\n  [\n    \"fo\",\n    // Faroe Islands\n    \"298\"\n  ],\n  [\n    \"fj\",\n    // Fiji\n    \"679\"\n  ],\n  [\n    \"fi\",\n    // Finland\n    \"358\",\n    0\n  ],\n  [\n    \"fr\",\n    // France\n    \"33\"\n  ],\n  [\n    \"gf\",\n    // French Guiana\n    \"594\"\n  ],\n  [\n    \"pf\",\n    // French Polynesia\n    \"689\"\n  ],\n  [\n    \"ga\",\n    // Gabon\n    \"241\"\n  ],\n  [\n    \"gm\",\n    // Gambia\n    \"220\"\n  ],\n  [\n    \"ge\",\n    // Georgia\n    \"995\"\n  ],\n  [\n    \"de\",\n    // Germany\n    \"49\"\n  ],\n  [\n    \"gh\",\n    // Ghana\n    \"233\"\n  ],\n  [\n    \"gi\",\n    // Gibraltar\n    \"350\"\n  ],\n  [\n    \"gr\",\n    // Greece\n    \"30\"\n  ],\n  [\n    \"gl\",\n    // Greenland\n    \"299\"\n  ],\n  [\n    \"gd\",\n    // Grenada\n    \"1\",\n    14,\n    [\"473\"]\n  ],\n  [\n    \"gp\",\n    // Guadeloupe\n    \"590\",\n    0\n  ],\n  [\n    \"gu\",\n    // Guam\n    \"1\",\n    15,\n    [\"671\"]\n  ],\n  [\n    \"gt\",\n    // Guatemala\n    \"502\"\n  ],\n  [\n    \"gg\",\n    // Guernsey\n    \"44\",\n    1,\n    [\"1481\", \"7781\", \"7839\", \"7911\"],\n    \"0\"\n  ],\n  [\n    \"gn\",\n    // Guinea\n    \"224\"\n  ],\n  [\n    \"gw\",\n    // Guinea-Bissau\n    \"245\"\n  ],\n  [\n    \"gy\",\n    // Guyana\n    \"592\"\n  ],\n  [\n    \"ht\",\n    // Haiti\n    \"509\"\n  ],\n  [\n    \"hn\",\n    // Honduras\n    \"504\"\n  ],\n  [\n    \"hk\",\n    // Hong Kong SAR China\n    \"852\"\n  ],\n  [\n    \"hu\",\n    // Hungary\n    \"36\"\n  ],\n  [\n    \"is\",\n    // Iceland\n    \"354\"\n  ],\n  [\n    \"in\",\n    // India\n    \"91\"\n  ],\n  [\n    \"id\",\n    // Indonesia\n    \"62\"\n  ],\n  [\n    \"ir\",\n    // Iran\n    \"98\"\n  ],\n  [\n    \"iq\",\n    // Iraq\n    \"964\"\n  ],\n  [\n    \"ie\",\n    // Ireland\n    \"353\"\n  ],\n  [\n    \"im\",\n    // Isle of Man\n    \"44\",\n    2,\n    [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"],\n    \"0\"\n  ],\n  [\n    \"il\",\n    // Israel\n    \"972\"\n  ],\n  [\n    \"it\",\n    // Italy\n    \"39\",\n    0\n  ],\n  [\n    \"jm\",\n    // Jamaica\n    \"1\",\n    4,\n    [\"876\", \"658\"]\n  ],\n  [\n    \"jp\",\n    // Japan\n    \"81\"\n  ],\n  [\n    \"je\",\n    // Jersey\n    \"44\",\n    3,\n    [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"],\n    \"0\"\n  ],\n  [\n    \"jo\",\n    // Jordan\n    \"962\"\n  ],\n  [\n    \"kz\",\n    // Kazakhstan\n    \"7\",\n    1,\n    [\"33\", \"7\"],\n    \"8\"\n  ],\n  [\n    \"ke\",\n    // Kenya\n    \"254\"\n  ],\n  [\n    \"ki\",\n    // Kiribati\n    \"686\"\n  ],\n  [\n    \"xk\",\n    // Kosovo\n    \"383\"\n  ],\n  [\n    \"kw\",\n    // Kuwait\n    \"965\"\n  ],\n  [\n    \"kg\",\n    // Kyrgyzstan\n    \"996\"\n  ],\n  [\n    \"la\",\n    // Laos\n    \"856\"\n  ],\n  [\n    \"lv\",\n    // Latvia\n    \"371\"\n  ],\n  [\n    \"lb\",\n    // Lebanon\n    \"961\"\n  ],\n  [\n    \"ls\",\n    // Lesotho\n    \"266\"\n  ],\n  [\n    \"lr\",\n    // Liberia\n    \"231\"\n  ],\n  [\n    \"ly\",\n    // Libya\n    \"218\"\n  ],\n  [\n    \"li\",\n    // Liechtenstein\n    \"423\"\n  ],\n  [\n    \"lt\",\n    // Lithuania\n    \"370\"\n  ],\n  [\n    \"lu\",\n    // Luxembourg\n    \"352\"\n  ],\n  [\n    \"mo\",\n    // Macao SAR China\n    \"853\"\n  ],\n  [\n    \"mg\",\n    // Madagascar\n    \"261\"\n  ],\n  [\n    \"mw\",\n    // Malawi\n    \"265\"\n  ],\n  [\n    \"my\",\n    // Malaysia\n    \"60\"\n  ],\n  [\n    \"mv\",\n    // Maldives\n    \"960\"\n  ],\n  [\n    \"ml\",\n    // Mali\n    \"223\"\n  ],\n  [\n    \"mt\",\n    // Malta\n    \"356\"\n  ],\n  [\n    \"mh\",\n    // Marshall Islands\n    \"692\"\n  ],\n  [\n    \"mq\",\n    // Martinique\n    \"596\"\n  ],\n  [\n    \"mr\",\n    // Mauritania\n    \"222\"\n  ],\n  [\n    \"mu\",\n    // Mauritius\n    \"230\"\n  ],\n  [\n    \"yt\",\n    // Mayotte\n    \"262\",\n    1,\n    [\"269\", \"639\"],\n    \"0\"\n  ],\n  [\n    \"mx\",\n    // Mexico\n    \"52\"\n  ],\n  [\n    \"fm\",\n    // Micronesia\n    \"691\"\n  ],\n  [\n    \"md\",\n    // Moldova\n    \"373\"\n  ],\n  [\n    \"mc\",\n    // Monaco\n    \"377\"\n  ],\n  [\n    \"mn\",\n    // Mongolia\n    \"976\"\n  ],\n  [\n    \"me\",\n    // Montenegro\n    \"382\"\n  ],\n  [\n    \"ms\",\n    // Montserrat\n    \"1\",\n    16,\n    [\"664\"]\n  ],\n  [\n    \"ma\",\n    // Morocco\n    \"212\",\n    0,\n    null,\n    \"0\"\n  ],\n  [\n    \"mz\",\n    // Mozambique\n    \"258\"\n  ],\n  [\n    \"mm\",\n    // Myanmar (Burma)\n    \"95\"\n  ],\n  [\n    \"na\",\n    // Namibia\n    \"264\"\n  ],\n  [\n    \"nr\",\n    // Nauru\n    \"674\"\n  ],\n  [\n    \"np\",\n    // Nepal\n    \"977\"\n  ],\n  [\n    \"nl\",\n    // Netherlands\n    \"31\"\n  ],\n  [\n    \"nc\",\n    // New Caledonia\n    \"687\"\n  ],\n  [\n    \"nz\",\n    // New Zealand\n    \"64\"\n  ],\n  [\n    \"ni\",\n    // Nicaragua\n    \"505\"\n  ],\n  [\n    \"ne\",\n    // Niger\n    \"227\"\n  ],\n  [\n    \"ng\",\n    // Nigeria\n    \"234\"\n  ],\n  [\n    \"nu\",\n    // Niue\n    \"683\"\n  ],\n  [\n    \"nf\",\n    // Norfolk Island\n    \"672\"\n  ],\n  [\n    \"kp\",\n    // North Korea\n    \"850\"\n  ],\n  [\n    \"mk\",\n    // North Macedonia\n    \"389\"\n  ],\n  [\n    \"mp\",\n    // Northern Mariana Islands\n    \"1\",\n    17,\n    [\"670\"]\n  ],\n  [\n    \"no\",\n    // Norway\n    \"47\",\n    0\n  ],\n  [\n    \"om\",\n    // Oman\n    \"968\"\n  ],\n  [\n    \"pk\",\n    // Pakistan\n    \"92\"\n  ],\n  [\n    \"pw\",\n    // Palau\n    \"680\"\n  ],\n  [\n    \"ps\",\n    // Palestinian Territories\n    \"970\"\n  ],\n  [\n    \"pa\",\n    // Panama\n    \"507\"\n  ],\n  [\n    \"pg\",\n    // Papua New Guinea\n    \"675\"\n  ],\n  [\n    \"py\",\n    // Paraguay\n    \"595\"\n  ],\n  [\n    \"pe\",\n    // Peru\n    \"51\"\n  ],\n  [\n    \"ph\",\n    // Philippines\n    \"63\"\n  ],\n  [\n    \"pl\",\n    // Poland\n    \"48\"\n  ],\n  [\n    \"pt\",\n    // Portugal\n    \"351\"\n  ],\n  [\n    \"pr\",\n    // Puerto Rico\n    \"1\",\n    3,\n    [\"787\", \"939\"]\n  ],\n  [\n    \"qa\",\n    // Qatar\n    \"974\"\n  ],\n  [\n    \"re\",\n    // Réunion\n    \"262\",\n    0,\n    null,\n    \"0\"\n  ],\n  [\n    \"ro\",\n    // Romania\n    \"40\"\n  ],\n  [\n    \"ru\",\n    // Russia\n    \"7\",\n    0,\n    null,\n    \"8\"\n  ],\n  [\n    \"rw\",\n    // Rwanda\n    \"250\"\n  ],\n  [\n    \"ws\",\n    // Samoa\n    \"685\"\n  ],\n  [\n    \"sm\",\n    // San Marino\n    \"378\"\n  ],\n  [\n    \"st\",\n    // São Tomé & Príncipe\n    \"239\"\n  ],\n  [\n    \"sa\",\n    // Saudi Arabia\n    \"966\"\n  ],\n  [\n    \"sn\",\n    // Senegal\n    \"221\"\n  ],\n  [\n    \"rs\",\n    // Serbia\n    \"381\"\n  ],\n  [\n    \"sc\",\n    // Seychelles\n    \"248\"\n  ],\n  [\n    \"sl\",\n    // Sierra Leone\n    \"232\"\n  ],\n  [\n    \"sg\",\n    // Singapore\n    \"65\"\n  ],\n  [\n    \"sx\",\n    // Sint Maarten\n    \"1\",\n    21,\n    [\"721\"]\n  ],\n  [\n    \"sk\",\n    // Slovakia\n    \"421\"\n  ],\n  [\n    \"si\",\n    // Slovenia\n    \"386\"\n  ],\n  [\n    \"sb\",\n    // Solomon Islands\n    \"677\"\n  ],\n  [\n    \"so\",\n    // Somalia\n    \"252\"\n  ],\n  [\n    \"za\",\n    // South Africa\n    \"27\"\n  ],\n  [\n    \"kr\",\n    // South Korea\n    \"82\"\n  ],\n  [\n    \"ss\",\n    // South Sudan\n    \"211\"\n  ],\n  [\n    \"es\",\n    // Spain\n    \"34\"\n  ],\n  [\n    \"lk\",\n    // Sri Lanka\n    \"94\"\n  ],\n  [\n    \"bl\",\n    // St. Barthélemy\n    \"590\",\n    1\n  ],\n  [\n    \"sh\",\n    // St. Helena\n    \"290\"\n  ],\n  [\n    \"kn\",\n    // St. Kitts & Nevis\n    \"1\",\n    18,\n    [\"869\"]\n  ],\n  [\n    \"lc\",\n    // St. Lucia\n    \"1\",\n    19,\n    [\"758\"]\n  ],\n  [\n    \"mf\",\n    // St. Martin\n    \"590\",\n    2\n  ],\n  [\n    \"pm\",\n    // St. Pierre & Miquelon\n    \"508\"\n  ],\n  [\n    \"vc\",\n    // St. Vincent & Grenadines\n    \"1\",\n    20,\n    [\"784\"]\n  ],\n  [\n    \"sd\",\n    // Sudan\n    \"249\"\n  ],\n  [\n    \"sr\",\n    // Suriname\n    \"597\"\n  ],\n  [\n    \"sj\",\n    // Svalbard & Jan Mayen\n    \"47\",\n    1,\n    [\"79\"]\n  ],\n  [\n    \"se\",\n    // Sweden\n    \"46\"\n  ],\n  [\n    \"ch\",\n    // Switzerland\n    \"41\"\n  ],\n  [\n    \"sy\",\n    // Syria\n    \"963\"\n  ],\n  [\n    \"tw\",\n    // Taiwan\n    \"886\"\n  ],\n  [\n    \"tj\",\n    // Tajikistan\n    \"992\"\n  ],\n  [\n    \"tz\",\n    // Tanzania\n    \"255\"\n  ],\n  [\n    \"th\",\n    // Thailand\n    \"66\"\n  ],\n  [\n    \"tl\",\n    // Timor-Leste\n    \"670\"\n  ],\n  [\n    \"tg\",\n    // Togo\n    \"228\"\n  ],\n  [\n    \"tk\",\n    // Tokelau\n    \"690\"\n  ],\n  [\n    \"to\",\n    // Tonga\n    \"676\"\n  ],\n  [\n    \"tt\",\n    // Trinidad & Tobago\n    \"1\",\n    22,\n    [\"868\"]\n  ],\n  [\n    \"tn\",\n    // Tunisia\n    \"216\"\n  ],\n  [\n    \"tr\",\n    // Turkey\n    \"90\"\n  ],\n  [\n    \"tm\",\n    // Turkmenistan\n    \"993\"\n  ],\n  [\n    \"tc\",\n    // Turks & Caicos Islands\n    \"1\",\n    23,\n    [\"649\"]\n  ],\n  [\n    \"tv\",\n    // Tuvalu\n    \"688\"\n  ],\n  [\n    \"ug\",\n    // Uganda\n    \"256\"\n  ],\n  [\n    \"ua\",\n    // Ukraine\n    \"380\"\n  ],\n  [\n    \"ae\",\n    // United Arab Emirates\n    \"971\"\n  ],\n  [\n    \"gb\",\n    // United Kingdom\n    \"44\",\n    0,\n    null,\n    \"0\"\n  ],\n  [\n    \"us\",\n    // United States\n    \"1\",\n    0\n  ],\n  [\n    \"uy\",\n    // Uruguay\n    \"598\"\n  ],\n  [\n    \"vi\",\n    // U.S. Virgin Islands\n    \"1\",\n    24,\n    [\"340\"]\n  ],\n  [\n    \"uz\",\n    // Uzbekistan\n    \"998\"\n  ],\n  [\n    \"vu\",\n    // Vanuatu\n    \"678\"\n  ],\n  [\n    \"va\",\n    // Vatican City\n    \"39\",\n    1,\n    [\"06698\"]\n  ],\n  [\n    \"ve\",\n    // Venezuela\n    \"58\"\n  ],\n  [\n    \"vn\",\n    // Vietnam\n    \"84\"\n  ],\n  [\n    \"wf\",\n    // Wallis & Futuna\n    \"681\"\n  ],\n  [\n    \"eh\",\n    // Western Sahara\n    \"212\",\n    1,\n    [\"5288\", \"5289\"],\n    \"0\"\n  ],\n  [\n    \"ye\",\n    // Yemen\n    \"967\"\n  ],\n  [\n    \"zm\",\n    // Zambia\n    \"260\"\n  ],\n  [\n    \"zw\",\n    // Zimbabwe\n    \"263\"\n  ]\n];\nvar allCountries = [];\nfor (let i = 0; i < rawCountryData.length; i++) {\n  const c = rawCountryData[i];\n  allCountries[i] = {\n    name: \"\",\n    // this is now populated in the plugin\n    iso2: c[0],\n    dialCode: c[1],\n    priority: c[2] || 0,\n    areaCodes: c[3] || null,\n    nodeById: {},\n    nationalPrefix: c[4] || null\n  };\n}\nvar data_default = allCountries;\n\n// src/js/intl-tel-input/i18n/en/countries.ts\nvar countryTranslations = {\n  ad: \"Andorra\",\n  ae: \"United Arab Emirates\",\n  af: \"Afghanistan\",\n  ag: \"Antigua & Barbuda\",\n  ai: \"Anguilla\",\n  al: \"Albania\",\n  am: \"Armenia\",\n  ao: \"Angola\",\n  ar: \"Argentina\",\n  as: \"American Samoa\",\n  at: \"Austria\",\n  au: \"Australia\",\n  aw: \"Aruba\",\n  ax: \"\\xC5land Islands\",\n  az: \"Azerbaijan\",\n  ba: \"Bosnia & Herzegovina\",\n  bb: \"Barbados\",\n  bd: \"Bangladesh\",\n  be: \"Belgium\",\n  bf: \"Burkina Faso\",\n  bg: \"Bulgaria\",\n  bh: \"Bahrain\",\n  bi: \"Burundi\",\n  bj: \"Benin\",\n  bl: \"St. Barth\\xE9lemy\",\n  bm: \"Bermuda\",\n  bn: \"Brunei\",\n  bo: \"Bolivia\",\n  bq: \"Caribbean Netherlands\",\n  br: \"Brazil\",\n  bs: \"Bahamas\",\n  bt: \"Bhutan\",\n  bw: \"Botswana\",\n  by: \"Belarus\",\n  bz: \"Belize\",\n  ca: \"Canada\",\n  cc: \"Cocos (Keeling) Islands\",\n  cd: \"Congo - Kinshasa\",\n  cf: \"Central African Republic\",\n  cg: \"Congo - Brazzaville\",\n  ch: \"Switzerland\",\n  ci: \"C\\xF4te d\\u2019Ivoire\",\n  ck: \"Cook Islands\",\n  cl: \"Chile\",\n  cm: \"Cameroon\",\n  cn: \"China\",\n  co: \"Colombia\",\n  cr: \"Costa Rica\",\n  cu: \"Cuba\",\n  cv: \"Cape Verde\",\n  cw: \"Cura\\xE7ao\",\n  cx: \"Christmas Island\",\n  cy: \"Cyprus\",\n  cz: \"Czechia\",\n  de: \"Germany\",\n  dj: \"Djibouti\",\n  dk: \"Denmark\",\n  dm: \"Dominica\",\n  do: \"Dominican Republic\",\n  dz: \"Algeria\",\n  ec: \"Ecuador\",\n  ee: \"Estonia\",\n  eg: \"Egypt\",\n  eh: \"Western Sahara\",\n  er: \"Eritrea\",\n  es: \"Spain\",\n  et: \"Ethiopia\",\n  fi: \"Finland\",\n  fj: \"Fiji\",\n  fk: \"Falkland Islands\",\n  fm: \"Micronesia\",\n  fo: \"Faroe Islands\",\n  fr: \"France\",\n  ga: \"Gabon\",\n  gb: \"United Kingdom\",\n  gd: \"Grenada\",\n  ge: \"Georgia\",\n  gf: \"French Guiana\",\n  gg: \"Guernsey\",\n  gh: \"Ghana\",\n  gi: \"Gibraltar\",\n  gl: \"Greenland\",\n  gm: \"Gambia\",\n  gn: \"Guinea\",\n  gp: \"Guadeloupe\",\n  gq: \"Equatorial Guinea\",\n  gr: \"Greece\",\n  gt: \"Guatemala\",\n  gu: \"Guam\",\n  gw: \"Guinea-Bissau\",\n  gy: \"Guyana\",\n  hk: \"Hong Kong SAR China\",\n  hn: \"Honduras\",\n  hr: \"Croatia\",\n  ht: \"Haiti\",\n  hu: \"Hungary\",\n  id: \"Indonesia\",\n  ie: \"Ireland\",\n  il: \"Israel\",\n  im: \"Isle of Man\",\n  in: \"India\",\n  io: \"British Indian Ocean Territory\",\n  iq: \"Iraq\",\n  ir: \"Iran\",\n  is: \"Iceland\",\n  it: \"Italy\",\n  je: \"Jersey\",\n  jm: \"Jamaica\",\n  jo: \"Jordan\",\n  jp: \"Japan\",\n  ke: \"Kenya\",\n  kg: \"Kyrgyzstan\",\n  kh: \"Cambodia\",\n  ki: \"Kiribati\",\n  km: \"Comoros\",\n  kn: \"St. Kitts & Nevis\",\n  kp: \"North Korea\",\n  kr: \"South Korea\",\n  kw: \"Kuwait\",\n  ky: \"Cayman Islands\",\n  kz: \"Kazakhstan\",\n  la: \"Laos\",\n  lb: \"Lebanon\",\n  lc: \"St. Lucia\",\n  li: \"Liechtenstein\",\n  lk: \"Sri Lanka\",\n  lr: \"Liberia\",\n  ls: \"Lesotho\",\n  lt: \"Lithuania\",\n  lu: \"Luxembourg\",\n  lv: \"Latvia\",\n  ly: \"Libya\",\n  ma: \"Morocco\",\n  mc: \"Monaco\",\n  md: \"Moldova\",\n  me: \"Montenegro\",\n  mf: \"St. Martin\",\n  mg: \"Madagascar\",\n  mh: \"Marshall Islands\",\n  mk: \"North Macedonia\",\n  ml: \"Mali\",\n  mm: \"Myanmar (Burma)\",\n  mn: \"Mongolia\",\n  mo: \"Macao SAR China\",\n  mp: \"Northern Mariana Islands\",\n  mq: \"Martinique\",\n  mr: \"Mauritania\",\n  ms: \"Montserrat\",\n  mt: \"Malta\",\n  mu: \"Mauritius\",\n  mv: \"Maldives\",\n  mw: \"Malawi\",\n  mx: \"Mexico\",\n  my: \"Malaysia\",\n  mz: \"Mozambique\",\n  na: \"Namibia\",\n  nc: \"New Caledonia\",\n  ne: \"Niger\",\n  nf: \"Norfolk Island\",\n  ng: \"Nigeria\",\n  ni: \"Nicaragua\",\n  nl: \"Netherlands\",\n  no: \"Norway\",\n  np: \"Nepal\",\n  nr: \"Nauru\",\n  nu: \"Niue\",\n  nz: \"New Zealand\",\n  om: \"Oman\",\n  pa: \"Panama\",\n  pe: \"Peru\",\n  pf: \"French Polynesia\",\n  pg: \"Papua New Guinea\",\n  ph: \"Philippines\",\n  pk: \"Pakistan\",\n  pl: \"Poland\",\n  pm: \"St. Pierre & Miquelon\",\n  pr: \"Puerto Rico\",\n  ps: \"Palestinian Territories\",\n  pt: \"Portugal\",\n  pw: \"Palau\",\n  py: \"Paraguay\",\n  qa: \"Qatar\",\n  re: \"R\\xE9union\",\n  ro: \"Romania\",\n  rs: \"Serbia\",\n  ru: \"Russia\",\n  rw: \"Rwanda\",\n  sa: \"Saudi Arabia\",\n  sb: \"Solomon Islands\",\n  sc: \"Seychelles\",\n  sd: \"Sudan\",\n  se: \"Sweden\",\n  sg: \"Singapore\",\n  sh: \"St. Helena\",\n  si: \"Slovenia\",\n  sj: \"Svalbard & Jan Mayen\",\n  sk: \"Slovakia\",\n  sl: \"Sierra Leone\",\n  sm: \"San Marino\",\n  sn: \"Senegal\",\n  so: \"Somalia\",\n  sr: \"Suriname\",\n  ss: \"South Sudan\",\n  st: \"S\\xE3o Tom\\xE9 & Pr\\xEDncipe\",\n  sv: \"El Salvador\",\n  sx: \"Sint Maarten\",\n  sy: \"Syria\",\n  sz: \"Eswatini\",\n  tc: \"Turks & Caicos Islands\",\n  td: \"Chad\",\n  tg: \"Togo\",\n  th: \"Thailand\",\n  tj: \"Tajikistan\",\n  tk: \"Tokelau\",\n  tl: \"Timor-Leste\",\n  tm: \"Turkmenistan\",\n  tn: \"Tunisia\",\n  to: \"Tonga\",\n  tr: \"Turkey\",\n  tt: \"Trinidad & Tobago\",\n  tv: \"Tuvalu\",\n  tw: \"Taiwan\",\n  tz: \"Tanzania\",\n  ua: \"Ukraine\",\n  ug: \"Uganda\",\n  us: \"United States\",\n  uy: \"Uruguay\",\n  uz: \"Uzbekistan\",\n  va: \"Vatican City\",\n  vc: \"St. Vincent & Grenadines\",\n  ve: \"Venezuela\",\n  vg: \"British Virgin Islands\",\n  vi: \"U.S. Virgin Islands\",\n  vn: \"Vietnam\",\n  vu: \"Vanuatu\",\n  wf: \"Wallis & Futuna\",\n  ws: \"Samoa\",\n  ye: \"Yemen\",\n  yt: \"Mayotte\",\n  za: \"South Africa\",\n  zm: \"Zambia\",\n  zw: \"Zimbabwe\"\n};\nvar countries_default = countryTranslations;\n\n// src/js/intl-tel-input/i18n/en/interface.ts\nvar interfaceTranslations = {\n  selectedCountryAriaLabel: \"Selected country\",\n  noCountrySelected: \"No country selected\",\n  countryListAriaLabel: \"List of countries\",\n  searchPlaceholder: \"Search\",\n  zeroSearchResults: \"No results found\",\n  oneSearchResult: \"1 result found\",\n  multipleSearchResults: \"${count} results found\",\n  // additional countries (not supported by country-list library)\n  ac: \"Ascension Island\",\n  xk: \"Kosovo\"\n};\nvar interface_default = interfaceTranslations;\n\n// src/js/intl-tel-input/i18n/en/index.ts\nvar allTranslations = { ...countries_default, ...interface_default };\nvar en_default = allTranslations;\n\n// src/js/intl-tel-input.ts\nfor (let i = 0; i < data_default.length; i++) {\n  data_default[i].name = en_default[data_default[i].iso2];\n}\nvar id = 0;\nvar defaults = {\n  //* Whether or not to allow the dropdown.\n  allowDropdown: true,\n  //* Add a placeholder in the input with an example number for the selected country.\n  autoPlaceholder: \"polite\",\n  //* Modify the parentClass.\n  containerClass: \"\",\n  //* The order of the countries in the dropdown. Defaults to alphabetical.\n  countryOrder: null,\n  //* Add a country search input at the top of the dropdown.\n  countrySearch: true,\n  //* Modify the auto placeholder.\n  customPlaceholder: null,\n  //* Append menu to specified element.\n  dropdownContainer: null,\n  //* Don't display these countries.\n  excludeCountries: [],\n  //* Fix the dropdown width to the input width (rather than being as wide as the longest country name).\n  fixDropdownWidth: true,\n  //* Format the number as the user types\n  formatAsYouType: true,\n  //* Format the input value during initialisation and on setNumber.\n  formatOnDisplay: true,\n  //* geoIp lookup function.\n  geoIpLookup: null,\n  //* Inject a hidden input with the name returned from this function, and on submit, populate it with the result of getNumber.\n  hiddenInput: null,\n  //* Internationalise the plugin text e.g. search input placeholder, country names.\n  i18n: {},\n  //* Initial country.\n  initialCountry: \"\",\n  //* A function to load the utils script.\n  loadUtils: null,\n  //* National vs international formatting for numbers e.g. placeholders and displaying existing numbers.\n  nationalMode: true,\n  //* Display only these countries.\n  onlyCountries: [],\n  //* Number type to use for placeholders.\n  placeholderNumberType: \"MOBILE\",\n  //* Show flags - for both the selected country, and in the country dropdown\n  showFlags: true,\n  //* Display the international dial code next to the selected flag.\n  separateDialCode: false,\n  //* Only allow certain chars e.g. a plus followed by numeric digits, and cap at max valid length.\n  strictMode: false,\n  //* Use full screen popup instead of dropdown for country list.\n  useFullscreenPopup: typeof navigator !== \"undefined\" && typeof window !== \"undefined\" ? (\n    //* We cannot just test screen size as some smartphones/website meta tags will report desktop resolutions.\n    //* Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n    /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    ) || window.innerWidth <= 500\n  ) : false,\n  //* The number type to enforce during validation.\n  validationNumberTypes: [\"MOBILE\"]\n};\nvar regionlessNanpNumbers = [\n  \"800\",\n  \"822\",\n  \"833\",\n  \"844\",\n  \"855\",\n  \"866\",\n  \"877\",\n  \"880\",\n  \"881\",\n  \"882\",\n  \"883\",\n  \"884\",\n  \"885\",\n  \"886\",\n  \"887\",\n  \"888\",\n  \"889\"\n];\nvar getNumeric = (s) => s.replace(/\\D/g, \"\");\nvar normaliseString = (s = \"\") => s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\nvar isRegionlessNanp = (number) => {\n  const numeric = getNumeric(number);\n  if (numeric.charAt(0) === \"1\") {\n    const areaCode = numeric.substr(1, 3);\n    return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n  }\n  return false;\n};\nvar translateCursorPosition = (relevantChars, formattedValue, prevCaretPos, isDeleteForwards) => {\n  if (prevCaretPos === 0 && !isDeleteForwards) {\n    return 0;\n  }\n  let count = 0;\n  for (let i = 0; i < formattedValue.length; i++) {\n    if (/[+0-9]/.test(formattedValue[i])) {\n      count++;\n    }\n    if (count === relevantChars && !isDeleteForwards) {\n      return i + 1;\n    }\n    if (isDeleteForwards && count === relevantChars + 1) {\n      return i;\n    }\n  }\n  return formattedValue.length;\n};\nvar createEl = (name, attrs, container) => {\n  const el = document.createElement(name);\n  if (attrs) {\n    Object.entries(attrs).forEach(([key, value]) => el.setAttribute(key, value));\n  }\n  if (container) {\n    container.appendChild(el);\n  }\n  return el;\n};\nvar forEachInstance = (method, ...args) => {\n  const { instances } = intlTelInput;\n  Object.values(instances).forEach((instance) => instance[method](...args));\n};\nvar Iti = class {\n  constructor(input, customOptions = {}) {\n    this.id = id++;\n    this.telInput = input;\n    this.highlightedItem = null;\n    this.options = Object.assign({}, defaults, customOptions);\n    this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n  }\n  //* Can't be private as it's called from intlTelInput convenience wrapper.\n  _init() {\n    if (this.options.useFullscreenPopup) {\n      this.options.fixDropdownWidth = false;\n    }\n    if (this.options.onlyCountries.length === 1) {\n      this.options.initialCountry = this.options.onlyCountries[0];\n    }\n    if (this.options.separateDialCode) {\n      this.options.nationalMode = false;\n    }\n    if (this.options.allowDropdown && !this.options.showFlags && !this.options.separateDialCode) {\n      this.options.nationalMode = false;\n    }\n    if (this.options.useFullscreenPopup && !this.options.dropdownContainer) {\n      this.options.dropdownContainer = document.body;\n    }\n    this.isAndroid = typeof navigator !== \"undefined\" ? /Android/i.test(navigator.userAgent) : false;\n    this.isRTL = !!this.telInput.closest(\"[dir=rtl]\");\n    const showOnDefaultSide = this.options.allowDropdown || this.options.separateDialCode;\n    this.showSelectedCountryOnLeft = this.isRTL ? !showOnDefaultSide : showOnDefaultSide;\n    if (this.options.separateDialCode) {\n      if (this.isRTL) {\n        this.originalPaddingRight = this.telInput.style.paddingRight;\n      } else {\n        this.originalPaddingLeft = this.telInput.style.paddingLeft;\n      }\n    }\n    this.options.i18n = { ...en_default, ...this.options.i18n };\n    const autoCountryPromise = new Promise((resolve, reject) => {\n      this.resolveAutoCountryPromise = resolve;\n      this.rejectAutoCountryPromise = reject;\n    });\n    const utilsScriptPromise = new Promise((resolve, reject) => {\n      this.resolveUtilsScriptPromise = resolve;\n      this.rejectUtilsScriptPromise = reject;\n    });\n    this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);\n    this.selectedCountryData = {};\n    this._processCountryData();\n    this._generateMarkup();\n    this._setInitialState();\n    this._initListeners();\n    this._initRequests();\n  }\n  //********************\n  //*  PRIVATE METHODS\n  //********************\n  //* Prepare all of the country data, including onlyCountries, excludeCountries, countryOrder options.\n  _processCountryData() {\n    this._processAllCountries();\n    this._processDialCodes();\n    this._translateCountryNames();\n    this._sortCountries();\n  }\n  //* Sort countries by countryOrder option (if present), then name.\n  _sortCountries() {\n    if (this.options.countryOrder) {\n      this.options.countryOrder = this.options.countryOrder.map((country) => country.toLowerCase());\n    }\n    this.countries.sort((a, b) => {\n      const { countryOrder } = this.options;\n      if (countryOrder) {\n        const aIndex = countryOrder.indexOf(a.iso2);\n        const bIndex = countryOrder.indexOf(b.iso2);\n        const aIndexExists = aIndex > -1;\n        const bIndexExists = bIndex > -1;\n        if (aIndexExists || bIndexExists) {\n          if (aIndexExists && bIndexExists) {\n            return aIndex - bIndex;\n          }\n          return aIndexExists ? -1 : 1;\n        }\n      }\n      return a.name.localeCompare(b.name);\n    });\n  }\n  //* Add a dial code to this.dialCodeToIso2Map.\n  _addToDialCodeMap(iso2, dialCode, priority) {\n    if (dialCode.length > this.dialCodeMaxLen) {\n      this.dialCodeMaxLen = dialCode.length;\n    }\n    if (!this.dialCodeToIso2Map.hasOwnProperty(dialCode)) {\n      this.dialCodeToIso2Map[dialCode] = [];\n    }\n    for (let i = 0; i < this.dialCodeToIso2Map[dialCode].length; i++) {\n      if (this.dialCodeToIso2Map[dialCode][i] === iso2) {\n        return;\n      }\n    }\n    const index = priority !== void 0 ? priority : this.dialCodeToIso2Map[dialCode].length;\n    this.dialCodeToIso2Map[dialCode][index] = iso2;\n  }\n  //* Process onlyCountries or excludeCountries array if present.\n  _processAllCountries() {\n    const { onlyCountries, excludeCountries } = this.options;\n    if (onlyCountries.length) {\n      const lowerCaseOnlyCountries = onlyCountries.map(\n        (country) => country.toLowerCase()\n      );\n      this.countries = data_default.filter(\n        (country) => lowerCaseOnlyCountries.indexOf(country.iso2) > -1\n      );\n    } else if (excludeCountries.length) {\n      const lowerCaseExcludeCountries = excludeCountries.map(\n        (country) => country.toLowerCase()\n      );\n      this.countries = data_default.filter(\n        (country) => lowerCaseExcludeCountries.indexOf(country.iso2) === -1\n      );\n    } else {\n      this.countries = data_default;\n    }\n  }\n  //* Translate Countries by object literal provided on config.\n  _translateCountryNames() {\n    for (let i = 0; i < this.countries.length; i++) {\n      const iso2 = this.countries[i].iso2.toLowerCase();\n      if (this.options.i18n.hasOwnProperty(iso2)) {\n        this.countries[i].name = this.options.i18n[iso2];\n      }\n    }\n  }\n  //* Generate this.dialCodes and this.dialCodeToIso2Map.\n  _processDialCodes() {\n    this.dialCodes = {};\n    this.dialCodeMaxLen = 0;\n    this.dialCodeToIso2Map = {};\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      if (!this.dialCodes[c.dialCode]) {\n        this.dialCodes[c.dialCode] = true;\n      }\n      this._addToDialCodeMap(c.iso2, c.dialCode, c.priority);\n    }\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      if (c.areaCodes) {\n        const rootIso2Code = this.dialCodeToIso2Map[c.dialCode][0];\n        for (let j = 0; j < c.areaCodes.length; j++) {\n          const areaCode = c.areaCodes[j];\n          for (let k = 1; k < areaCode.length; k++) {\n            const partialAreaCode = areaCode.substr(0, k);\n            const partialDialCode = c.dialCode + partialAreaCode;\n            this._addToDialCodeMap(rootIso2Code, partialDialCode);\n            this._addToDialCodeMap(c.iso2, partialDialCode);\n          }\n          this._addToDialCodeMap(c.iso2, c.dialCode + areaCode);\n        }\n      }\n    }\n  }\n  //* Generate all of the markup for the plugin: the selected country overlay, and the dropdown.\n  _generateMarkup() {\n    this.telInput.classList.add(\"iti__tel-input\");\n    if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n      this.telInput.setAttribute(\"autocomplete\", \"off\");\n    }\n    const {\n      allowDropdown,\n      separateDialCode,\n      showFlags,\n      containerClass,\n      hiddenInput,\n      dropdownContainer,\n      fixDropdownWidth,\n      useFullscreenPopup,\n      countrySearch,\n      i18n\n    } = this.options;\n    let parentClass = \"iti\";\n    if (allowDropdown) {\n      parentClass += \" iti--allow-dropdown\";\n    }\n    if (showFlags) {\n      parentClass += \" iti--show-flags\";\n    }\n    if (containerClass) {\n      parentClass += ` ${containerClass}`;\n    }\n    if (!useFullscreenPopup) {\n      parentClass += \" iti--inline-dropdown\";\n    }\n    const wrapper = createEl(\"div\", { class: parentClass });\n    this.telInput.parentNode?.insertBefore(wrapper, this.telInput);\n    if (allowDropdown || showFlags || separateDialCode) {\n      this.countryContainer = createEl(\n        \"div\",\n        { class: \"iti__country-container\" },\n        wrapper\n      );\n      if (this.showSelectedCountryOnLeft) {\n        this.countryContainer.style.left = \"0px\";\n      } else {\n        this.countryContainer.style.right = \"0px\";\n      }\n      if (allowDropdown) {\n        this.selectedCountry = createEl(\n          \"button\",\n          {\n            type: \"button\",\n            class: \"iti__selected-country\",\n            \"aria-expanded\": \"false\",\n            \"aria-label\": this.options.i18n.selectedCountryAriaLabel,\n            \"aria-haspopup\": \"true\",\n            \"aria-controls\": `iti-${this.id}__dropdown-content`,\n            \"role\": \"combobox\"\n          },\n          this.countryContainer\n        );\n        if (this.telInput.disabled) {\n          this.selectedCountry.setAttribute(\"disabled\", \"true\");\n        }\n      } else {\n        this.selectedCountry = createEl(\n          \"div\",\n          { class: \"iti__selected-country\" },\n          this.countryContainer\n        );\n      }\n      const selectedCountryPrimary = createEl(\"div\", { class: \"iti__selected-country-primary\" }, this.selectedCountry);\n      this.selectedCountryInner = createEl(\"div\", { class: \"iti__flag\" }, selectedCountryPrimary);\n      this.selectedCountryA11yText = createEl(\n        \"span\",\n        { class: \"iti__a11y-text\" },\n        this.selectedCountryInner\n      );\n      if (allowDropdown) {\n        this.dropdownArrow = createEl(\n          \"div\",\n          { class: \"iti__arrow\", \"aria-hidden\": \"true\" },\n          selectedCountryPrimary\n        );\n      }\n      if (separateDialCode) {\n        this.selectedDialCode = createEl(\n          \"div\",\n          { class: \"iti__selected-dial-code\" },\n          this.selectedCountry\n        );\n      }\n      if (allowDropdown) {\n        const extraClasses = fixDropdownWidth ? \"\" : \"iti--flexible-dropdown-width\";\n        this.dropdownContent = createEl(\"div\", {\n          id: `iti-${this.id}__dropdown-content`,\n          class: `iti__dropdown-content iti__hide ${extraClasses}`\n        });\n        if (countrySearch) {\n          this.searchInput = createEl(\n            \"input\",\n            {\n              type: \"text\",\n              class: \"iti__search-input\",\n              placeholder: i18n.searchPlaceholder,\n              role: \"combobox\",\n              \"aria-expanded\": \"true\",\n              \"aria-label\": i18n.searchPlaceholder,\n              \"aria-controls\": `iti-${this.id}__country-listbox`,\n              \"aria-autocomplete\": \"list\",\n              \"autocomplete\": \"off\"\n            },\n            this.dropdownContent\n          );\n          this.searchResultsA11yText = createEl(\n            \"span\",\n            { class: \"iti__a11y-text\" },\n            this.dropdownContent\n          );\n        }\n        this.countryList = createEl(\n          \"ul\",\n          {\n            class: \"iti__country-list\",\n            id: `iti-${this.id}__country-listbox`,\n            role: \"listbox\",\n            \"aria-label\": i18n.countryListAriaLabel\n          },\n          this.dropdownContent\n        );\n        this._appendListItems();\n        if (countrySearch) {\n          this._updateSearchResultsText();\n        }\n        if (dropdownContainer) {\n          let dropdownClasses = \"iti iti--container\";\n          if (useFullscreenPopup) {\n            dropdownClasses += \" iti--fullscreen-popup\";\n          } else {\n            dropdownClasses += \" iti--inline-dropdown\";\n          }\n          this.dropdown = createEl(\"div\", { class: dropdownClasses });\n          this.dropdown.appendChild(this.dropdownContent);\n        } else {\n          this.countryContainer.appendChild(this.dropdownContent);\n        }\n      }\n    }\n    wrapper.appendChild(this.telInput);\n    this._updateInputPadding();\n    if (hiddenInput) {\n      const telInputName = this.telInput.getAttribute(\"name\") || \"\";\n      const names = hiddenInput(telInputName);\n      if (names.phone) {\n        const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.phone}\"]`);\n        if (existingInput) {\n          this.hiddenInput = existingInput;\n        } else {\n          this.hiddenInput = createEl(\"input\", {\n            type: \"hidden\",\n            name: names.phone\n          });\n          wrapper.appendChild(this.hiddenInput);\n        }\n      }\n      if (names.country) {\n        const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.country}\"]`);\n        if (existingInput) {\n          this.hiddenInputCountry = existingInput;\n        } else {\n          this.hiddenInputCountry = createEl(\"input\", {\n            type: \"hidden\",\n            name: names.country\n          });\n          wrapper.appendChild(this.hiddenInputCountry);\n        }\n      }\n    }\n  }\n  //* For each country: add a country list item <li> to the countryList <ul> container.\n  _appendListItems() {\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const extraClass = i === 0 ? \"iti__highlight\" : \"\";\n      const listItem = createEl(\n        \"li\",\n        {\n          id: `iti-${this.id}__item-${c.iso2}`,\n          class: `iti__country ${extraClass}`,\n          tabindex: \"-1\",\n          role: \"option\",\n          \"data-dial-code\": c.dialCode,\n          \"data-country-code\": c.iso2,\n          \"aria-selected\": \"false\"\n        },\n        this.countryList\n      );\n      c.nodeById[this.id] = listItem;\n      let content = \"\";\n      if (this.options.showFlags) {\n        content += `<div class='iti__flag iti__${c.iso2}'></div>`;\n      }\n      content += `<span class='iti__country-name'>${c.name}</span>`;\n      content += `<span class='iti__dial-code'>+${c.dialCode}</span>`;\n      listItem.insertAdjacentHTML(\"beforeend\", content);\n    }\n  }\n  //* Set the initial state of the input value and the selected country by:\n  //* 1. Extracting a dial code from the given number\n  //* 2. Using explicit initialCountry\n  _setInitialState(overrideAutoCountry = false) {\n    const attributeValue = this.telInput.getAttribute(\"value\");\n    const inputValue = this.telInput.value;\n    const useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n    const val = useAttribute ? attributeValue : inputValue;\n    const dialCode = this._getDialCode(val);\n    const isRegionlessNanpNumber = isRegionlessNanp(val);\n    const { initialCountry, geoIpLookup } = this.options;\n    const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\n    if (dialCode && !isRegionlessNanpNumber) {\n      this._updateCountryFromNumber(val);\n    } else if (!isAutoCountry || overrideAutoCountry) {\n      const lowerInitialCountry = initialCountry ? initialCountry.toLowerCase() : \"\";\n      const isValidInitialCountry = lowerInitialCountry && this._getCountryData(lowerInitialCountry, true);\n      if (isValidInitialCountry) {\n        this._setCountry(lowerInitialCountry);\n      } else {\n        if (dialCode && isRegionlessNanpNumber) {\n          this._setCountry(\"us\");\n        } else {\n          this._setCountry();\n        }\n      }\n    }\n    if (val) {\n      this._updateValFromNumber(val);\n    }\n  }\n  //* Initialise the main event listeners: input keyup, and click selected country.\n  _initListeners() {\n    this._initTelInputListeners();\n    if (this.options.allowDropdown) {\n      this._initDropdownListeners();\n    }\n    if ((this.hiddenInput || this.hiddenInputCountry) && this.telInput.form) {\n      this._initHiddenInputListener();\n    }\n  }\n  //* Update hidden input on form submit.\n  _initHiddenInputListener() {\n    this._handleHiddenInputSubmit = () => {\n      if (this.hiddenInput) {\n        this.hiddenInput.value = this.getNumber();\n      }\n      if (this.hiddenInputCountry) {\n        this.hiddenInputCountry.value = this.getSelectedCountryData().iso2 || \"\";\n      }\n    };\n    this.telInput.form?.addEventListener(\n      \"submit\",\n      this._handleHiddenInputSubmit\n    );\n  }\n  //* initialise the dropdown listeners.\n  _initDropdownListeners() {\n    this._handleLabelClick = (e) => {\n      if (this.dropdownContent.classList.contains(\"iti__hide\")) {\n        this.telInput.focus();\n      } else {\n        e.preventDefault();\n      }\n    };\n    const label = this.telInput.closest(\"label\");\n    if (label) {\n      label.addEventListener(\"click\", this._handleLabelClick);\n    }\n    this._handleClickSelectedCountry = () => {\n      if (this.dropdownContent.classList.contains(\"iti__hide\") && !this.telInput.disabled && !this.telInput.readOnly) {\n        this._openDropdown();\n      }\n    };\n    this.selectedCountry.addEventListener(\"click\", this._handleClickSelectedCountry);\n    this._handleCountryContainerKeydown = (e) => {\n      const isDropdownHidden = this.dropdownContent.classList.contains(\"iti__hide\");\n      if (isDropdownHidden && [\"ArrowUp\", \"ArrowDown\", \" \", \"Enter\"].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n        this._openDropdown();\n      }\n      if (e.key === \"Tab\") {\n        this._closeDropdown();\n      }\n    };\n    this.countryContainer.addEventListener(\n      \"keydown\",\n      this._handleCountryContainerKeydown\n    );\n  }\n  //* Init many requests: utils script / geo ip lookup.\n  _initRequests() {\n    let { loadUtils, initialCountry, geoIpLookup } = this.options;\n    if (loadUtils && !intlTelInput.utils) {\n      this._handlePageLoad = () => {\n        window.removeEventListener(\"load\", this._handlePageLoad);\n        intlTelInput.attachUtils(loadUtils)?.catch(() => {\n        });\n      };\n      if (intlTelInput.documentReady()) {\n        this._handlePageLoad();\n      } else {\n        window.addEventListener(\"load\", this._handlePageLoad);\n      }\n    } else {\n      this.resolveUtilsScriptPromise();\n    }\n    const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\n    if (isAutoCountry && !this.selectedCountryData.iso2) {\n      this._loadAutoCountry();\n    } else {\n      this.resolveAutoCountryPromise();\n    }\n  }\n  //* Perform the geo ip lookup.\n  _loadAutoCountry() {\n    if (intlTelInput.autoCountry) {\n      this.handleAutoCountry();\n    } else if (!intlTelInput.startedLoadingAutoCountry) {\n      intlTelInput.startedLoadingAutoCountry = true;\n      if (typeof this.options.geoIpLookup === \"function\") {\n        this.options.geoIpLookup(\n          (iso2 = \"\") => {\n            const iso2Lower = iso2.toLowerCase();\n            const isValidIso2 = iso2Lower && this._getCountryData(iso2Lower, true);\n            if (isValidIso2) {\n              intlTelInput.autoCountry = iso2Lower;\n              setTimeout(() => forEachInstance(\"handleAutoCountry\"));\n            } else {\n              this._setInitialState(true);\n              forEachInstance(\"rejectAutoCountryPromise\");\n            }\n          },\n          () => {\n            this._setInitialState(true);\n            forEachInstance(\"rejectAutoCountryPromise\");\n          }\n        );\n      }\n    }\n  }\n  _openDropdownWithPlus() {\n    this._openDropdown();\n    this.searchInput.value = \"+\";\n    this._filterCountries(\"\", true);\n  }\n  //* Initialize the tel input listeners.\n  _initTelInputListeners() {\n    const { strictMode, formatAsYouType, separateDialCode, formatOnDisplay, allowDropdown, countrySearch } = this.options;\n    let userOverrideFormatting = false;\n    if (/\\p{L}/u.test(this.telInput.value)) {\n      userOverrideFormatting = true;\n    }\n    this._handleInputEvent = (e) => {\n      if (this.isAndroid && e?.data === \"+\" && separateDialCode && allowDropdown && countrySearch) {\n        const currentCaretPos = this.telInput.selectionStart || 0;\n        const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos - 1);\n        const valueAfterCaret = this.telInput.value.substring(currentCaretPos);\n        this.telInput.value = valueBeforeCaret + valueAfterCaret;\n        this._openDropdownWithPlus();\n        return;\n      }\n      if (this._updateCountryFromNumber(this.telInput.value)) {\n        this._triggerCountryChange();\n      }\n      const isFormattingChar = e?.data && /[^+0-9]/.test(e.data);\n      const isPaste = e?.inputType === \"insertFromPaste\" && this.telInput.value;\n      if (isFormattingChar || isPaste && !strictMode) {\n        userOverrideFormatting = true;\n      } else if (!/[^+0-9]/.test(this.telInput.value)) {\n        userOverrideFormatting = false;\n      }\n      const disableFormatOnSetNumber = e?.detail && e.detail[\"isSetNumber\"] && !formatOnDisplay;\n      if (formatAsYouType && !userOverrideFormatting && !disableFormatOnSetNumber) {\n        const currentCaretPos = this.telInput.selectionStart || 0;\n        const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos);\n        const relevantCharsBeforeCaret = valueBeforeCaret.replace(/[^+0-9]/g, \"\").length;\n        const isDeleteForwards = e?.inputType === \"deleteContentForward\";\n        const formattedValue = this._formatNumberAsYouType();\n        const newCaretPos = translateCursorPosition(relevantCharsBeforeCaret, formattedValue, currentCaretPos, isDeleteForwards);\n        this.telInput.value = formattedValue;\n        this.telInput.setSelectionRange(newCaretPos, newCaretPos);\n      }\n    };\n    this.telInput.addEventListener(\"input\", this._handleInputEvent);\n    if (strictMode || separateDialCode) {\n      this._handleKeydownEvent = (e) => {\n        if (e.key && e.key.length === 1 && !e.altKey && !e.ctrlKey && !e.metaKey) {\n          if (separateDialCode && allowDropdown && countrySearch && e.key === \"+\") {\n            e.preventDefault();\n            this._openDropdownWithPlus();\n            return;\n          }\n          if (strictMode) {\n            const value = this.telInput.value;\n            const alreadyHasPlus = value.charAt(0) === \"+\";\n            const isInitialPlus = !alreadyHasPlus && this.telInput.selectionStart === 0 && e.key === \"+\";\n            const isNumeric = /^[0-9]$/.test(e.key);\n            const isAllowedChar = separateDialCode ? isNumeric : isInitialPlus || isNumeric;\n            const newValue = value.slice(0, this.telInput.selectionStart) + e.key + value.slice(this.telInput.selectionEnd);\n            const newFullNumber = this._getFullNumber(newValue);\n            const coreNumber = intlTelInput.utils.getCoreNumber(newFullNumber, this.selectedCountryData.iso2);\n            const hasExceededMaxLength = this.maxCoreNumberLength && coreNumber.length > this.maxCoreNumberLength;\n            let isChangingDialCode = false;\n            if (alreadyHasPlus) {\n              const currentCountry = this.selectedCountryData.iso2;\n              const newCountry = this._getCountryFromNumber(newFullNumber);\n              isChangingDialCode = newCountry !== currentCountry;\n            }\n            if (!isAllowedChar || hasExceededMaxLength && !isChangingDialCode && !isInitialPlus) {\n              e.preventDefault();\n            }\n          }\n        }\n      };\n      this.telInput.addEventListener(\"keydown\", this._handleKeydownEvent);\n    }\n  }\n  //* Adhere to the input's maxlength attr.\n  _cap(number) {\n    const max = parseInt(this.telInput.getAttribute(\"maxlength\") || \"\", 10);\n    return max && number.length > max ? number.substr(0, max) : number;\n  }\n  //* Trigger a custom event on the input.\n  _trigger(name, detailProps = {}) {\n    const e = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true,\n      detail: detailProps\n    });\n    this.telInput.dispatchEvent(e);\n  }\n  //* Open the dropdown.\n  _openDropdown() {\n    const { fixDropdownWidth, countrySearch } = this.options;\n    if (fixDropdownWidth) {\n      this.dropdownContent.style.width = `${this.telInput.offsetWidth}px`;\n    }\n    this.dropdownContent.classList.remove(\"iti__hide\");\n    this.selectedCountry.setAttribute(\"aria-expanded\", \"true\");\n    this._setDropdownPosition();\n    if (countrySearch) {\n      const firstCountryItem = this.countryList.firstElementChild;\n      if (firstCountryItem) {\n        this._highlightListItem(firstCountryItem, false);\n        this.countryList.scrollTop = 0;\n      }\n      this.searchInput.focus();\n    }\n    this._bindDropdownListeners();\n    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n    this._trigger(\"open:countrydropdown\");\n  }\n  //* Set the dropdown position\n  _setDropdownPosition() {\n    if (this.options.dropdownContainer) {\n      this.options.dropdownContainer.appendChild(this.dropdown);\n    }\n    if (!this.options.useFullscreenPopup) {\n      const inputPosRelativeToVP = this.telInput.getBoundingClientRect();\n      const inputHeight = this.telInput.offsetHeight;\n      if (this.options.dropdownContainer) {\n        this.dropdown.style.top = `${inputPosRelativeToVP.top + inputHeight}px`;\n        this.dropdown.style.left = `${inputPosRelativeToVP.left}px`;\n        this._handleWindowScroll = () => this._closeDropdown();\n        window.addEventListener(\"scroll\", this._handleWindowScroll);\n      }\n    }\n  }\n  //* We only bind dropdown listeners when the dropdown is open.\n  _bindDropdownListeners() {\n    this._handleMouseoverCountryList = (e) => {\n      const listItem = e.target?.closest(\".iti__country\");\n      if (listItem) {\n        this._highlightListItem(listItem, false);\n      }\n    };\n    this.countryList.addEventListener(\n      \"mouseover\",\n      this._handleMouseoverCountryList\n    );\n    this._handleClickCountryList = (e) => {\n      const listItem = e.target?.closest(\".iti__country\");\n      if (listItem) {\n        this._selectListItem(listItem);\n      }\n    };\n    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n    let isOpening = true;\n    this._handleClickOffToClose = () => {\n      if (!isOpening) {\n        this._closeDropdown();\n      }\n      isOpening = false;\n    };\n    document.documentElement.addEventListener(\n      \"click\",\n      this._handleClickOffToClose\n    );\n    let query = \"\";\n    let queryTimer = null;\n    this._handleKeydownOnDropdown = (e) => {\n      if ([\"ArrowUp\", \"ArrowDown\", \"Enter\", \"Escape\"].includes(e.key)) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n          this._handleUpDownKey(e.key);\n        } else if (e.key === \"Enter\") {\n          this._handleEnterKey();\n        } else if (e.key === \"Escape\") {\n          this._closeDropdown();\n        }\n      }\n      if (!this.options.countrySearch && /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n        e.stopPropagation();\n        if (queryTimer) {\n          clearTimeout(queryTimer);\n        }\n        query += e.key.toLowerCase();\n        this._searchForCountry(query);\n        queryTimer = setTimeout(() => {\n          query = \"\";\n        }, 1e3);\n      }\n    };\n    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n    if (this.options.countrySearch) {\n      const doFilter = () => {\n        const inputQuery = this.searchInput.value.trim();\n        if (inputQuery) {\n          this._filterCountries(inputQuery);\n        } else {\n          this._filterCountries(\"\", true);\n        }\n      };\n      let keyupTimer = null;\n      this._handleSearchChange = () => {\n        if (keyupTimer) {\n          clearTimeout(keyupTimer);\n        }\n        keyupTimer = setTimeout(() => {\n          doFilter();\n          keyupTimer = null;\n        }, 100);\n      };\n      this.searchInput.addEventListener(\"input\", this._handleSearchChange);\n      this.searchInput.addEventListener(\"click\", (e) => e.stopPropagation());\n    }\n  }\n  //* Hidden search (countrySearch disabled): Find the first list item whose name starts with the query string.\n  _searchForCountry(query) {\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const startsWith = c.name.substr(0, query.length).toLowerCase() === query;\n      if (startsWith) {\n        const listItem = c.nodeById[this.id];\n        this._highlightListItem(listItem, false);\n        this._scrollTo(listItem);\n        break;\n      }\n    }\n  }\n  //* Country search enabled: Filter the countries according to the search query.\n  _filterCountries(query, isReset = false) {\n    let noCountriesAddedYet = true;\n    this.countryList.innerHTML = \"\";\n    const normalisedQuery = normaliseString(query);\n    for (let i = 0; i < this.countries.length; i++) {\n      const c = this.countries[i];\n      const normalisedCountryName = normaliseString(c.name);\n      const countryInitials = c.name.split(/[^a-zA-ZÀ-ÿа-яА-Я]/).map((word) => word[0]).join(\"\").toLowerCase();\n      const fullDialCode = `+${c.dialCode}`;\n      if (isReset || normalisedCountryName.includes(normalisedQuery) || fullDialCode.includes(normalisedQuery) || c.iso2.includes(normalisedQuery) || countryInitials.includes(normalisedQuery)) {\n        const listItem = c.nodeById[this.id];\n        if (listItem) {\n          this.countryList.appendChild(listItem);\n        }\n        if (noCountriesAddedYet) {\n          this._highlightListItem(listItem, false);\n          noCountriesAddedYet = false;\n        }\n      }\n    }\n    if (noCountriesAddedYet) {\n      this._highlightListItem(null, false);\n    }\n    this.countryList.scrollTop = 0;\n    this._updateSearchResultsText();\n  }\n  //* Update search results text (for a11y).\n  _updateSearchResultsText() {\n    const { i18n } = this.options;\n    const count = this.countryList.childElementCount;\n    let searchText;\n    if (count === 0) {\n      searchText = i18n.zeroSearchResults;\n    } else if (count === 1) {\n      searchText = i18n.oneSearchResult;\n    } else {\n      searchText = i18n.multipleSearchResults.replace(\"${count}\", count.toString());\n    }\n    this.searchResultsA11yText.textContent = searchText;\n  }\n  //* Highlight the next/prev item in the list (and ensure it is visible).\n  _handleUpDownKey(key) {\n    let next = key === \"ArrowUp\" ? this.highlightedItem?.previousElementSibling : this.highlightedItem?.nextElementSibling;\n    if (!next && this.countryList.childElementCount > 1) {\n      next = key === \"ArrowUp\" ? this.countryList.lastElementChild : this.countryList.firstElementChild;\n    }\n    if (next) {\n      this._scrollTo(next);\n      this._highlightListItem(next, false);\n    }\n  }\n  //* Select the currently highlighted item.\n  _handleEnterKey() {\n    if (this.highlightedItem) {\n      this._selectListItem(this.highlightedItem);\n    }\n  }\n  //* Update the input's value to the given val (format first if possible)\n  //* NOTE: this is called from _setInitialState, handleUtils and setNumber.\n  _updateValFromNumber(fullNumber) {\n    let number = fullNumber;\n    if (this.options.formatOnDisplay && intlTelInput.utils && this.selectedCountryData) {\n      const useNational = this.options.nationalMode || number.charAt(0) !== \"+\" && !this.options.separateDialCode;\n      const { NATIONAL, INTERNATIONAL } = intlTelInput.utils.numberFormat;\n      const format = useNational ? NATIONAL : INTERNATIONAL;\n      number = intlTelInput.utils.formatNumber(\n        number,\n        this.selectedCountryData.iso2,\n        format\n      );\n    }\n    number = this._beforeSetNumber(number);\n    this.telInput.value = number;\n  }\n  //* Check if need to select a new country based on the given number\n  //* Note: called from _setInitialState, keyup handler, setNumber.\n  _updateCountryFromNumber(fullNumber) {\n    const iso2 = this._getCountryFromNumber(fullNumber);\n    if (iso2 !== null) {\n      return this._setCountry(iso2);\n    }\n    return false;\n  }\n  _ensureHasDialCode(number) {\n    const { dialCode, nationalPrefix } = this.selectedCountryData;\n    const alreadyHasPlus = number.charAt(0) === \"+\";\n    if (alreadyHasPlus || !dialCode) {\n      return number;\n    }\n    const hasPrefix = nationalPrefix && number.charAt(0) === nationalPrefix && !this.options.separateDialCode;\n    const cleanNumber = hasPrefix ? number.substring(1) : number;\n    return `+${dialCode}${cleanNumber}`;\n  }\n  _getCountryFromNumber(fullNumber) {\n    const plusIndex = fullNumber.indexOf(\"+\");\n    let number = plusIndex ? fullNumber.substring(plusIndex) : fullNumber;\n    const selectedIso2 = this.selectedCountryData.iso2;\n    const selectedDialCode = this.selectedCountryData.dialCode;\n    number = this._ensureHasDialCode(number);\n    const dialCodeMatch = this._getDialCode(number, true);\n    const numeric = getNumeric(number);\n    if (dialCodeMatch) {\n      const dialCodeMatchNumeric = getNumeric(dialCodeMatch);\n      const iso2Codes = this.dialCodeToIso2Map[dialCodeMatchNumeric];\n      if (!selectedIso2 && this.defaultCountry && iso2Codes.includes(this.defaultCountry)) {\n        return this.defaultCountry;\n      }\n      const alreadySelected = selectedIso2 && iso2Codes.includes(selectedIso2) && (numeric.length === dialCodeMatchNumeric.length || !this.selectedCountryData.areaCodes);\n      const isRegionlessNanpNumber = selectedDialCode === \"1\" && isRegionlessNanp(numeric);\n      if (!isRegionlessNanpNumber && !alreadySelected) {\n        for (let j = 0; j < iso2Codes.length; j++) {\n          if (iso2Codes[j]) {\n            return iso2Codes[j];\n          }\n        }\n      }\n    } else if (number.charAt(0) === \"+\" && numeric.length) {\n      return \"\";\n    } else if ((!number || number === \"+\") && !this.selectedCountryData.iso2) {\n      return this.defaultCountry;\n    }\n    return null;\n  }\n  //* Remove highlighting from other list items and highlight the given item.\n  _highlightListItem(listItem, shouldFocus) {\n    const prevItem = this.highlightedItem;\n    if (prevItem) {\n      prevItem.classList.remove(\"iti__highlight\");\n      prevItem.setAttribute(\"aria-selected\", \"false\");\n    }\n    this.highlightedItem = listItem;\n    if (this.highlightedItem) {\n      this.highlightedItem.classList.add(\"iti__highlight\");\n      this.highlightedItem.setAttribute(\"aria-selected\", \"true\");\n      const activeDescendant = this.highlightedItem.getAttribute(\"id\") || \"\";\n      this.selectedCountry.setAttribute(\"aria-activedescendant\", activeDescendant);\n      if (this.options.countrySearch) {\n        this.searchInput.setAttribute(\"aria-activedescendant\", activeDescendant);\n      }\n    }\n    if (shouldFocus) {\n      this.highlightedItem.focus();\n    }\n  }\n  //* Find the country data for the given iso2 code\n  //* the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array\n  _getCountryData(iso2, allowFail) {\n    for (let i = 0; i < this.countries.length; i++) {\n      if (this.countries[i].iso2 === iso2) {\n        return this.countries[i];\n      }\n    }\n    if (allowFail) {\n      return null;\n    }\n    throw new Error(`No country data for '${iso2}'`);\n  }\n  //* Update the selected country, dial code (if separateDialCode), placeholder, title, and active list item.\n  //* Note: called from _setInitialState, _updateCountryFromNumber, _selectListItem, setCountry.\n  _setCountry(iso2) {\n    const { separateDialCode, showFlags, i18n } = this.options;\n    const prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n    this.selectedCountryData = iso2 ? this._getCountryData(iso2, false) || {} : {};\n    if (this.selectedCountryData.iso2) {\n      this.defaultCountry = this.selectedCountryData.iso2;\n    }\n    if (this.selectedCountryInner) {\n      let flagClass = \"\";\n      let a11yText = \"\";\n      if (iso2 && showFlags) {\n        flagClass = `iti__flag iti__${iso2}`;\n        a11yText = `${this.selectedCountryData.name} +${this.selectedCountryData.dialCode}`;\n      } else {\n        flagClass = \"iti__flag iti__globe\";\n        a11yText = i18n.noCountrySelected;\n      }\n      this.selectedCountryInner.className = flagClass;\n      this.selectedCountryA11yText.textContent = a11yText;\n    }\n    this._setSelectedCountryTitleAttribute(iso2, separateDialCode);\n    if (separateDialCode) {\n      const dialCode = this.selectedCountryData.dialCode ? `+${this.selectedCountryData.dialCode}` : \"\";\n      this.selectedDialCode.innerHTML = dialCode;\n      this._updateInputPadding();\n    }\n    this._updatePlaceholder();\n    this._updateMaxLength();\n    return prevCountry.iso2 !== iso2;\n  }\n  //* Update the input padding to make space for the selected country/dial code.\n  _updateInputPadding() {\n    if (this.selectedCountry) {\n      const selectedCountryWidth = this.selectedCountry.offsetWidth || this._getHiddenSelectedCountryWidth();\n      const inputPadding = selectedCountryWidth + 6;\n      if (this.showSelectedCountryOnLeft) {\n        this.telInput.style.paddingLeft = `${inputPadding}px`;\n      } else {\n        this.telInput.style.paddingRight = `${inputPadding}px`;\n      }\n    }\n  }\n  //* Update the maximum valid number length for the currently selected country.\n  _updateMaxLength() {\n    const { strictMode, placeholderNumberType, validationNumberTypes } = this.options;\n    const { iso2 } = this.selectedCountryData;\n    if (strictMode && intlTelInput.utils) {\n      if (iso2) {\n        const numberType = intlTelInput.utils.numberType[placeholderNumberType];\n        let exampleNumber = intlTelInput.utils.getExampleNumber(\n          iso2,\n          false,\n          numberType,\n          true\n        );\n        let validNumber = exampleNumber;\n        while (intlTelInput.utils.isPossibleNumber(exampleNumber, iso2, validationNumberTypes)) {\n          validNumber = exampleNumber;\n          exampleNumber += \"0\";\n        }\n        const coreNumber = intlTelInput.utils.getCoreNumber(validNumber, iso2);\n        this.maxCoreNumberLength = coreNumber.length;\n        if (iso2 === \"by\") {\n          this.maxCoreNumberLength = coreNumber.length + 1;\n        }\n      } else {\n        this.maxCoreNumberLength = null;\n      }\n    }\n  }\n  _setSelectedCountryTitleAttribute(iso2 = null, separateDialCode) {\n    if (!this.selectedCountry) {\n      return;\n    }\n    let title;\n    if (iso2 && !separateDialCode) {\n      title = `${this.selectedCountryData.name}: +${this.selectedCountryData.dialCode}`;\n    } else if (iso2) {\n      title = this.selectedCountryData.name;\n    } else {\n      title = \"Unknown\";\n    }\n    this.selectedCountry.setAttribute(\"title\", title);\n  }\n  //* When the input is in a hidden container during initialisation, we must inject some markup\n  //* into the end of the DOM to calculate the correct offsetWidth.\n  //* NOTE: this is only used when separateDialCode is enabled, so countryContainer and selectedCountry\n  //* will definitely exist.\n  _getHiddenSelectedCountryWidth() {\n    if (this.telInput.parentNode) {\n      const containerClone = this.telInput.parentNode.cloneNode(false);\n      containerClone.style.visibility = \"hidden\";\n      document.body.appendChild(containerClone);\n      const countryContainerClone = this.countryContainer.cloneNode();\n      containerClone.appendChild(countryContainerClone);\n      const selectedCountryClone = this.selectedCountry.cloneNode(true);\n      countryContainerClone.appendChild(selectedCountryClone);\n      const width = selectedCountryClone.offsetWidth;\n      document.body.removeChild(containerClone);\n      return width;\n    }\n    return 0;\n  }\n  //* Update the input placeholder to an example number from the currently selected country.\n  _updatePlaceholder() {\n    const {\n      autoPlaceholder,\n      placeholderNumberType,\n      nationalMode,\n      customPlaceholder\n    } = this.options;\n    const shouldSetPlaceholder = autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && autoPlaceholder === \"polite\";\n    if (intlTelInput.utils && shouldSetPlaceholder) {\n      const numberType = intlTelInput.utils.numberType[placeholderNumberType];\n      let placeholder = this.selectedCountryData.iso2 ? intlTelInput.utils.getExampleNumber(\n        this.selectedCountryData.iso2,\n        nationalMode,\n        numberType\n      ) : \"\";\n      placeholder = this._beforeSetNumber(placeholder);\n      if (typeof customPlaceholder === \"function\") {\n        placeholder = customPlaceholder(placeholder, this.selectedCountryData);\n      }\n      this.telInput.setAttribute(\"placeholder\", placeholder);\n    }\n  }\n  //* Called when the user selects a list item from the dropdown.\n  _selectListItem(listItem) {\n    const countryChanged = this._setCountry(\n      listItem.getAttribute(\"data-country-code\")\n    );\n    this._closeDropdown();\n    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"));\n    this.telInput.focus();\n    if (countryChanged) {\n      this._triggerCountryChange();\n    }\n  }\n  //* Close the dropdown and unbind any listeners.\n  _closeDropdown() {\n    this.dropdownContent.classList.add(\"iti__hide\");\n    this.selectedCountry.setAttribute(\"aria-expanded\", \"false\");\n    this.selectedCountry.removeAttribute(\"aria-activedescendant\");\n    if (this.highlightedItem) {\n      this.highlightedItem.setAttribute(\"aria-selected\", \"false\");\n    }\n    if (this.options.countrySearch) {\n      this.searchInput.removeAttribute(\"aria-activedescendant\");\n    }\n    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n    if (this.options.countrySearch) {\n      this.searchInput.removeEventListener(\"input\", this._handleSearchChange);\n    }\n    document.documentElement.removeEventListener(\n      \"click\",\n      this._handleClickOffToClose\n    );\n    this.countryList.removeEventListener(\n      \"mouseover\",\n      this._handleMouseoverCountryList\n    );\n    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n    if (this.options.dropdownContainer) {\n      if (!this.options.useFullscreenPopup) {\n        window.removeEventListener(\"scroll\", this._handleWindowScroll);\n      }\n      if (this.dropdown.parentNode) {\n        this.dropdown.parentNode.removeChild(this.dropdown);\n      }\n    }\n    if (this._handlePageLoad) {\n      window.removeEventListener(\"load\", this._handlePageLoad);\n    }\n    this._trigger(\"close:countrydropdown\");\n  }\n  //* Check if an element is visible within it's container, else scroll until it is.\n  _scrollTo(element) {\n    const container = this.countryList;\n    const scrollTop = document.documentElement.scrollTop;\n    const containerHeight = container.offsetHeight;\n    const containerTop = container.getBoundingClientRect().top + scrollTop;\n    const containerBottom = containerTop + containerHeight;\n    const elementHeight = element.offsetHeight;\n    const elementTop = element.getBoundingClientRect().top + scrollTop;\n    const elementBottom = elementTop + elementHeight;\n    const newScrollTop = elementTop - containerTop + container.scrollTop;\n    if (elementTop < containerTop) {\n      container.scrollTop = newScrollTop;\n    } else if (elementBottom > containerBottom) {\n      const heightDifference = containerHeight - elementHeight;\n      container.scrollTop = newScrollTop - heightDifference;\n    }\n  }\n  //* Replace any existing dial code with the new one\n  //* Note: called from _selectListItem and setCountry\n  _updateDialCode(newDialCodeBare) {\n    const inputVal = this.telInput.value;\n    const newDialCode = `+${newDialCodeBare}`;\n    let newNumber;\n    if (inputVal.charAt(0) === \"+\") {\n      const prevDialCode = this._getDialCode(inputVal);\n      if (prevDialCode) {\n        newNumber = inputVal.replace(prevDialCode, newDialCode);\n      } else {\n        newNumber = newDialCode;\n      }\n      this.telInput.value = newNumber;\n    }\n  }\n  //* Try and extract a valid international dial code from a full telephone number.\n  //* Note: returns the raw string inc plus character and any whitespace/dots etc.\n  _getDialCode(number, includeAreaCode) {\n    let dialCode = \"\";\n    if (number.charAt(0) === \"+\") {\n      let numericChars = \"\";\n      for (let i = 0; i < number.length; i++) {\n        const c = number.charAt(i);\n        if (!isNaN(parseInt(c, 10))) {\n          numericChars += c;\n          if (includeAreaCode) {\n            if (this.dialCodeToIso2Map[numericChars]) {\n              dialCode = number.substr(0, i + 1);\n            }\n          } else {\n            if (this.dialCodes[numericChars]) {\n              dialCode = number.substr(0, i + 1);\n              break;\n            }\n          }\n          if (numericChars.length === this.dialCodeMaxLen) {\n            break;\n          }\n        }\n      }\n    }\n    return dialCode;\n  }\n  //* Get the input val, adding the dial code if separateDialCode is enabled.\n  _getFullNumber(overrideVal) {\n    const val = overrideVal || this.telInput.value.trim();\n    const { dialCode } = this.selectedCountryData;\n    let prefix;\n    const numericVal = getNumeric(val);\n    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n      prefix = `+${dialCode}`;\n    } else {\n      prefix = \"\";\n    }\n    return prefix + val;\n  }\n  //* Remove the dial code if separateDialCode is enabled also cap the length if the input has a maxlength attribute\n  _beforeSetNumber(fullNumber) {\n    let number = fullNumber;\n    if (this.options.separateDialCode) {\n      let dialCode = this._getDialCode(number);\n      if (dialCode) {\n        dialCode = `+${this.selectedCountryData.dialCode}`;\n        const start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n        number = number.substr(start);\n      }\n    }\n    return this._cap(number);\n  }\n  //* Trigger the 'countrychange' event.\n  _triggerCountryChange() {\n    this._trigger(\"countrychange\");\n  }\n  //* Format the number as the user types.\n  _formatNumberAsYouType() {\n    const val = this._getFullNumber();\n    const result = intlTelInput.utils ? intlTelInput.utils.formatNumberAsYouType(val, this.selectedCountryData.iso2) : val;\n    const { dialCode } = this.selectedCountryData;\n    if (this.options.separateDialCode && this.telInput.value.charAt(0) !== \"+\" && result.includes(`+${dialCode}`)) {\n      const afterDialCode = result.split(`+${dialCode}`)[1] || \"\";\n      return afterDialCode.trim();\n    }\n    return result;\n  }\n  //**************************\n  //*  SECRET PUBLIC METHODS\n  //**************************\n  //* This is called when the geoip call returns.\n  handleAutoCountry() {\n    if (this.options.initialCountry === \"auto\" && intlTelInput.autoCountry) {\n      this.defaultCountry = intlTelInput.autoCountry;\n      const hasSelectedCountryOrGlobe = this.selectedCountryData.iso2 || this.selectedCountryInner.classList.contains(\"iti__globe\");\n      if (!hasSelectedCountryOrGlobe) {\n        this.setCountry(this.defaultCountry);\n      }\n      this.resolveAutoCountryPromise();\n    }\n  }\n  //* This is called when the utils request completes.\n  handleUtils() {\n    if (intlTelInput.utils) {\n      if (this.telInput.value) {\n        this._updateValFromNumber(this.telInput.value);\n      }\n      if (this.selectedCountryData.iso2) {\n        this._updatePlaceholder();\n        this._updateMaxLength();\n      }\n    }\n    this.resolveUtilsScriptPromise();\n  }\n  //********************\n  //*  PUBLIC METHODS\n  //********************\n  //* Remove plugin.\n  destroy() {\n    const { allowDropdown, separateDialCode } = this.options;\n    if (allowDropdown) {\n      this._closeDropdown();\n      this.selectedCountry.removeEventListener(\n        \"click\",\n        this._handleClickSelectedCountry\n      );\n      this.countryContainer.removeEventListener(\n        \"keydown\",\n        this._handleCountryContainerKeydown\n      );\n      const label = this.telInput.closest(\"label\");\n      if (label) {\n        label.removeEventListener(\"click\", this._handleLabelClick);\n      }\n    }\n    const { form } = this.telInput;\n    if (this._handleHiddenInputSubmit && form) {\n      form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n    }\n    this.telInput.removeEventListener(\"input\", this._handleInputEvent);\n    if (this._handleKeydownEvent) {\n      this.telInput.removeEventListener(\"keydown\", this._handleKeydownEvent);\n    }\n    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n    if (separateDialCode) {\n      if (this.isRTL) {\n        this.telInput.style.paddingRight = this.originalPaddingRight;\n      } else {\n        this.telInput.style.paddingLeft = this.originalPaddingLeft;\n      }\n    }\n    const wrapper = this.telInput.parentNode;\n    wrapper?.parentNode?.insertBefore(this.telInput, wrapper);\n    wrapper?.parentNode?.removeChild(wrapper);\n    delete intlTelInput.instances[this.id];\n  }\n  //* Get the extension from the current number.\n  getExtension() {\n    if (intlTelInput.utils) {\n      return intlTelInput.utils.getExtension(\n        this._getFullNumber(),\n        this.selectedCountryData.iso2\n      );\n    }\n    return \"\";\n  }\n  //* Format the number to the given format.\n  getNumber(format) {\n    if (intlTelInput.utils) {\n      const { iso2 } = this.selectedCountryData;\n      return intlTelInput.utils.formatNumber(\n        this._getFullNumber(),\n        iso2,\n        format\n      );\n    }\n    return \"\";\n  }\n  //* Get the type of the entered number e.g. landline/mobile.\n  getNumberType() {\n    if (intlTelInput.utils) {\n      return intlTelInput.utils.getNumberType(\n        this._getFullNumber(),\n        this.selectedCountryData.iso2\n      );\n    }\n    return -99;\n  }\n  //* Get the country data for the currently selected country.\n  getSelectedCountryData() {\n    return this.selectedCountryData;\n  }\n  //* Get the validation error.\n  getValidationError() {\n    if (intlTelInput.utils) {\n      const { iso2 } = this.selectedCountryData;\n      return intlTelInput.utils.getValidationError(this._getFullNumber(), iso2);\n    }\n    return -99;\n  }\n  //* Validate the input val\n  isValidNumber() {\n    if (!this.selectedCountryData.iso2) {\n      return false;\n    }\n    const val = this._getFullNumber();\n    const alphaCharPosition = val.search(/\\p{L}/u);\n    if (alphaCharPosition > -1) {\n      const beforeAlphaChar = val.substring(0, alphaCharPosition);\n      const beforeAlphaIsValid = this._utilsIsPossibleNumber(beforeAlphaChar);\n      const isValid = this._utilsIsPossibleNumber(val);\n      return beforeAlphaIsValid && isValid;\n    }\n    return this._utilsIsPossibleNumber(val);\n  }\n  _utilsIsPossibleNumber(val) {\n    return intlTelInput.utils ? intlTelInput.utils.isPossibleNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\n  }\n  //* Validate the input val (precise)\n  isValidNumberPrecise() {\n    if (!this.selectedCountryData.iso2) {\n      return false;\n    }\n    const val = this._getFullNumber();\n    const alphaCharPosition = val.search(/\\p{L}/u);\n    if (alphaCharPosition > -1) {\n      const beforeAlphaChar = val.substring(0, alphaCharPosition);\n      const beforeAlphaIsValid = this._utilsIsValidNumber(beforeAlphaChar);\n      const isValid = this._utilsIsValidNumber(val);\n      return beforeAlphaIsValid && isValid;\n    }\n    return this._utilsIsValidNumber(val);\n  }\n  _utilsIsValidNumber(val) {\n    return intlTelInput.utils ? intlTelInput.utils.isValidNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\n  }\n  //* Update the selected country, and update the input val accordingly.\n  setCountry(iso2) {\n    const iso2Lower = iso2?.toLowerCase();\n    const currentCountry = this.selectedCountryData.iso2;\n    const isCountryChange = iso2 && iso2Lower !== currentCountry || !iso2 && currentCountry;\n    if (isCountryChange) {\n      this._setCountry(iso2Lower);\n      this._updateDialCode(this.selectedCountryData.dialCode);\n      this._triggerCountryChange();\n    }\n  }\n  //* Set the input value and update the country.\n  setNumber(number) {\n    const countryChanged = this._updateCountryFromNumber(number);\n    this._updateValFromNumber(number);\n    if (countryChanged) {\n      this._triggerCountryChange();\n    }\n    this._trigger(\"input\", { isSetNumber: true });\n  }\n  //* Set the placeholder number typ\n  setPlaceholderNumberType(type) {\n    this.options.placeholderNumberType = type;\n    this._updatePlaceholder();\n  }\n  setDisabled(disabled) {\n    this.telInput.disabled = disabled;\n    if (disabled) {\n      this.selectedCountry.setAttribute(\"disabled\", \"true\");\n    } else {\n      this.selectedCountry.removeAttribute(\"disabled\");\n    }\n  }\n};\nvar attachUtils = (source) => {\n  if (!intlTelInput.utils && !intlTelInput.startedLoadingUtilsScript) {\n    let loadCall;\n    if (typeof source === \"function\") {\n      try {\n        loadCall = Promise.resolve(source());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      return Promise.reject(new TypeError(`The argument passed to attachUtils must be a function that returns a promise for the utilities module, not ${typeof source}`));\n    }\n    intlTelInput.startedLoadingUtilsScript = true;\n    return loadCall.then((module) => {\n      const utils2 = module?.default;\n      if (!utils2 || typeof utils2 !== \"object\") {\n        throw new TypeError(\"The loader function passed to attachUtils did not resolve to a module object with utils as its default export.\");\n      }\n      intlTelInput.utils = utils2;\n      forEachInstance(\"handleUtils\");\n      return true;\n    }).catch((error) => {\n      forEachInstance(\"rejectUtilsScriptPromise\", error);\n      throw error;\n    });\n  }\n  return null;\n};\nvar intlTelInput = Object.assign(\n  (input, options) => {\n    const iti = new Iti(input, options);\n    iti._init();\n    input.setAttribute(\"data-intl-tel-input-id\", iti.id.toString());\n    intlTelInput.instances[iti.id] = iti;\n    return iti;\n  },\n  {\n    defaults,\n    //* Using a static var like this allows us to mock it in the tests.\n    documentReady: () => document.readyState === \"complete\",\n    //* Get the country data object.\n    getCountryData: () => data_default,\n    //* A getter for the plugin instance.\n    getInstance: (input) => {\n      const id2 = input.getAttribute(\"data-intl-tel-input-id\");\n      return id2 ? intlTelInput.instances[id2] : null;\n    },\n    //* A map from instance ID to instance object.\n    instances: {},\n    attachUtils,\n    startedLoadingUtilsScript: false,\n    startedLoadingAutoCountry: false,\n    version: \"25.2.0\"\n  }\n);\nvar intl_tel_input_default = intlTelInput;\n\n// build/js/utils.js\n(function() {\n  var k = this || self;\n  function m(a, b) {\n    a = a.split(\".\");\n    var c = k;\n    a[0] in c || \"undefined\" == typeof c.execScript || c.execScript(\"var \" + a[0]);\n    for (var d; a.length && (d = a.shift()); ) a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;\n  }\n  function n(a, b) {\n    function c() {\n    }\n    c.prototype = b.prototype;\n    a.ma = b.prototype;\n    a.prototype = new c();\n    a.prototype.constructor = a;\n    a.sa = function(d, e, f) {\n      for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++) g[h - 2] = arguments[h];\n      return b.prototype[e].apply(d, g);\n    };\n  }\n  ;\n  function aa(a) {\n    const b = [];\n    let c = 0;\n    for (const d in a) b[c++] = a[d];\n    return b;\n  }\n  ;\n  var da = class {\n    constructor(a) {\n      if (ba !== ba) throw Error(\"SafeUrl is not meant to be built directly\");\n      this.g = a;\n    }\n    toString() {\n      return this.g.toString();\n    }\n  }, ba = {};\n  new da(\"about:invalid#zClosurez\");\n  new da(\"about:blank\");\n  const ea = {};\n  class fa {\n    constructor() {\n      if (ea !== ea) throw Error(\"SafeStyle is not meant to be built directly\");\n    }\n    toString() {\n      return \"\".toString();\n    }\n  }\n  new fa();\n  const ha = {};\n  class ia {\n    constructor() {\n      if (ha !== ha) throw Error(\"SafeStyleSheet is not meant to be built directly\");\n    }\n    toString() {\n      return \"\".toString();\n    }\n  }\n  new ia();\n  const ja = {};\n  class ka {\n    constructor() {\n      var a = k.trustedTypes && k.trustedTypes.emptyHTML || \"\";\n      if (ja !== ja) throw Error(\"SafeHtml is not meant to be built directly\");\n      this.g = a;\n    }\n    toString() {\n      return this.g.toString();\n    }\n  }\n  new ka();\n  function la(a, b) {\n    this.g = a;\n    this.l = !!b.aa;\n    this.h = b.i;\n    this.s = b.type;\n    this.o = false;\n    switch (this.h) {\n      case ma:\n      case na:\n      case oa:\n      case pa:\n      case qa:\n      case ra:\n      case sa:\n        this.o = true;\n    }\n    this.j = b.defaultValue;\n  }\n  var sa = 1, ra = 2, ma = 3, na = 4, oa = 6, pa = 16, qa = 18;\n  function ta(a, b) {\n    this.h = a;\n    this.g = {};\n    for (a = 0; a < b.length; a++) {\n      var c = b[a];\n      this.g[c.g] = c;\n    }\n  }\n  function ua(a) {\n    a = aa(a.g);\n    a.sort(function(b, c) {\n      return b.g - c.g;\n    });\n    return a;\n  }\n  ;\n  function p() {\n    this.h = {};\n    this.j = this.m().g;\n    this.g = this.l = null;\n  }\n  p.prototype.has = function(a) {\n    return q(this, a.g);\n  };\n  p.prototype.get = function(a, b) {\n    return r(this, a.g, b);\n  };\n  p.prototype.set = function(a, b) {\n    t(this, a.g, b);\n  };\n  p.prototype.add = function(a, b) {\n    va(this, a.g, b);\n  };\n  function wa(a, b) {\n    for (var c = ua(a.m()), d = 0; d < c.length; d++) {\n      var e = c[d], f = e.g;\n      if (q(b, f)) {\n        a.g && delete a.g[e.g];\n        var g = 11 == e.h || 10 == e.h;\n        if (e.l) {\n          e = u(b, f);\n          for (var h = 0; h < e.length; h++) va(a, f, g ? e[h].clone() : e[h]);\n        } else e = v(b, f), g ? (g = v(a, f)) ? wa(g, e) : t(a, f, e.clone()) : t(a, f, e);\n      }\n    }\n  }\n  p.prototype.clone = function() {\n    var a = new this.constructor();\n    a != this && (a.h = {}, a.g && (a.g = {}), wa(a, this));\n    return a;\n  };\n  function q(a, b) {\n    return null != a.h[b];\n  }\n  function v(a, b) {\n    var c = a.h[b];\n    if (null == c) return null;\n    if (a.l) {\n      if (!(b in a.g)) {\n        var d = a.l, e = a.j[b];\n        if (null != c) if (e.l) {\n          for (var f = [], g = 0; g < c.length; g++) f[g] = d.h(e, c[g]);\n          c = f;\n        } else c = d.h(e, c);\n        return a.g[b] = c;\n      }\n      return a.g[b];\n    }\n    return c;\n  }\n  function r(a, b, c) {\n    var d = v(a, b);\n    return a.j[b].l ? d[c || 0] : d;\n  }\n  function w(a, b) {\n    if (q(a, b)) a = r(a, b);\n    else a: {\n      a = a.j[b];\n      if (void 0 === a.j) if (b = a.s, b === Boolean) a.j = false;\n      else if (b === Number) a.j = 0;\n      else if (b === String) a.j = a.o ? \"0\" : \"\";\n      else {\n        a = new b();\n        break a;\n      }\n      a = a.j;\n    }\n    return a;\n  }\n  function u(a, b) {\n    return v(a, b) || [];\n  }\n  function x(a, b) {\n    return a.j[b].l ? q(a, b) ? a.h[b].length : 0 : q(a, b) ? 1 : 0;\n  }\n  function t(a, b, c) {\n    a.h[b] = c;\n    a.g && (a.g[b] = c);\n  }\n  function va(a, b, c) {\n    a.h[b] || (a.h[b] = []);\n    a.h[b].push(c);\n    a.g && delete a.g[b];\n  }\n  function y(a, b) {\n    var c = [], d;\n    for (d in b) 0 != d && c.push(new la(d, b[d]));\n    return new ta(a, c);\n  }\n  ;\n  function z() {\n  }\n  z.prototype.g = function(a) {\n    new a.h();\n    throw Error(\"Unimplemented\");\n  };\n  z.prototype.h = function(a, b) {\n    if (11 == a.h || 10 == a.h) return b instanceof p ? b : this.g(a.s.prototype.m(), b);\n    if (14 == a.h) return \"string\" === typeof b && xa.test(b) && (a = Number(b), 0 < a) ? a : b;\n    if (!a.o) return b;\n    a = a.s;\n    if (a === String) {\n      if (\"number\" === typeof b) return String(b);\n    } else if (a === Number && \"string\" === typeof b && (\"Infinity\" === b || \"-Infinity\" === b || \"NaN\" === b || xa.test(b))) return Number(b);\n    return b;\n  };\n  var xa = /^-?[0-9]+$/;\n  function B() {\n  }\n  n(B, z);\n  B.prototype.g = function(a, b) {\n    a = new a.h();\n    a.l = this;\n    a.h = b;\n    a.g = {};\n    return a;\n  };\n  function C() {\n  }\n  n(C, B);\n  C.prototype.h = function(a, b) {\n    return 8 == a.h ? !!b : z.prototype.h.apply(this, arguments);\n  };\n  C.prototype.g = function(a, b) {\n    return C.ma.g.call(this, a, b);\n  };\n  function D(a, b) {\n    null != a && this.g.apply(this, arguments);\n  }\n  D.prototype.h = \"\";\n  D.prototype.set = function(a) {\n    this.h = \"\" + a;\n  };\n  D.prototype.g = function(a, b, c) {\n    this.h += String(a);\n    if (null != b) for (let d = 1; d < arguments.length; d++) this.h += arguments[d];\n    return this;\n  };\n  function E(a) {\n    a.h = \"\";\n  }\n  D.prototype.toString = function() {\n    return this.h;\n  };\n  function F() {\n    p.call(this);\n  }\n  n(F, p);\n  var ya = null;\n  function G() {\n    p.call(this);\n  }\n  n(G, p);\n  var za = null;\n  function H() {\n    p.call(this);\n  }\n  n(H, p);\n  var Aa = null;\n  F.prototype.m = function() {\n    var a = ya;\n    a || (ya = a = y(F, { 0: { name: \"NumberFormat\", ia: \"i18n.phonenumbers.NumberFormat\" }, 1: { name: \"pattern\", required: true, i: 9, type: String }, 2: { name: \"format\", required: true, i: 9, type: String }, 3: { name: \"leading_digits_pattern\", aa: true, i: 9, type: String }, 4: { name: \"national_prefix_formatting_rule\", i: 9, type: String }, 6: { name: \"national_prefix_optional_when_formatting\", i: 8, defaultValue: false, type: Boolean }, 5: { name: \"domestic_carrier_code_formatting_rule\", i: 9, type: String } }));\n    return a;\n  };\n  F.m = F.prototype.m;\n  G.prototype.m = function() {\n    var a = za;\n    a || (za = a = y(G, { 0: { name: \"PhoneNumberDesc\", ia: \"i18n.phonenumbers.PhoneNumberDesc\" }, 2: { name: \"national_number_pattern\", i: 9, type: String }, 9: { name: \"possible_length\", aa: true, i: 5, type: Number }, 10: { name: \"possible_length_local_only\", aa: true, i: 5, type: Number }, 6: { name: \"example_number\", i: 9, type: String } }));\n    return a;\n  };\n  G.m = G.prototype.m;\n  H.prototype.m = function() {\n    var a = Aa;\n    a || (Aa = a = y(H, {\n      0: { name: \"PhoneMetadata\", ia: \"i18n.phonenumbers.PhoneMetadata\" },\n      1: { name: \"general_desc\", i: 11, type: G },\n      2: { name: \"fixed_line\", i: 11, type: G },\n      3: { name: \"mobile\", i: 11, type: G },\n      4: { name: \"toll_free\", i: 11, type: G },\n      5: { name: \"premium_rate\", i: 11, type: G },\n      6: { name: \"shared_cost\", i: 11, type: G },\n      7: { name: \"personal_number\", i: 11, type: G },\n      8: { name: \"voip\", i: 11, type: G },\n      21: { name: \"pager\", i: 11, type: G },\n      25: { name: \"uan\", i: 11, type: G },\n      27: { name: \"emergency\", i: 11, type: G },\n      28: { name: \"voicemail\", i: 11, type: G },\n      29: { name: \"short_code\", i: 11, type: G },\n      30: { name: \"standard_rate\", i: 11, type: G },\n      31: { name: \"carrier_specific\", i: 11, type: G },\n      33: { name: \"sms_services\", i: 11, type: G },\n      24: { name: \"no_international_dialling\", i: 11, type: G },\n      9: { name: \"id\", required: true, i: 9, type: String },\n      10: { name: \"country_code\", i: 5, type: Number },\n      11: { name: \"international_prefix\", i: 9, type: String },\n      17: { name: \"preferred_international_prefix\", i: 9, type: String },\n      12: { name: \"national_prefix\", i: 9, type: String },\n      13: { name: \"preferred_extn_prefix\", i: 9, type: String },\n      15: {\n        name: \"national_prefix_for_parsing\",\n        i: 9,\n        type: String\n      },\n      16: { name: \"national_prefix_transform_rule\", i: 9, type: String },\n      18: { name: \"same_mobile_and_fixed_line_pattern\", i: 8, defaultValue: false, type: Boolean },\n      19: { name: \"number_format\", aa: true, i: 11, type: F },\n      20: { name: \"intl_number_format\", aa: true, i: 11, type: F },\n      22: { name: \"main_country_for_code\", i: 8, defaultValue: false, type: Boolean },\n      23: { name: \"leading_digits\", i: 9, type: String }\n    }));\n    return a;\n  };\n  H.m = H.prototype.m;\n  function I() {\n    p.call(this);\n  }\n  n(I, p);\n  var Ba = null, Ca = { ra: 0, qa: 1, pa: 5, oa: 10, na: 20 };\n  I.prototype.m = function() {\n    var a = Ba;\n    a || (Ba = a = y(I, { 0: { name: \"PhoneNumber\", ia: \"i18n.phonenumbers.PhoneNumber\" }, 1: { name: \"country_code\", required: true, i: 5, type: Number }, 2: { name: \"national_number\", required: true, i: 4, type: Number }, 3: { name: \"extension\", i: 9, type: String }, 4: { name: \"italian_leading_zero\", i: 8, type: Boolean }, 8: { name: \"number_of_leading_zeros\", i: 5, defaultValue: 1, type: Number }, 5: { name: \"raw_input\", i: 9, type: String }, 6: { name: \"country_code_source\", i: 14, defaultValue: 0, type: Ca }, 7: {\n      name: \"preferred_domestic_carrier_code\",\n      i: 9,\n      type: String\n    } }));\n    return a;\n  };\n  I.ctor = I;\n  I.ctor.m = I.prototype.m;\n  var J = {\n    1: \"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \"),\n    7: [\"RU\", \"KZ\"],\n    20: [\"EG\"],\n    27: [\"ZA\"],\n    30: [\"GR\"],\n    31: [\"NL\"],\n    32: [\"BE\"],\n    33: [\"FR\"],\n    34: [\"ES\"],\n    36: [\"HU\"],\n    39: [\"IT\", \"VA\"],\n    40: [\"RO\"],\n    41: [\"CH\"],\n    43: [\"AT\"],\n    44: [\"GB\", \"GG\", \"IM\", \"JE\"],\n    45: [\"DK\"],\n    46: [\"SE\"],\n    47: [\"NO\", \"SJ\"],\n    48: [\"PL\"],\n    49: [\"DE\"],\n    51: [\"PE\"],\n    52: [\"MX\"],\n    53: [\"CU\"],\n    54: [\"AR\"],\n    55: [\"BR\"],\n    56: [\"CL\"],\n    57: [\"CO\"],\n    58: [\"VE\"],\n    60: [\"MY\"],\n    61: [\"AU\", \"CC\", \"CX\"],\n    62: [\"ID\"],\n    63: [\"PH\"],\n    64: [\"NZ\"],\n    65: [\"SG\"],\n    66: [\"TH\"],\n    81: [\"JP\"],\n    82: [\"KR\"],\n    84: [\"VN\"],\n    86: [\"CN\"],\n    90: [\"TR\"],\n    91: [\"IN\"],\n    92: [\"PK\"],\n    93: [\"AF\"],\n    94: [\"LK\"],\n    95: [\"MM\"],\n    98: [\"IR\"],\n    211: [\"SS\"],\n    212: [\"MA\", \"EH\"],\n    213: [\"DZ\"],\n    216: [\"TN\"],\n    218: [\"LY\"],\n    220: [\"GM\"],\n    221: [\"SN\"],\n    222: [\"MR\"],\n    223: [\"ML\"],\n    224: [\"GN\"],\n    225: [\"CI\"],\n    226: [\"BF\"],\n    227: [\"NE\"],\n    228: [\"TG\"],\n    229: [\"BJ\"],\n    230: [\"MU\"],\n    231: [\"LR\"],\n    232: [\"SL\"],\n    233: [\"GH\"],\n    234: [\"NG\"],\n    235: [\"TD\"],\n    236: [\"CF\"],\n    237: [\"CM\"],\n    238: [\"CV\"],\n    239: [\"ST\"],\n    240: [\"GQ\"],\n    241: [\"GA\"],\n    242: [\"CG\"],\n    243: [\"CD\"],\n    244: [\"AO\"],\n    245: [\"GW\"],\n    246: [\"IO\"],\n    247: [\"AC\"],\n    248: [\"SC\"],\n    249: [\"SD\"],\n    250: [\"RW\"],\n    251: [\"ET\"],\n    252: [\"SO\"],\n    253: [\"DJ\"],\n    254: [\"KE\"],\n    255: [\"TZ\"],\n    256: [\"UG\"],\n    257: [\"BI\"],\n    258: [\"MZ\"],\n    260: [\"ZM\"],\n    261: [\"MG\"],\n    262: [\"RE\", \"YT\"],\n    263: [\"ZW\"],\n    264: [\"NA\"],\n    265: [\"MW\"],\n    266: [\"LS\"],\n    267: [\"BW\"],\n    268: [\"SZ\"],\n    269: [\"KM\"],\n    290: [\"SH\", \"TA\"],\n    291: [\"ER\"],\n    297: [\"AW\"],\n    298: [\"FO\"],\n    299: [\"GL\"],\n    350: [\"GI\"],\n    351: [\"PT\"],\n    352: [\"LU\"],\n    353: [\"IE\"],\n    354: [\"IS\"],\n    355: [\"AL\"],\n    356: [\"MT\"],\n    357: [\"CY\"],\n    358: [\"FI\", \"AX\"],\n    359: [\"BG\"],\n    370: [\"LT\"],\n    371: [\"LV\"],\n    372: [\"EE\"],\n    373: [\"MD\"],\n    374: [\"AM\"],\n    375: [\"BY\"],\n    376: [\"AD\"],\n    377: [\"MC\"],\n    378: [\"SM\"],\n    380: [\"UA\"],\n    381: [\"RS\"],\n    382: [\"ME\"],\n    383: [\"XK\"],\n    385: [\"HR\"],\n    386: [\"SI\"],\n    387: [\"BA\"],\n    389: [\"MK\"],\n    420: [\"CZ\"],\n    421: [\"SK\"],\n    423: [\"LI\"],\n    500: [\"FK\"],\n    501: [\"BZ\"],\n    502: [\"GT\"],\n    503: [\"SV\"],\n    504: [\"HN\"],\n    505: [\"NI\"],\n    506: [\"CR\"],\n    507: [\"PA\"],\n    508: [\"PM\"],\n    509: [\"HT\"],\n    590: [\"GP\", \"BL\", \"MF\"],\n    591: [\"BO\"],\n    592: [\"GY\"],\n    593: [\"EC\"],\n    594: [\"GF\"],\n    595: [\"PY\"],\n    596: [\"MQ\"],\n    597: [\"SR\"],\n    598: [\"UY\"],\n    599: [\"CW\", \"BQ\"],\n    670: [\"TL\"],\n    672: [\"NF\"],\n    673: [\"BN\"],\n    674: [\"NR\"],\n    675: [\"PG\"],\n    676: [\"TO\"],\n    677: [\"SB\"],\n    678: [\"VU\"],\n    679: [\"FJ\"],\n    680: [\"PW\"],\n    681: [\"WF\"],\n    682: [\"CK\"],\n    683: [\"NU\"],\n    685: [\"WS\"],\n    686: [\"KI\"],\n    687: [\"NC\"],\n    688: [\"TV\"],\n    689: [\"PF\"],\n    690: [\"TK\"],\n    691: [\"FM\"],\n    692: [\"MH\"],\n    800: [\"001\"],\n    808: [\"001\"],\n    850: [\"KP\"],\n    852: [\"HK\"],\n    853: [\"MO\"],\n    855: [\"KH\"],\n    856: [\"LA\"],\n    870: [\"001\"],\n    878: [\"001\"],\n    880: [\"BD\"],\n    881: [\"001\"],\n    882: [\"001\"],\n    883: [\"001\"],\n    886: [\"TW\"],\n    888: [\"001\"],\n    960: [\"MV\"],\n    961: [\"LB\"],\n    962: [\"JO\"],\n    963: [\"SY\"],\n    964: [\"IQ\"],\n    965: [\"KW\"],\n    966: [\"SA\"],\n    967: [\"YE\"],\n    968: [\"OM\"],\n    970: [\"PS\"],\n    971: [\"AE\"],\n    972: [\"IL\"],\n    973: [\"BH\"],\n    974: [\"QA\"],\n    975: [\"BT\"],\n    976: [\"MN\"],\n    977: [\"NP\"],\n    979: [\"001\"],\n    992: [\"TJ\"],\n    993: [\"TM\"],\n    994: [\"AZ\"],\n    995: [\"GE\"],\n    996: [\"KG\"],\n    998: [\"UZ\"]\n  }, Da = {\n    AC: [, [\n      ,\n      ,\n      \"(?:[01589]\\\\d|[46])\\\\d{4}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [5, 6]\n    ], [, , \"6[2-467]\\\\d{3}\", , , , \"62889\", , , [5]], [, , \"4\\\\d{4}\", , , , \"40123\", , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AC\", 247, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:0[1-9]|[1589]\\\\d)\\\\d{4}\", , , , \"542011\", , , [6]], , , [, , , , , , , , , [-1]]],\n    AD: [\n      ,\n      [, , \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\", , , , , , , [6, 8, 9]],\n      [, , \"[78]\\\\d{5}\", , , , \"712345\", , , [6]],\n      [, , \"690\\\\d{6}|[356]\\\\d{5}\", , , , \"312345\", , , [6, 9]],\n      [, , \"180[02]\\\\d{4}\", , , , \"18001234\", , , [8]],\n      [, , \"[19]\\\\d{5}\", , , , \"912345\", , , [6]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"AD\",\n      376,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"1800\\\\d{4}\", , , , , , , [8]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AE: [\n      ,\n      [, , \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]],\n      [, , \"[2-4679][2-8]\\\\d{6}\", , , , \"22345678\", , , [8], [7]],\n      [, , \"5[024-68]\\\\d{7}\", , , , \"501234567\", , , [9]],\n      [, , \"400\\\\d{6}|800\\\\d{2,9}\", , , , \"800123456\"],\n      [, , \"900[02]\\\\d{5}\", , , , \"900234567\", , , [9]],\n      [, , \"700[05]\\\\d{5}\", , , , \"700012345\", , , [9]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"AE\",\n      971,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"600[25]\\\\d{5}\", , , , \"600212345\", , , [9]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AF: [, [, , \"[2-7]\\\\d{8}\", , , , , , , [9], [7]], [\n      ,\n      ,\n      \"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"234567890\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"7\\\\d{8}\", , , , \"701234567\", , , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AF\", 93, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AG: [\n      ,\n      [, , \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [\n        ,\n        ,\n        \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\",\n        ,\n        ,\n        ,\n        \"2684601234\",\n        ,\n        ,\n        ,\n        [7]\n      ],\n      [, , \"268(?:464|7(?:1[3-9]|[28]\\\\d|3[0246]|64|7[0-689]))\\\\d{4}\", , , , \"2684641234\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , \"26848[01]\\\\d{4}\", , , , \"2684801234\", , , , [7]],\n      \"AG\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"([457]\\\\d{6})$|1\",\n      \"268$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , \"26840[69]\\\\d{4}\", , , , \"2684061234\", , , , [7]],\n      ,\n      \"268\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AI: [, [, , \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"264(?:292|4(?:6[12]|9[78]))\\\\d{4}\", , , , \"2644612345\", , , , [7]], [, , \"264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\", , , , \"2642351234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"AI\", 1, \"011\", \"1\", , , \"([2457]\\\\d{6})$|1\", \"264$1\", , , , , [, , \"264724\\\\d{4}\", , , , \"2647241234\", , , , [7]], , \"264\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AL: [, [, , \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\", , , , , , , [6, 7, 8, 9], [5]], [, , \"4505[0-2]\\\\d{3}|(?:[2358][16-9]\\\\d[2-9]|4410)\\\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\\\d))\\\\d{5}\", , , , \"22345678\", , , [8], [5, 6, 7]], [, , \"6(?:[78][2-9]|9\\\\d)\\\\d{6}\", , , , \"672123456\", , , [9]], [, , \"800\\\\d{4}\", , , , \"8001234\", , , [7]], [\n      ,\n      ,\n      \"900[1-9]\\\\d\\\\d\",\n      ,\n      ,\n      ,\n      \"900123\",\n      ,\n      ,\n      [6]\n    ], [, , \"808[1-9]\\\\d\\\\d\", , , , \"808123\", , , [6]], [, , \"700[2-9]\\\\d{4}\", , , , \"70021234\", , , [8]], [, , , , , , , , , [-1]], \"AL\", 355, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AM: [, [\n      ,\n      ,\n      \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8],\n      [5, 6]\n    ], [, , \"(?:(?:1[0-25]|47)\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\\\d{5}\", , , , \"10123456\", , , , [5, 6]], [, , \"(?:33|4[1349]|55|77|88|9[13-9])\\\\d{6}\", , , , \"77123456\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"90[016]\\\\d{5}\", , , , \"90012345\"], [, , \"80[1-4]\\\\d{5}\", , , , \"80112345\"], [, , , , , , , , , [-1]], [, , \"60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\\\d|9[0-2])\\\\d{4}\", , , , \"60271234\"], \"AM\", 374, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{5})\",\n      \"$1 $2\",\n      [\"2|3[12]\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AO: [\n      ,\n      [, , \"[29]\\\\d{8}\", , , , , , , [9]],\n      [, , \"2\\\\d(?:[0134][25-9]|[25-9]\\\\d)\\\\d{5}\", , , , \"222123456\"],\n      [, , \"9[1-79]\\\\d{7}\", , , , \"923123456\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"AO\",\n      244,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AR: [\n      ,\n      [, , \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\", , , , , , , [10, 11], [6, 7, 8]],\n      [\n        ,\n        ,\n        \"3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|(?:(?:11[1-8]|670)\\\\d|2(?:21[2-6]|(?:3[06]|49)4|6(?:04|1[2-8])|9[17][4-6])|3(?:(?:36|64)4|4(?:1[2-8]|[25][4-6]|84)|5(?:1[2-9]|[38][4-6])|8(?:[17][2-6]|3[4-6]|8[3-68])))\\\\d{6}|(?:2(?:23|64|99)|3(?:43|85))[3-6]\\\\d{6}|(?:2(?:657|9(?:54|66))|3(?:487|7(?:55|77)|865))[2-8]\\\\d{5}|(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|80))[45]\\\\d{6}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|(?:2(?:2(?:62|81)|320|622|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|(?:2(?:284|3(?:02|23)|477|920)|3(?:4(?:46|[89]2)|541|878))[2-7]\\\\d{5}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|35|5[17])))[3-6]\\\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\",\n        ,\n        ,\n        ,\n        \"1123456789\",\n        ,\n        ,\n        [10],\n        [6, 7, 8]\n      ],\n      [\n        ,\n        ,\n        \"93(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|(?:675\\\\d|9(?:11[1-8]\\\\d|2(?:21[2-6]|(?:3[06]|49)4|6(?:04|1[2-8])|9[17][4-6])|3(?:(?:36|64)4|4(?:1[2-8]|[25][4-6]|84)|5(?:1[2-9]|[38][4-6])|8(?:[17][2-6]|3[4-6]|8[3-68]))))\\\\d{6}|9(?:2(?:23|64|99)|3(?:43|85))[3-6]\\\\d{6}|9(?:2(?:657|9(?:54|66))|3(?:487|7(?:55|77)|865))[2-8]\\\\d{5}|9(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|80))[45]\\\\d{6}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|47[35]|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|9(?:2(?:2(?:62|81)|320|622|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|9(?:2(?:284|3(?:02|23)|477|920)|3(?:4(?:46|[89]2)|541|878))[2-7]\\\\d{5}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|9(?:2(?:257|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|35|5[17])))[3-6]\\\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[14]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\",\n        ,\n        ,\n        ,\n        \"91123456789\",\n        ,\n        ,\n        ,\n        [6, 7, 8]\n      ],\n      [, , \"800\\\\d{7,8}\", , , , \"8001234567\"],\n      [, , \"60[04579]\\\\d{7}\", , , , \"6001234567\", , , [10]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"AR\",\n      54,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\n      \"9$1\",\n      ,\n      ,\n      [[, \"(\\\\d{3})\", \"$1\", [\"0|1(?:0[0-35-7]|1[02-5]|2[015]|3[47]|4[478])|911\"]], [, \"(\\\\d{2})(\\\\d{4})\", \"$1-$2\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[1-8]\"]], [\n        ,\n        \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n        \"$1 $2-$3\",\n        [\n          \"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\n          \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\n          \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\n          \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"\n        ],\n        \"0$1\",\n        ,\n        1\n      ], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", , 1], [\n        ,\n        \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n        \"$2 15-$3-$4\",\n        [\n          \"9(?:2[2-469]|3[3-578])\",\n          \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\n          \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\n          \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\n          \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"\n        ],\n        \"0$1\"\n      ], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\"]],\n      [\n        [\n          ,\n          \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n          \"$1 $2-$3\",\n          [\n            \"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\n            \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\n            \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\n            \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"\n          ],\n          \"0$1\",\n          ,\n          1\n        ],\n        [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", , 1],\n        [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"],\n        [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", , 1],\n        [, \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3-$4\", [\n          \"9(?:2[2-469]|3[3-578])\",\n          \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\n          \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\n          \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\n          \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"\n        ]],\n        [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"91\"]],\n        [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"],\n        [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9\"]]\n      ],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"810\\\\d{7}\", , , , , , , [10]],\n      [, , \"810\\\\d{7}\", , , , \"8101234567\", , , [10]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AS: [, [, , \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\", , , , \"6846221234\", , , , [7]], [, , \"684(?:2(?:48|5[2468]|7[26])|7(?:3[13]|70|82))\\\\d{4}\", , , , \"6847331234\", , , , [7]], [\n      ,\n      ,\n      \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"8002123456\"\n    ], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"AS\", 1, \"011\", \"1\", , , \"([267]\\\\d{6})$|1\", \"684$1\", , , , , [, , , , , , , , , [-1]], , \"684\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AT: [, [\n      ,\n      ,\n      \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n      [3]\n    ], [, , \"1(?:11\\\\d|[2-9]\\\\d{3,11})|(?:316|463|(?:51|66|73)2)\\\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{4,10}\", , , , \"1234567890\", , , , [3]], [, , \"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\", , , , \"664123456\", , , [7, 8, 9, 10, 11, 12, 13]], [\n      ,\n      ,\n      \"800\\\\d{6,10}\",\n      ,\n      ,\n      ,\n      \"800123456\",\n      ,\n      ,\n      [9, 10, 11, 12, 13]\n    ], [, , \"(?:8[69][2-68]|9(?:0[01]|3[019]))\\\\d{6,10}\", , , , \"900123456\", , , [9, 10, 11, 12, 13]], [, , \"8(?:10|2[018])\\\\d{6,10}|828\\\\d{5}\", , , , \"810123456\", , , [8, 9, 10, 11, 12, 13]], [, , , , , , , , , [-1]], [, , \"5(?:0[1-9]|17|[79]\\\\d)\\\\d{2,10}|7[28]0\\\\d{6,10}\", , , , \"780123456\", , , [5, 6, 7, 8, 9, 10, 11, 12, 13]], \"AT\", 43, \"00\", \"0\", , , \"0\", , , , [\n      [, \"(\\\\d{4})\", \"$1\", [\"14\"]],\n      [, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"],\n      [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"],\n      [, \"(\\\\d{6})\", \"$1\", [\"[18]\"]],\n      [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"],\n      [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]\n    ], [[, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3,10})\",\n      \"$1 $2\",\n      [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AU: [\n      ,\n      [, , \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\", , , , , , , [5, 6, 7, 8, 9, 10, 12]],\n      [\n        ,\n        ,\n        \"(?:(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90)))\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|3\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",\n        ,\n        ,\n        ,\n        \"212345678\",\n        ,\n        ,\n        [9],\n        [8]\n      ],\n      [, , \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", , , , \"412345678\", , , [9]],\n      [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]],\n      [, , \"190[0-26]\\\\d{6}\", , , , \"1900123456\", , , [10]],\n      [, , \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", , , , \"1300123456\", , , [6, 8, 10, 12]],\n      [, , , , , , , , , [-1]],\n      [, , \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", , , , \"147101234\", , , [9]],\n      \"AU\",\n      61,\n      \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\n      \"0\",\n      ,\n      ,\n      \"(183[12])|0\",\n      ,\n      \"0011\",\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"13\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"180\", \"1802\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\", \"$CC ($1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]], [\n        ,\n        \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\n        \"$1 $2 $3\",\n        [\"130\"]\n      ]],\n      [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\", \"$CC ($1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]],\n      [, , \"163\\\\d{2,6}\", , , , \"1631234\", , , [5, 6, 7, 8, 9]],\n      1,\n      ,\n      [, , \"1(?:3(?:00\\\\d{5}|45[0-4])|802)\\\\d{3}|1[38]00\\\\d{6}|13\\\\d{4}\", , , , , , , [6, 7, 8, 10, 12]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    AW: [, [\n      ,\n      ,\n      \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"5(?:2\\\\d|8[1-9])\\\\d{4}\", , , , \"5212345\"], [, , \"(?:290|5[69]\\\\d|6(?:[03]0|22|4[0-2]|[69]\\\\d)|7(?:[34]\\\\d|7[07])|9(?:6[45]|9[4-8]))\\\\d{4}\", , , , \"5601234\"], [, , \"800\\\\d{4}\", , , , \"8001234\"], [, , \"900\\\\d{4}\", , , , \"9001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:28\\\\d|501)\\\\d{4}\", , , , \"5011234\"], \"AW\", 297, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    AX: [, [\n      ,\n      ,\n      \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [5, 6, 7, 8, 9, 10, 11, 12]\n    ], [, , \"18[1-8]\\\\d{3,6}\", , , , \"181234567\", , , [6, 7, 8, 9]], [, , \"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\", , , , \"412345678\", , , [6, 7, 8, 9, 10]], [, , \"800\\\\d{4,6}\", , , , \"800123456\", , , [7, 8, 9]], [, , \"[67]00\\\\d{5,6}\", , , , \"600123456\", , , [8, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AX\", 358, \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"0\", , , \"0\", , \"00\", , , , [, , , , , , , , , [-1]], , \"18\", [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\",\n      ,\n      ,\n      ,\n      \"10112345\"\n    ], , , [, , , , , , , , , [-1]]],\n    AZ: [, [, , \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\", , , , , , , [9], [7]], [, , \"(?:2[12]428|3655[02])\\\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\\\d{5}|(?:(?:1[28]|46)\\\\d|2(?:[014-6]2|[23]3))\\\\d{6}\", , , , \"123123456\", , , , [7]], [, , \"36554\\\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\\\d{7}\", , , , \"401234567\"], [, , \"88\\\\d{7}\", , , , \"881234567\"], [, , \"900200\\\\d{3}\", , , , \"900200123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AZ\", 994, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[1-9]\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"90\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"[13-9]\"],\n      \"0$1\"\n    ]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BA: [\n      ,\n      [, , \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\", , , , , , , [8, 9], [6]],\n      [, , \"(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\\\d{5}\", , , , \"30212345\", , , [8], [6]],\n      [, , \"6040\\\\d{5}|6(?:03|[1-356]|44|7\\\\d)\\\\d{6}\", , , , \"61123456\"],\n      [, , \"8[08]\\\\d{6}\", , , , \"80123456\", , , [8]],\n      [, , \"9[0246]\\\\d{6}\", , , , \"90123456\", , , [8]],\n      [, , \"8[12]\\\\d{6}\", , , , \"82123456\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"BA\",\n      387,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]],\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"703[235]0\\\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\\\d{4}\", , , , \"70341234\", , , [8]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    BB: [, [, , \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"246521[0369]\\\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7[35]7|9(?:1[89]|63))\\\\d{4}\", , , , \"2464123456\", , , , [7]], [, , \"246(?:(?:2(?:[3568]\\\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\\\d)|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d|52(?:1[147]|20))\\\\d{3}\", , , , \"2462501234\", , , , [7]], [\n      ,\n      ,\n      \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"8002123456\"\n    ], [, , \"(?:246976|900[2-9]\\\\d\\\\d)\\\\d{4}\", , , , \"9002123456\", , , , [7]], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , \"24631\\\\d{5}\", , , , \"2463101234\", , , , [7]], \"BB\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"246$1\", , , , , [, , , , , , , , , [-1]], , \"246\", [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\\\d|3[016]|53))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2464301234\",\n      ,\n      ,\n      ,\n      [7]\n    ], , , [, , , , , , , , , [-1]]],\n    BD: [, [, , \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\", , , , , , , [6, 7, 8, 9, 10]], [\n      ,\n      ,\n      \"(?:4(?:31\\\\d\\\\d|423)|5222)\\\\d{3}(?:\\\\d{2})?|8332[6-9]\\\\d\\\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\\\d{4}|(?:2(?:[23]\\\\d|[45])\\\\d\\\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\\\d{5}|[59]1\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"27111234\"\n    ], [, , \"(?:1[13-9]\\\\d|644)\\\\d{7}|(?:3[78]|44|66)[02-9]\\\\d{7}\", , , , \"1812345678\", , , [10]], [, , \"80[03]\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"96(?:0[469]|1[0-47]|3[389]|43|6[69]|7[78])\\\\d{6}\", , , , \"9604123456\", , , [10]], \"BD\", 880, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3,7})\",\n      \"$1-$2\",\n      [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|2[23]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BE: [, [, , \"4\\\\d{8}|[1-9]\\\\d{7}\", , , , , , , [8, 9]], [, , \"80[2-8]\\\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\\\d{6}\", , , , \"12345678\", , , [8]], [, , \"4[5-9]\\\\d{7}\", , , , \"470123456\", , , [9]], [, , \"800[1-9]\\\\d{4}\", , , , \"80012345\", , , [8]], [, , \"(?:70(?:2[0-57]|3[04-7]|44|6[4-69]|7[0579])|90\\\\d\\\\d)\\\\d{4}\", , , , \"90012345\", , , [8]], [\n      ,\n      ,\n      \"7879\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"78791234\",\n      ,\n      ,\n      [8]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BE\", 32, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"78(?:0[57]|1[014-8]|2[25]|3[15-8]|48|[56]0|7[06-8]|9\\\\d)\\\\d{4}\", , , , \"78102345\", , , [8]], , , [, , , , , , , , , [-1]]],\n    BF: [, [\n      ,\n      ,\n      \"[025-7]\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8]\n    ], [, , \"2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\\\d|50|6[5-7]))\\\\d{4}\", , , , \"20491234\"], [, , \"(?:0[1-7]|5[0-8]|[67]\\\\d)\\\\d{6}\", , , , \"70123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BF\", 226, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BG: [\n      ,\n      [, , \"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\", , , , , , , [6, 7, 8, 9, 12], [4, 5]],\n      [, , \"2\\\\d{5,7}|(?:43[1-6]|70[1-9])\\\\d{4,5}|(?:[36]\\\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\\\d{5,6}\", , , , \"2123456\", , , [6, 7, 8], [4, 5]],\n      [, , \"(?:43[07-9]|99[69]\\\\d)\\\\d{5}|(?:8[7-9]|98)\\\\d{7}\", , , , \"43012345\", , , [8, 9]],\n      [, , \"(?:00800\\\\d\\\\d|800)\\\\d{5}\", , , , \"80012345\", , , [8, 12]],\n      [, , \"90\\\\d{6}\", , , , \"90123456\", , , [8]],\n      [, , \"700\\\\d{5}\", , , , \"70012345\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"BG\",\n      359,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\n        ,\n        \"(\\\\d{3})(\\\\d{4})\",\n        \"$1 $2\",\n        [\"43[1-6]|70[1-9]\"],\n        \"0$1\"\n      ], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]],\n      [[, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\n        ,\n        \"(\\\\d{3})(\\\\d{4})\",\n        \"$1 $2\",\n        [\"43[1-6]|70[1-9]\"],\n        \"0$1\"\n      ], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    BH: [, [, , \"[136-9]\\\\d{7}\", , , , , , , [8]], [\n      ,\n      ,\n      \"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|55|7[7-9]|88)|9[69][69])|7(?:[07]\\\\d\\\\d|1(?:11|78)))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"17001234\"\n    ], [, , \"(?:3(?:[0-79]\\\\d|8[0-57-9])\\\\d|6(?:3(?:00|33|6[16])|441|6(?:3[03-9]|[69]\\\\d|7[0-689])))\\\\d{4}\", , , , \"36001234\"], [, , \"8[02369]\\\\d{6}\", , , , \"80123456\"], [, , \"(?:87|9[0-8])\\\\d{6}\", , , , \"90123456\"], [, , \"84\\\\d{6}\", , , , \"84123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BH\", 973, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[02-4679]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BI: [, [, , \"(?:[267]\\\\d|31)\\\\d{6}\", , , , , , , [8]], [, , \"(?:22|31)\\\\d{6}\", , , , \"22201234\"], [\n      ,\n      ,\n      \"(?:29|[67][125-9])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"79561234\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BI\", 257, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BJ: [, [, , \"(?:01\\\\d|[24-689])\\\\d{7}\", , , , , , , [8, 10]], [, , \"2090\\\\d{4}|(?:012\\\\d\\\\d|2(?:02|1[037]|2[45]|3[68]|4\\\\d))\\\\d{5}\", , , , \"0120211234\"], [, , \"(?:01(?:2[5-9]|[4-69]\\\\d)|4[0-8]|[56]\\\\d|9[013-9])\\\\d{6}\", , , , \"0195123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , \"857[58]\\\\d{4}\", , , , \"85751234\", , , [8]], \"BJ\", 229, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"81\\\\d{6}\", , , , \"81123456\", , , [8]], , , [, , , , , , , , , [-1]]],\n    BL: [, [, , \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\", , , , , , , [9]], [, , \"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\", , , , \"590271234\"], [\n      ,\n      ,\n      \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"690001234\"\n    ], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\", , , , \"976012345\"], \"BL\", 590, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BM: [\n      ,\n      [, , \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [, , \"441(?:[46]\\\\d\\\\d|5(?:4\\\\d|60|89))\\\\d{4}\", , , , \"4414123456\", , , , [7]],\n      [, , \"441(?:[2378]\\\\d|5[0-39]|9[02])\\\\d{5}\", , , , \"4413701234\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , , , , , , , , [-1]],\n      \"BM\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"([2-9]\\\\d{6})$|1\",\n      \"441$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"441\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    BN: [, [, , \"[2-578]\\\\d{6}\", , , , , , , [7]], [\n      ,\n      ,\n      \"22[0-7]\\\\d{4}|(?:2[013-9]|[34]\\\\d|5[0-25-9])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"2345678\"\n    ], [, , \"(?:22[89]|[78]\\\\d\\\\d)\\\\d{4}\", , , , \"7123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5[34]\\\\d{5}\", , , , \"5345678\"], \"BN\", 673, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BO: [, [, , \"8001\\\\d{5}|(?:[2-467]\\\\d|50)\\\\d{6}\", , , , , , , [8, 9], [7]], [\n      ,\n      ,\n      \"(?:2(?:2\\\\d\\\\d|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d\\\\d|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\\\d\\\\d|6(?:11|[24689]\\\\d|72)))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"22123456\",\n      ,\n      ,\n      [8],\n      [7]\n    ], [, , \"[67]\\\\d{7}\", , , , \"71234567\", , , [8]], [, , \"8001[07]\\\\d{4}\", , , , \"800171234\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"50\\\\d{6}\", , , , \"50123456\", , , [8], [7]], \"BO\", 591, \"00(?:1\\\\d)?\", \"0\", , , \"0(1\\\\d)?\", , , , [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[235]|4[46]\"], , \"0$CC $1\"], [, \"(\\\\d{8})\", \"$1\", [\"[67]\"], , \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], , \"0$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , \"8001[07]\\\\d{4}\", , , , , , , [9]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BQ: [, [\n      ,\n      ,\n      \"(?:[34]1|7\\\\d)\\\\d{5}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\\\d)\\\\d{3}\", , , , \"7151234\"], [, , \"(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\", , , , \"3181234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BQ\", 599, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , \"[347]\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BR: [, [, , \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\", , , , , , , [8, 9, 10, 11]], [\n      ,\n      ,\n      \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"1123456789\",\n      ,\n      ,\n      [10],\n      [8]\n    ], [, , \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\\\d)\\\\d{7}\", , , , \"11961234567\", , , [10, 11], [8, 9]], [, , \"800\\\\d{6,7}\", , , , \"800123456\", , , [9, 10]], [, , \"300\\\\d{6}|[59]00\\\\d{6,7}\", , , , \"300123456\", , , [9, 10]], [, , \"(?:30[03]\\\\d{3}|4(?:0(?:0\\\\d|20)|370))\\\\d{4}|300\\\\d{5}\", , , , \"40041234\", , , [8, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BR\", 55, \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"0\", , , \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\", , , [\n      [, \"(\\\\d{3,6})\", \"$1\", [\"1(?:1[25-8]|2[357-9]|3[02-68]|4[12568]|5|6[0-8]|8[015]|9[0-47-9])|321|610\"]],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-57]\", \"[2357]|4(?:[0-24-9]|3(?:[0-689]|7[1-9]))\"]],\n      [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"],\n      [, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"9\"]],\n      [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\", \"0 $CC ($1)\"],\n      [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\", \"0 $CC ($1)\"]\n    ], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\n      \"300|4(?:0[02]|37)\",\n      \"4(?:02|37)0|[34]00\"\n    ]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\", \"0 $CC ($1)\"]], [, , , , , , , , , [-1]], , , [, , \"30(?:0\\\\d{5,7}|3\\\\d{7})|40(?:0\\\\d|20)\\\\d{4}|800\\\\d{6,7}\", , , , , , , [8, 9, 10]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BS: [, [, , \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [\n      ,\n      ,\n      \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-5]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2423456789\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|3[0-4]|[89]9))\\\\d{4}\", , , , \"2423591234\", , , , [7]], [, , \"242300\\\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\", , , , [7]], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"BS\", 1, \"011\", \"1\", , , \"([3-8]\\\\d{6})$|1\", \"242$1\", , , , , [, , , , , , , , , [-1]], , \"242\", [, , , , , , , , , [-1]], [, , \"242225\\\\d{4}\", , , , \"2422250123\"], , , [, , , , , , , , , [-1]]],\n    BT: [, [, , \"[17]\\\\d{7}|[2-8]\\\\d{6}\", , , , , , , [7, 8], [6]], [, , \"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\", , , , \"2345678\", , , [7], [6]], [, , \"(?:1[67]|77)\\\\d{6}\", , , , \"17123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BT\", 975, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[2-7]\"]], [\n      ,\n      \"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[2-68]|7[246]\"]\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BW: [, [, , \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\", , , , , , , [7, 8, 10]], [\n      ,\n      ,\n      \"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\\\d|7[013]|81)|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[013467]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2401234\",\n      ,\n      ,\n      [7]\n    ], [, , \"(?:321|7[1-8]\\\\d)\\\\d{5}\", , , , \"71123456\", , , [8]], [, , \"(?:0800|800\\\\d)\\\\d{6}\", , , , \"0800012345\", , , [10]], [, , \"90\\\\d{5}\", , , , \"9012345\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"79(?:1(?:[0-2]\\\\d|3[0-3])|2[0-7]\\\\d)\\\\d{3}\", , , , \"79101234\", , , [8]], \"BW\", 267, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"8\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BY: [, [, , \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\", , , , , , , [6, 7, 8, 9, 10, 11], [5]], [, , \"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d\\\\d)|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\", , , , \"152450911\", , , [9], [5, 6, 7]], [\n      ,\n      ,\n      \"(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\\\d)\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"294911911\",\n      ,\n      ,\n      [9]\n    ], [, , \"800\\\\d{3,7}|8(?:0[13]|20\\\\d)\\\\d{7}\", , , , \"8011234567\"], [, , \"(?:810|902)\\\\d{7}\", , , , \"9021234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"249\\\\d{6}\", , , , \"249123456\", , , [9]], \"BY\", 375, \"810\", \"8\", , , \"0|80?\", , \"8~10\", , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [\n      ,\n      \"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\n      \"$1 $2-$3\",\n      [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\n      \"8 0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]], , [, , , , , , , , , [-1]], , , [, , \"800\\\\d{3,7}|(?:8(?:0[13]|10|20\\\\d)|902)\\\\d{7}\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    BZ: [, [, , \"(?:0800\\\\d|[2-8])\\\\d{6}\", , , , , , , [7, 11]], [, , \"(?:2(?:[02]\\\\d|36|[68]0)|[3-58](?:[02]\\\\d|[68]0)|7(?:[02]\\\\d|32|[68]0))\\\\d{4}\", , , , \"2221234\", , , [7]], [\n      ,\n      ,\n      \"6[0-35-7]\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"6221234\",\n      ,\n      ,\n      [7]\n    ], [, , \"0800\\\\d{7}\", , , , \"08001234123\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BZ\", 501, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CA: [, [, , \"[2-9]\\\\d{9}|3\\\\d{6}\", , , , , , , [7, 10]], [\n      ,\n      ,\n      \"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5062345678\",\n      ,\n      ,\n      [10],\n      [7]\n    ], [, , \"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\\\d{6}\", , , , \"5062345678\", , , [10], [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\", , , [10]], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\", , , [10]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\",\n      ,\n      ,\n      [10]\n    ], [, , \"600[2-9]\\\\d{6}\", , , , \"6002012345\", , , [10]], \"CA\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"310\\\\d{4}\", , , , \"3101234\", , , [7]], , , [, , , , , , , , , [-1]]],\n    CC: [, [, , \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", , , , , , , [6, 7, 8, 9, 10, 12]], [, , \"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", , , , \"891621234\", , , [9], [8]], [\n      ,\n      ,\n      \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"412345678\",\n      ,\n      ,\n      [9]\n    ], [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"190[0-26]\\\\d{6}\", , , , \"1900123456\", , , [10]], [, , \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", , , , \"1300123456\", , , [6, 8, 10, 12]], [, , , , , , , , , [-1]], [, , \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", , , , \"147101234\", , , [9]], \"CC\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\", , , \"([59]\\\\d{7})$|0\", \"8$1\", \"0011\", , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CD: [, [\n      ,\n      ,\n      \"(?:(?:[189]|5\\\\d)\\\\d|2)\\\\d{7}|[1-68]\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7, 8, 9, 10]\n    ], [, , \"(?:(?:12|573)\\\\d\\\\d|276)\\\\d{5}|[1-6]\\\\d{6}\", , , , \"1234567\"], [, , \"88\\\\d{5}|(?:8[0-69]|9[017-9])\\\\d{7}\", , , , \"991234567\", , , [7, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CD\", 243, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[89]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"5\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CF: [, [, , \"(?:[27]\\\\d{3}|8776)\\\\d{4}\", , , , , , , [8]], [, , \"2[12]\\\\d{6}\", , , , \"21612345\"], [, , \"7[024-7]\\\\d{6}\", , , , \"70012345\"], [, , , , , , , , , [-1]], [, , \"8776\\\\d{4}\", , , , \"87761234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CF\", 236, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CG: [, [, , \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\", , , , , , , [9]], [, , \"222[1-589]\\\\d{5}\", , , , \"222123456\"], [, , \"026(?:1[0-5]|6[6-9])\\\\d{4}|0(?:[14-6]\\\\d\\\\d|2(?:40|5[5-8]|6[07-9]))\\\\d{5}\", , , , \"061234567\"], [, , , , , , , , , [-1]], [, , \"80[0-2]\\\\d{6}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CG\", 242, \"00\", , , , , , , , [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CH: [, [\n      ,\n      ,\n      \"8\\\\d{11}|[2-9]\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [9, 12]\n    ], [, , \"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\", , , , \"212345678\", , , [9]], [, , \"(?:6[89]|7[235-9])\\\\d{7}\", , , , \"781234567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"90[016]\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"84[0248]\\\\d{6}\", , , , \"840123456\", , , [9]], [, , \"878\\\\d{6}\", , , , \"878123456\", , , [9]], [, , , , , , , , , [-1]], \"CH\", 41, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4 $5\",\n      [\"8\"],\n      \"0$1\"\n    ]], , [, , \"74[0248]\\\\d{6}\", , , , \"740123456\", , , [9]], , , [, , , , , , , , , [-1]], [, , \"5[18]\\\\d{7}\", , , , \"581234567\", , , [9]], , , [, , \"860\\\\d{9}\", , , , \"860123456789\", , , [12]]],\n    CI: [, [, , \"[02]\\\\d{9}\", , , , , , , [10]], [, , \"2(?:[15]\\\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\\\d{5}\", , , , \"2123456789\"], [, , \"0[157]\\\\d{8}\", , , , \"0123456789\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CI\", 225, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\n      \"$1 $2 $3 $4\",\n      [\"2\"]\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CK: [, [, , \"[2-578]\\\\d{4}\", , , , , , , [5]], [, , \"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\", , , , \"21234\"], [, , \"[578]\\\\d{4}\", , , , \"71234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CK\", 682, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CL: [, [\n      ,\n      ,\n      \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [9, 10, 11]\n    ], [, , \"2(?:1982[0-6]|3314[05-9])\\\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\\\d\\\\d|3(?:[03467]\\\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\\\d\\\\d|9(?:3(?:[0-57-9]\\\\d\\\\d|6(?:0[02-9]|[1-9]\\\\d))|6(?:[0-8]\\\\d\\\\d|9(?:[02-79]\\\\d|1[05-9]))|7[1-9]\\\\d\\\\d|9(?:[03-9]\\\\d\\\\d|1(?:[0235-9]\\\\d|4[0-24-9])|2(?:[0-79]\\\\d|8[0-46-9]))))\\\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\\\d{7}\", , , , \"221234567\", , , [9]], [\n      ,\n      ,\n      \"2(?:1982[0-6]|3314[05-9])\\\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\\\d\\\\d|3(?:[03467]\\\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\\\d\\\\d|9(?:3(?:[0-57-9]\\\\d\\\\d|6(?:0[02-9]|[1-9]\\\\d))|6(?:[0-8]\\\\d\\\\d|9(?:[02-79]\\\\d|1[05-9]))|7[1-9]\\\\d\\\\d|9(?:[03-9]\\\\d\\\\d|1(?:[0235-9]\\\\d|4[0-24-9])|2(?:[0-79]\\\\d|8[0-46-9]))))\\\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"221234567\",\n      ,\n      ,\n      [9]\n    ], [, , \"(?:123|8)00\\\\d{6}\", , , , \"800123456\", , , [9, 11]], [, , , , , , , , , [-1]], [, , \"600\\\\d{7,8}\", , , , \"6001234567\", , , [10, 11]], [, , , , , , , , , [-1]], [, , \"44\\\\d{7}\", , , , \"441234567\", , , [9]], \"CL\", 56, \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\", , , , , , , 1, [\n      [, \"(\\\\d{4})\", \"$1\", [\"1(?:[03-589]|21)|[29]0|78\"]],\n      [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]],\n      [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"],\n      [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]],\n      [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]\n    ], [[, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\n      \"($1)\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]], [, , , , , , , , , [-1]], , , [, , \"600\\\\d{7,8}\", , , , , , , [10, 11]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CM: [\n      ,\n      [, , \"[26]\\\\d{8}|88\\\\d{6,7}\", , , , , , , [8, 9]],\n      [, , \"2(?:22|33)\\\\d{6}\", , , , \"222123456\", , , [9]],\n      [, , \"(?:24[23]|6(?:[25-9]\\\\d|40))\\\\d{6}\", , , , \"671234567\", , , [9]],\n      [, , \"88\\\\d{6,7}\", , , , \"88012345\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"CM\",\n      237,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    CN: [, [, , \"(?:(?:1[03-689]|2\\\\d)\\\\d\\\\d|6)\\\\d{8}|1\\\\d{10}|[126]\\\\d{6}(?:\\\\d(?:\\\\d{2})?)?|86\\\\d{5,6}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{5,9}\", , , , , , , [7, 8, 9, 10, 11, 12], [5, 6]], [\n      ,\n      ,\n      \"(?:10(?:[02-79]\\\\d\\\\d|[18](?:0[1-9]|[1-9]\\\\d))|2(?:[02-57-9]\\\\d{3}|1(?:[18](?:0[1-9]|[1-9]\\\\d)|[2-79]\\\\d\\\\d))|(?:41[03]|8078|9(?:78|94))\\\\d\\\\d)\\\\d{5}|(?:10|2[0-57-9])(?:1(?:00|23)\\\\d\\\\d|95\\\\d{3,4})|(?:41[03]|9(?:78|94))(?:100\\\\d\\\\d|95\\\\d{3,4})|8078123|(?:43[35]|754|851)\\\\d{7,8}|(?:43[35]|754|851)(?:1(?:00\\\\d|23)\\\\d|95\\\\d{3,4})|(?:3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\\\d{7}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{3})?|[1-9]\\\\d{5})|[13-9]\\\\d{6}|2(?:[0-24-9]\\\\d{5}|3\\\\d(?:\\\\d{4})?))|9(?:[0-46-9]\\\\d{6}|5\\\\d{3}(?:\\\\d(?:\\\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[24-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-8]\\\\d{6}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{2})?|[1-9]\\\\d{4})|[13-9]\\\\d{5}|2(?:[0-24-9]\\\\d{4}|3\\\\d(?:\\\\d{3})?))|9(?:[0-46-9]\\\\d{5}|5\\\\d{3,5}))\",\n      ,\n      ,\n      ,\n      \"1012345678\",\n      ,\n      ,\n      [7, 8, 9, 10, 11],\n      [5, 6]\n    ], [, , \"1740[0-5]\\\\d{6}|1(?:[38]\\\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\\\d{8}\", , , , \"13123456789\", , , [11]], [, , \"(?:(?:10|21)8|8)00\\\\d{7}\", , , , \"8001234567\", , , [10, 12]], [, , \"16[08]\\\\d{5}\", , , , \"16812345\", , , [8]], [\n      ,\n      ,\n      \"10(?:10\\\\d{4}|96\\\\d{3,4})|400\\\\d{7}|950\\\\d{7,8}|(?:2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\",\n      ,\n      ,\n      ,\n      \"4001234567\",\n      ,\n      ,\n      [7, 8, 9, 10, 11],\n      [5, 6]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CN\", 86, \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"0\", , , \"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\", , \"00\", , [\n      [, \"(\\\\d{5,6})\", \"$1\", [\"1(?:00|2[13])|9[56]\", \"1(?:00|2(?:1|39))|9[56]\", \"1(?:00|2(?:1|395))|9[56]\"]],\n      [, \"(\\\\d{5,6})\", \"$1\", [\"1(?:0|23)|781|[1-9]12\", \"1(?:0|23)|7812|[1-9]123\", \"1(?:0|23(?:[0-8]|9[0-46-9]))|78123|[1-9]123\"]],\n      [\n        ,\n        \"(\\\\d{2})(\\\\d{5,6})\",\n        \"$1 $2\",\n        [\n          \"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]\",\n          \"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1\",\n          \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12\",\n          \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\",\n          \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\"\n        ],\n        \"0$1\",\n        \"$CC $1\"\n      ],\n      [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\n        \"[1-9]\",\n        \"1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])\",\n        \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|[3-9]\",\n        \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|1[03]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|50|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9]|78|94)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-9]|1(?:[013-9]|2[0-24-9]))\",\n        \"1(?:0(?:[02-8]|1(?:[013-9]|2[0-24-9])|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[13-9]|2[0-24-9])|9[0-47-9])|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|1[03]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:0(?:[0-689]|7[0-79])|1[01459]|2[0-489]|[46]|50|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9]|78|94)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))(?:[02-9]|1(?:[013-9]|2[0-24-9]))\"\n      ]],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"16[08]\"]],\n      [\n        ,\n        \"(\\\\d{3})(\\\\d{5,6})\",\n        \"$1 $2\",\n        [\n          \"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\n          \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\n          \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\n          \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"\n        ],\n        \"0$1\",\n        \"$CC $1\"\n      ],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\n        \"[1-9]\",\n        \"1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[0-8]|9[0-47-9])|6)|[3-9]\",\n        \"1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|26|3(?:[0268]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23][0-8])|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:33|85[23]9)[0-46-9]|(?:2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:[0-8]|9[0-47-9])\",\n        \"1(?:0[02-8]|[1-9])|2(?:[0-57-9][0-8]|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23](?:[02-8]|1[1-9]|9[0-46-9]))|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:10|2[0-57-9])9[0-47-9]|(?:101|58|85[23]10)[1-9]|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])\"\n      ]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]],\n      [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", \"$CC $1\", 1],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", \"$CC $1\", 1],\n      [\n        ,\n        \"(\\\\d{3})(\\\\d{7,8})\",\n        \"$1 $2\",\n        [\"9\"]\n      ],\n      [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", \"$CC $1\", 1],\n      [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", \"$CC $1\", 1],\n      [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"], , \"$CC $1\"],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", , 1]\n    ], [[\n      ,\n      \"(\\\\d{2})(\\\\d{5,6})\",\n      \"$1 $2\",\n      [\n        \"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]\",\n        \"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1\",\n        \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12\",\n        \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\",\n        \"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\"\n      ],\n      \"0$1\",\n      \"$CC $1\"\n    ], [\n      ,\n      \"(\\\\d{3})(\\\\d{5,6})\",\n      \"$1 $2\",\n      [\n        \"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\n        \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\n        \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\n        \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"\n      ],\n      \"0$1\",\n      \"$CC $1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", \"$CC $1\", 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{7,8})\",\n      \"$1 $2\",\n      [\"9\"]\n    ], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", , 1]], [, , , , , , , , , [-1]], , , [, , \"(?:(?:10|21)8|[48])00\\\\d{7}|950\\\\d{7,8}\", , , , , , , [10, 11, 12]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CO: [, [, , \"(?:46|60\\\\d\\\\d)\\\\d{6}|(?:1\\\\d|[39])\\\\d{9}\", , , , , , , [8, 10, 11], [4, 7]], [\n      ,\n      ,\n      \"601055(?:[0-4]\\\\d|50)\\\\d\\\\d|6010(?:[0-4]\\\\d|5[0-4])\\\\d{4}|(?:46|60(?:[124-7][2-9]|8[1-9]))\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"6012345678\",\n      ,\n      ,\n      [8, 10],\n      [4, 7]\n    ], [, , \"333301[0-5]\\\\d{3}|3333(?:00|2[5-9]|[3-9]\\\\d)\\\\d{4}|(?:3(?:24[1-9]|3(?:00|3[0-24-9]))|9101)\\\\d{6}|3(?:0[0-5]|1\\\\d|2[0-3]|5[01]|70)\\\\d{7}\", , , , \"3211234567\", , , [10]], [, , \"1800\\\\d{7}\", , , , \"18001234567\", , , [11]], [, , \"(?:19(?:0[01]|4[78])|901)\\\\d{7}\", , , , \"19001234567\", , , [10, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CO\", 57, \"00(?:4(?:[14]4|56)|[579])\", \"0\", , , \"0([3579]|4(?:[14]4|56))?\", , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"46\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{7})\",\n      \"$1 $2\",\n      [\"6|90\"],\n      \"($1)\",\n      \"0$CC $1\"\n    ], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"], , \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\"]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"46\"]], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6|90\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"], , \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1 $2 $3\", [\"1\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CR: [, [, , \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\", , , , , , , [8, 10]], [\n      ,\n      ,\n      \"210[7-9]\\\\d{4}|2(?:[024-7]\\\\d|1[1-9])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"22123456\",\n      ,\n      ,\n      [8]\n    ], [, , \"(?:3005\\\\d|6500[01])\\\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\\\d{6}\", , , , \"83123456\", , , [8]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"90[059]\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:210[0-6]|4\\\\d{3}|5100)\\\\d{4}\", , , , \"40001234\", , , [8]], \"CR\", 506, \"00\", , , , \"(19(?:0[0-2468]|1[09]|20|66|77|99))\", , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"], , \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]]],\n    CU: [, [, , \"(?:[2-7]|8\\\\d\\\\d)\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\", , , , , , , [6, 7, 8, 10], [4, 5]], [, , \"(?:3[23]|4[89])\\\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\\\d)\\\\d{6}|(?:2[1-4]|4[1257]|7\\\\d)\\\\d{5,6}\", , , , \"71234567\", , , , [4, 5]], [, , \"(?:5\\\\d|6[2-4])\\\\d{6}\", , , , \"51234567\", , , [8]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , , , , , , , , [-1]], [, , \"807\\\\d{7}\", , , , \"8071234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CU\", 53, \"119\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [\n      ,\n      \"(\\\\d)(\\\\d{6,7})\",\n      \"$1 $2\",\n      [\"7\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[56]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CV: [, [, , \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\", , , , , , , [7]], [, , \"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\", , , , \"2211234\"], [, , \"(?:36|5[1-389]|9\\\\d)\\\\d{5}\", , , , \"9911234\"], [, , \"800\\\\d{4}\", , , , \"8001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:3[3-5]|4[356])\\\\d{5}\", , , , \"3401234\"], \"CV\", 238, \"0\", , , , , , , , [[\n      ,\n      \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3\",\n      [\"[2-589]\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CW: [, [, , \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\", , , , , , , [7, 8]], [, , \"9(?:4(?:3[0-5]|4[14]|6\\\\d)|50\\\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\\\d|7[01]|8[57-9]))\\\\d{4}\", , , , \"94351234\"], [, , \"953[01]\\\\d{4}|9(?:5[12467]|6[5-9])\\\\d{5}\", , , , \"95181234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"60[0-2]\\\\d{4}\", , , , \"6001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CW\", 599, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2\",\n      [\"[3467]\"]\n    ], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]], , [, , \"955\\\\d{5}\", , , , \"95581234\", , , [8]], 1, \"[69]\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CX: [, [, , \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", , , , , , , [6, 7, 8, 9, 10, 12]], [, , \"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", , , , \"891641234\", , , [9], [8]], [\n      ,\n      ,\n      \"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"412345678\",\n      ,\n      ,\n      [9]\n    ], [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"190[0-26]\\\\d{6}\", , , , \"1900123456\", , , [10]], [, , \"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", , , , \"1300123456\", , , [6, 8, 10, 12]], [, , , , , , , , , [-1]], [, , \"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", , , , \"147101234\", , , [9]], \"CX\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\", , , \"([59]\\\\d{7})$|0\", \"8$1\", \"0011\", , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    CY: [, [\n      ,\n      ,\n      \"(?:[279]\\\\d|[58]0)\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8]\n    ], [, , \"2[2-6]\\\\d{6}\", , , , \"22345678\"], [, , \"9(?:10|[4-79]\\\\d)\\\\d{5}\", , , , \"96123456\"], [, , \"800\\\\d{5}\", , , , \"80001234\"], [, , \"90[09]\\\\d{5}\", , , , \"90012345\"], [, , \"80[1-9]\\\\d{5}\", , , , \"80112345\"], [, , \"700\\\\d{5}\", , , , \"70012345\"], [, , , , , , , , , [-1]], \"CY\", 357, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:50|77)\\\\d{6}\", , , , \"77123456\"], , , [, , , , , , , , , [-1]]],\n    CZ: [, [, , \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\", , , , , , , [9, 10, 11, 12]], [\n      ,\n      ,\n      \"(?:2\\\\d|3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"212345678\",\n      ,\n      ,\n      [9]\n    ], [, , \"(?:60[1-8]\\\\d|7(?:0(?:[2-5]\\\\d|60)|19[01]|[2379]\\\\d\\\\d))\\\\d{5}\", , , , \"601123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"9(?:0[05689]|76)\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"8[134]\\\\d{7}\", , , , \"811234567\", , , [9]], [, , \"70[01]\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"9[17]0\\\\d{6}\", , , , \"910123456\", , , [9]], \"CZ\", 420, \"00\", , , , , , , , [\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]\n    ], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"9(?:5\\\\d|7[2-4])\\\\d{6}\", , , , \"972123456\", , , [9]], , , [, , \"9(?:3\\\\d{9}|6\\\\d{7,10})\", , , , \"93123456789\"]],\n    DE: [, [, , \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\", , , , , , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 3]], [\n      ,\n      ,\n      \"32\\\\d{9,11}|49[1-6]\\\\d{10}|322\\\\d{6}|49[0-7]\\\\d{3,9}|(?:[34]0|[68]9)\\\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\\\d|[589][0-7]|6[0-8]|7[0-467]))\\\\d{3,12}\",\n      ,\n      ,\n      ,\n      \"30123456\",\n      ,\n      ,\n      [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      [2, 3, 4]\n    ], [, , \"16[023]\\\\d{7,8}|1(?:5310|7[0-57-9]\\\\d)\\\\d{6}|1(?:5[0-25-9]|76)\\\\d{8}\", , , , \"15123456789\", , , [10, 11]], [, , \"800\\\\d{7,12}\", , , , \"8001234567890\", , , [10, 11, 12, 13, 14, 15]], [, , \"(?:137[7-9]|900(?:[135]|9\\\\d))\\\\d{6}\", , , , \"9001234567\", , , [10, 11]], [, , \"180\\\\d{5,11}|13(?:7[1-6]\\\\d\\\\d|8)\\\\d{4}\", , , , \"18012345\", , , [7, 8, 9, 10, 11, 12, 13, 14]], [, , \"700\\\\d{8}\", , , , \"70012345678\", , , [11]], [, , , , , , , , , [-1]], \"DE\", 49, \"00\", \"0\", , , \"0\", , , , [\n      [\n        ,\n        \"(\\\\d{2})(\\\\d{3,13})\",\n        \"$1 $2\",\n        [\"3[02]|40|[68]9\"],\n        \"0$1\"\n      ],\n      [, \"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"],\n      [\n        ,\n        \"(\\\\d{4})(\\\\d{2,11})\",\n        \"$1 $2\",\n        [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\n        \"0$1\"\n      ],\n      [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"],\n      [, \"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"],\n      [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"],\n      [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[03568]\", \"15(?:[0568]|31)\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]\n    ], , [, , \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\", , , , \"16412345\", , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], , , [, , , , , , , , , [-1]], [, , \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\", , , , \"18500123456\", , , [8, 9, 10, 11, 12, 13, 14]], , , [\n      ,\n      ,\n      \"1(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\\\d{7,8}|15(?:(?:[03-68]00|113)\\\\d|2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"177991234567\",\n      ,\n      ,\n      [12, 13]\n    ]],\n    DJ: [, [, , \"(?:2\\\\d|77)\\\\d{6}\", , , , , , , [8]], [, , \"2(?:1[2-5]|7[45])\\\\d{5}\", , , , \"21360003\"], [, , \"77\\\\d{6}\", , , , \"77831001\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"DJ\", 253, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    DK: [, [, , \"[2-9]\\\\d{7}\", , , , , , , [8]], [\n      ,\n      ,\n      \"(?:(?:2\\\\d|9[1-46-9])\\\\d|3(?:[0-37]\\\\d|4[013]|5[0-58]|6[01347-9]|8[0-8]|9[0-79])|4(?:[0-25]\\\\d|[34][02-9]|6[013-579]|7[013579]|8[0-47]|9[0-27])|5(?:[0-36]\\\\d|4[0146-9]|5[03-57-9]|7[0568]|8[0-358]|9[0-69])|6(?:[013578]\\\\d|2[0-68]|4[02-8]|6[01689]|9[015689])|7(?:[0-69]\\\\d|7[03-9]|8[0147])|8(?:[16-9]\\\\d|2[0-58]))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"32123456\"\n    ], [, , \"(?:[2-7]\\\\d|8[126-9]|9[1-46-9])\\\\d{6}\", , , , \"34412345\"], [, , \"80\\\\d{6}\", , , , \"80123456\"], [, , \"90\\\\d{6}\", , , , \"90123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"DK\", 45, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    DM: [, [, , \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\\\d{4}\", , , , \"7674201234\", , , , [7]], [\n      ,\n      ,\n      \"767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"7672251234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"DM\", 1, \"011\", \"1\", , , \"([2-7]\\\\d{6})$|1\", \"767$1\", , , , , [, , , , , , , , , [-1]], , \"767\", [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]]],\n    DO: [\n      ,\n      [, , \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [, , \"8(?:[04]9[2-9]\\\\d\\\\d|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d\\\\d|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\\\d{4}\", , , , \"8092345678\", , , , [7]],\n      [\n        ,\n        ,\n        \"8[024]9[2-9]\\\\d{6}\",\n        ,\n        ,\n        ,\n        \"8092345678\",\n        ,\n        ,\n        ,\n        [7]\n      ],\n      [, , \"8(?:00(?:14|[2-9]\\\\d)|(?:33|44|55|66|77|88)[2-9]\\\\d)\\\\d{5}\", , , , \"8002123456\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , , , , , , , , [-1]],\n      \"DO\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"1\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"8001|8[024]9\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    DZ: [, [, , \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\", , , , , , , [8, 9]], [, , \"9619\\\\d{5}|(?:1\\\\d|2[013-79]|3[0-8]|4[013-689])\\\\d{6}\", , , , \"12345678\"], [, , \"(?:5(?:4[0-29]|5\\\\d|6[0-3])|6(?:[569]\\\\d|7[0-6])|7[7-9]\\\\d)\\\\d{6}\", , , , \"551234567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"80[3-689]1\\\\d{5}\", , , , \"808123456\", , , [9]], [, , \"80[12]1\\\\d{5}\", , , , \"801123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"98[23]\\\\d{6}\", , , , \"983123456\", , , [9]], \"DZ\", 213, \"00\", \"0\", , , \"0\", , , , [[\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"[1-4]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    EC: [, [, , \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\", , , , , , , [8, 9, 10, 11], [7]], [, , \"[2-7][2-7]\\\\d{6}\", , , , \"22123456\", , , [8], [7]], [, , \"964[0-2]\\\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\\\d)\\\\d{6}\", , , , \"991234567\", , , [9]], [, , \"1800\\\\d{7}|1[78]00\\\\d{6}\", , , , \"18001234567\", , , [10, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , \"[2-7]890\\\\d{4}\", , , , \"28901234\", , , [8]], \"EC\", 593, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-7]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-7]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    EE: [\n      ,\n      [, , \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\", , , , , , , [7, 8, 10]],\n      [, , \"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\", , , , \"3212345\", , , [7]],\n      [, , \"(?:5\\\\d{5}|8(?:1(?:0(?:0(?:00|[178]\\\\d)|[3-9]\\\\d\\\\d)|(?:1(?:0[2-6]|1\\\\d)|(?:2[0-59]|[3-79]\\\\d)\\\\d)\\\\d)|2(?:0(?:0(?:00|4\\\\d)|(?:19|[2-7]\\\\d)\\\\d)|(?:(?:[124-69]\\\\d|3[5-9])\\\\d|7(?:[0-79]\\\\d|8[13-9])|8(?:[2-6]\\\\d|7[01]))\\\\d)|[349]\\\\d{4}))\\\\d\\\\d|5(?:(?:[02]\\\\d|5[0-478])\\\\d|1(?:[0-8]\\\\d|95)|6(?:4[0-4]|5[1-589]))\\\\d{3}\", , , , \"51234567\", , , [7, 8]],\n      [\n        ,\n        ,\n        \"800(?:(?:0\\\\d\\\\d|1)\\\\d|[2-9])\\\\d{3}\",\n        ,\n        ,\n        ,\n        \"80012345\"\n      ],\n      [, , \"(?:40\\\\d\\\\d|900)\\\\d{4}\", , , , \"9001234\", , , [7, 8]],\n      [, , , , , , , , , [-1]],\n      [, , \"70[0-2]\\\\d{5}\", , , , \"70012345\", , , [8]],\n      [, , , , , , , , , [-1]],\n      \"EE\",\n      372,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],\n      ,\n      [\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        [-1]\n      ],\n      ,\n      ,\n      [, , \"800[2-9]\\\\d{3}\", , , , , , , [7]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    EG: [, [, , \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\", , , , , , , [8, 9, 10], [6, 7]], [, , \"13[23]\\\\d{6}|(?:15|57)\\\\d{6,7}|(?:2\\\\d|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\\\d{7}\", , , , \"234567890\", , , [8, 9], [6, 7]], [, , \"1[0-25]\\\\d{8}\", , , , \"1001234567\", , , [10]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"900\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"EG\", 20, \"00\", \"0\", , , \"0\", , , , [[\n      ,\n      \"(\\\\d)(\\\\d{7,8})\",\n      \"$1 $2\",\n      [\"[23]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{8})\", \"$1 $2\", [\"1\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    EH: [, [, , \"[5-8]\\\\d{8}\", , , , , , , [9]], [, , \"528[89]\\\\d{5}\", , , , \"528812345\"], [, , \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\", , , , \"650123456\"], [, , \"80[0-7]\\\\d{6}\", , , , \"801234567\"], [, , \"89\\\\d{7}\", , , , \"891234567\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , \"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\", , , , \"592401234\"], \"EH\", 212, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , \"528[89]\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    ER: [, [, , \"[178]\\\\d{6}\", , , , , , , [7], [6]], [, , \"(?:1(?:1[12568]|[24]0|55|6[146])|8\\\\d\\\\d)\\\\d{4}\", , , , \"8370362\", , , , [6]], [, , \"(?:17[1-3]|7\\\\d\\\\d)\\\\d{4}\", , , , \"7123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ER\", 291, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]], , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    ES: [\n      ,\n      [, , \"[5-9]\\\\d{8}\", , , , , , , [9]],\n      [, , \"96906(?:0[0-8]|1[1-9]|[2-9]\\\\d)\\\\d\\\\d|9(?:69(?:0[0-57-9]|[1-9]\\\\d)|73(?:[0-8]\\\\d|9[1-9]))\\\\d{4}|(?:8(?:[1356]\\\\d|[28][0-8]|[47][1-9])|9(?:[135]\\\\d|[268][0-8]|4[1-9]|7[124-9]))\\\\d{6}\", , , , \"810123456\"],\n      [, , \"(?:590[16]00\\\\d|9(?:6906(?:09|10)|7390\\\\d\\\\d))\\\\d\\\\d|(?:6\\\\d|7[1-48])\\\\d{7}\", , , , \"612345678\"],\n      [, , \"[89]00\\\\d{6}\", , , , \"800123456\"],\n      [, , \"80[367]\\\\d{6}\", , , , \"803123456\"],\n      [, , \"90[12]\\\\d{6}\", , , , \"901123456\"],\n      [, , \"70\\\\d{7}\", , , , \"701234567\"],\n      [, , , , , , , , , [-1]],\n      \"ES\",\n      34,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{4})\", \"$1\", [\"905\"]], [, \"(\\\\d{6})\", \"$1\", [\"[79]9\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]],\n      [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"51\\\\d{7}\", , , , \"511234567\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    ET: [, [, , \"(?:11|[2-579]\\\\d)\\\\d{7}\", , , , , , , [9], [7]], [\n      ,\n      ,\n      \"11667[01]\\\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8]|7\\\\d)|5(?:1[578]|44|5[0-4])|6(?:1[578]|2[69]|39|4[5-7]|5[0-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"111112345\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"700[1-9]\\\\d{5}|(?:7(?:0[1-9]|1[0-8]|22|77|86|99)|9\\\\d\\\\d)\\\\d{6}\", , , , \"911234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ET\", 251, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    FI: [\n      ,\n      [, , \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]],\n      [\n        ,\n        ,\n        \"1[3-7][1-8]\\\\d{3,6}|(?:19[1-8]|[23568][1-8]\\\\d|9(?:00|[1-8]\\\\d))\\\\d{2,6}\",\n        ,\n        ,\n        ,\n        \"131234567\",\n        ,\n        ,\n        [5, 6, 7, 8, 9]\n      ],\n      [, , \"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\", , , , \"412345678\", , , [6, 7, 8, 9, 10]],\n      [, , \"800\\\\d{4,6}\", , , , \"800123456\", , , [7, 8, 9]],\n      [, , \"[67]00\\\\d{5,6}\", , , , \"600123456\", , , [8, 9]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"FI\",\n      358,\n      \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      \"00\",\n      ,\n      [[, \"(\\\\d{5})\", \"$1\", [\"75[12]\"], \"0$1\"], [, \"(\\\\d{5})\", \"$1\", [\"20[2-59]\"], \"0$1\"], [, \"(\\\\d{6})\", \"$1\", [\"11\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]0|[68])0|70[07-9]\"], \"0$1\"], [\n        ,\n        \"(\\\\d{2})(\\\\d{4,8})\",\n        \"$1 $2\",\n        [\"[14]|2[09]|50|7[135]\"],\n        \"0$1\"\n      ], [, \"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"]],\n      [[, \"(\\\\d{5})\", \"$1\", [\"20[2-59]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]0|[68])0|70[07-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[14]|2[09]|50|7[135]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"]],\n      [, , , , , , , , , [-1]],\n      1,\n      \"1[03-79]|[2-9]\",\n      [, , \"20(?:2[023]|9[89])\\\\d{1,6}|(?:60[12]\\\\d|7099)\\\\d{4,5}|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:[1-3]00|7(?:0[1-5]\\\\d\\\\d|5[03-9]))\\\\d{3,7}\"],\n      [, , \"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\", , , , \"10112345\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    FJ: [\n      ,\n      [, , \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\", , , , , , , [7, 11]],\n      [, , \"603\\\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\\\d{5}\", , , , \"3212345\", , , [7]],\n      [, , \"(?:[279]\\\\d|45|5[01568]|8[034679])\\\\d{5}\", , , , \"7012345\", , , [7]],\n      [, , \"0800\\\\d{7}\", , , , \"08001234567\", , , [11]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"FJ\",\n      679,\n      \"0(?:0|52)\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      \"00\",\n      ,\n      [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    FK: [, [, , \"[2-7]\\\\d{4}\", , , , , , , [5]], [, , \"[2-47]\\\\d{4}\", , , , \"31234\"], [, , \"[56]\\\\d{4}\", , , , \"51234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FK\", 500, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    FM: [, [, , \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\", , , , , , , [7]], [\n      ,\n      ,\n      \"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\\\d)\\\\d)\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"3201234\"\n    ], [, , \"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\\\d)\\\\d)\\\\d{3}\", , , , \"3501234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FM\", 691, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    FO: [, [, , \"[2-9]\\\\d{5}\", , , , , , , [6]], [, , \"(?:20|[34]\\\\d|8[19])\\\\d{4}\", , , , \"201234\"], [, , \"(?:[27][1-9]|5\\\\d|9[16])\\\\d{4}\", , , , \"211234\"], [, , \"80[257-9]\\\\d{3}\", , , , \"802123\"], [\n      ,\n      ,\n      \"90(?:[13-5][15-7]|2[125-7]|9\\\\d)\\\\d\\\\d\",\n      ,\n      ,\n      ,\n      \"901123\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:6[0-36]|88)\\\\d{4}\", , , , \"601234\"], \"FO\", 298, \"00\", , , , \"(10(?:01|[12]0|88))\", , , , [[, \"(\\\\d{6})\", \"$1\", [\"[2-9]\"], , \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    FR: [, [, , \"[1-9]\\\\d{8}\", , , , , , , [9]], [, , \"(?:26[013-9]|59[1-35-9])\\\\d{6}|(?:[13]\\\\d|2[0-57-9]|4[1-9]|5[0-8])\\\\d{7}\", , , , \"123456789\"], [, , \"(?:6(?:[0-24-8]\\\\d|3[0-8]|9[589])|7[3-9]\\\\d)\\\\d{6}\", , , , \"612345678\"], [, , \"80[0-5]\\\\d{6}\", , , , \"801234567\"], [\n      ,\n      ,\n      \"836(?:0[0-36-9]|[1-9]\\\\d)\\\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\\\d|8[0-35-9])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"891123456\"\n    ], [, , \"8(?:1[01]|2[0156]|4[024]|84)\\\\d{6}\", , , , \"884012345\"], [, , , , , , , , , [-1]], [, , \"9\\\\d{8}\", , , , \"912345678\"], \"FR\", 33, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})\", \"$1\", [\"10\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]], [, , \"80[6-9]\\\\d{6}\", , , , \"806123456\"], , , [, , , , , , , , , [-1]]],\n    GA: [, [, , \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\", , , , , , , [7, 8]], [, , \"[01]1\\\\d{6}\", , , , \"01441234\", , , [8]], [, , \"(?:(?:0[2-7]|7[467])\\\\d|6(?:0[0-4]|10|[256]\\\\d))\\\\d{5}|[2-7]\\\\d{6}\", , , , \"06031234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GA\", 241, \"00\", , , , \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\", , , [[, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"0\"]\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GB: [, [, , \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\", , , , , , , [7, 9, 10], [4, 5, 6, 8]], [\n      ,\n      ,\n      \"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0-35])|4(?:(?:[0-5]\\\\d|70)\\\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-3]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"1212345678\",\n      ,\n      ,\n      [9, 10],\n      [4, 5, 6, 7, 8]\n    ], [, , \"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\", , , , \"7400123456\", , , [10]], [, , \"80[08]\\\\d{7}|800\\\\d{6}|8001111\", , , , \"8001234567\"], [, , \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\", , , , \"9012345678\", , , [7, 10]], [, , , , , , , , , [-1]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], [\n      ,\n      ,\n      \"56\\\\d{8}\",\n      ,\n      ,\n      ,\n      \"5612345678\",\n      ,\n      ,\n      [10]\n    ], \"GB\", 44, \"00\", \"0\", \" x\", , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\n      \"[25]|7(?:0|6[02-9])\",\n      \"[25]|7(?:0|6(?:[03-9]|2[356]))\"\n    ], \"0$1\"], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]], , [, , \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", , , , \"7640123456\", , , [10]], 1, , [, , , , , , , , , [-1]], [, , \"(?:3[0347]|55)\\\\d{8}\", , , , \"5512345678\", , , [10]], , , [, , , , , , , , , [-1]]],\n    GD: [, [, , \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [\n      ,\n      ,\n      \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-4]|5[579]|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"4732691234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|49|5[68])|5(?:2[01]|3[3-8])|901)\\\\d{4}\", , , , \"4734031234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], \"GD\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"473$1\", , , , , [, , , , , , , , , [-1]], , \"473\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GE: [, [, , \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\", , , , , , , [9], [6, 7]], [, , \"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\", , , , \"322123456\", , , , [6, 7]], [\n      ,\n      ,\n      \"5(?:(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\\\d|22252[0-4])\\\\d\\\\d|5(?:0(?:0[17]0|505)|1(?:0[01]0|1(?:07|33|51))|2(?:0[02]0|2[25]2)|3(?:0[03]0|3[35]3)|(?:40[04]|900)0|5222)[0-4]\\\\d{3}|(?:5(?:0(?:0(?:0\\\\d|11|22|3[0-6]|44|5[05]|77|88|9[09])|(?:[14]\\\\d|77)\\\\d|22[02])|1(?:1(?:[03][01]|[124]\\\\d|5[2-6]|7[0-4])|4\\\\d\\\\d)|[23]555|4(?:4\\\\d\\\\d|555)|5(?:[0157-9]\\\\d\\\\d|200|333|444)|6[89]\\\\d\\\\d|7(?:[0147-9]\\\\d\\\\d|5(?:00|[57]5))|8(?:0(?:[018]\\\\d|2[0-4])|5(?:55|8[89])|8(?:55|88))|9(?:090|[1-35-9]\\\\d\\\\d))|790\\\\d\\\\d)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"555123456\"\n    ], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"70[67]\\\\d{6}\", , , , \"706123456\"], \"GE\", 995, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"70[67]\\\\d{6}\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GF: [, [\n      ,\n      ,\n      \"(?:[56]94\\\\d|7093)\\\\d{5}|(?:80|9\\\\d)\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [9]\n    ], [, , \"594(?:[02-49]\\\\d|1[0-5]|5[6-9]|6[0-3]|80)\\\\d{4}\", , , , \"594101234\"], [, , \"(?:694(?:[0-249]\\\\d|3[0-8])|7093[0-3])\\\\d{4}\", , , , \"694201234\"], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9(?:(?:396|76\\\\d)\\\\d|476[0-5])\\\\d{4}\", , , , \"976012345\"], \"GF\", 594, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]|9[47]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]]],\n    GG: [\n      ,\n      [, , \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\", , , , , , , [7, 9, 10], [6]],\n      [, , \"1481[25-9]\\\\d{5}\", , , , \"1481256789\", , , [10], [6]],\n      [, , \"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\", , , , \"7781123456\", , , [10]],\n      [, , \"80[08]\\\\d{7}|800\\\\d{6}|8001111\", , , , \"8001234567\"],\n      [, , \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\", , , , \"9012345678\", , , [7, 10]],\n      [, , , , , , , , , [-1]],\n      [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]],\n      [, , \"56\\\\d{8}\", , , , \"5612345678\", , , [10]],\n      \"GG\",\n      44,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"([25-9]\\\\d{5})$|0\",\n      \"1481$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", , , , \"7640123456\", , , [10]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"(?:3[0347]|55)\\\\d{8}\", , , , \"5512345678\", , , [10]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    GH: [, [, , \"(?:[235]\\\\d{3}|800)\\\\d{5}\", , , , , , , [8, 9], [7]], [, , \"3082[0-5]\\\\d{4}|3(?:0(?:[237]\\\\d|8[01])|[167](?:2[0-6]|7\\\\d|80)|2(?:2[0-5]|7\\\\d|80)|3(?:2[0-3]|7\\\\d|80)|4(?:2[013-9]|3[01]|7\\\\d|80)|5(?:2[0-7]|7\\\\d|80)|8(?:2[0-2]|7\\\\d|80)|9(?:[28]0|7\\\\d))\\\\d{5}\", , , , \"302345678\", , , [9], [7]], [\n      ,\n      ,\n      \"(?:2(?:[0346-9]\\\\d|5[67])|5(?:[03-7]\\\\d|9[1-9]))\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"231234567\",\n      ,\n      ,\n      [9]\n    ], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GH\", 233, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[237]|8[0-2]\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [, , , , , , , , , [-1]], , , [, , \"800\\\\d{5}\", , , , , , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GI: [, [\n      ,\n      ,\n      \"(?:[25]\\\\d|60)\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8]\n    ], [, , \"2190[0-2]\\\\d{3}|2(?:0(?:[02]\\\\d|3[01])|16[24-9]|2[2-5]\\\\d)\\\\d{4}\", , , , \"20012345\"], [, , \"5251[0-4]\\\\d{3}|(?:5(?:[146-8]\\\\d\\\\d|250)|60(?:1[01]|6\\\\d))\\\\d{4}\", , , , \"57123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GI\", 350, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GL: [, [, , \"(?:19|[2-689]\\\\d|70)\\\\d{4}\", , , , , , , [6]], [, , \"(?:19|3[1-7]|[68][1-9]|70|9\\\\d)\\\\d{4}\", , , , \"321000\"], [\n      ,\n      ,\n      \"[245]\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"221234\"\n    ], [, , \"80\\\\d{4}\", , , , \"801234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3[89]\\\\d{4}\", , , , \"381234\"], \"GL\", 299, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GM: [\n      ,\n      [, , \"[2-9]\\\\d{6}\", , , , , , , [7]],\n      [, , \"(?:4(?:[23]\\\\d\\\\d|4(?:1[024679]|[6-9]\\\\d))|5(?:5(?:3\\\\d|4[0-7])|6[67]\\\\d|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\", , , , \"5661234\"],\n      [, , \"(?:[23679]\\\\d|4[015]|5[0-489])\\\\d{5}\", , , , \"3012345\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"GM\",\n      220,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    GN: [\n      ,\n      [, , \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\", , , , , , , [8, 9]],\n      [, , \"3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\\\d\\\\d)\\\\d{4}\", , , , \"30241234\", , , [8]],\n      [, , \"6[0-356]\\\\d{7}\", , , , \"601123456\", , , [9]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"722\\\\d{6}\", , , , \"722123456\", , , [9]],\n      \"GN\",\n      224,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    GP: [, [, , \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\", , , , , , , [9]], [, , \"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\", , , , \"590201234\"], [, , \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\", , , , \"690001234\"], [\n      ,\n      ,\n      \"80[0-5]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"800012345\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\", , , , \"976012345\"], \"GP\", 590, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GQ: [, [, , \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\", , , , , , , [9]], [, , \"33[0-24-9]\\\\d[46]\\\\d{4}|3(?:33|5\\\\d)\\\\d[7-9]\\\\d{4}\", , , , \"333091234\"], [\n      ,\n      ,\n      \"(?:222|55\\\\d)\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"222123456\"\n    ], [, , \"80\\\\d[1-9]\\\\d{5}\", , , , \"800123456\"], [, , \"90\\\\d[1-9]\\\\d{5}\", , , , \"900123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GQ\", 240, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GR: [, [, , \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\", , , , , , , [10, 11, 12]], [\n      ,\n      ,\n      \"2(?:1\\\\d\\\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"2123456789\",\n      ,\n      ,\n      [10]\n    ], [, , \"68[57-9]\\\\d{7}|(?:69|94)\\\\d{8}\", , , , \"6912345678\", , , [10]], [, , \"800\\\\d{7,9}\", , , , \"8001234567\"], [, , \"90[19]\\\\d{7}\", , , , \"9091234567\", , , [10]], [, , \"8(?:0[16]|12|[27]5|50)\\\\d{7}\", , , , \"8011234567\", , , [10]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], [, , , , , , , , , [-1]], \"GR\", 30, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\n      \"$1 $2 $3\",\n      [\"8\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"5005000\\\\d{3}\", , , , \"5005000123\", , , [10]], , , [, , , , , , , , , [-1]]],\n    GT: [, [, , \"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\", , , , , , , [8, 11]], [, , \"[267][2-9]\\\\d{6}\", , , , \"22456789\", , , [8]], [, , \"(?:[3-5]\\\\d\\\\d|80[0-4])\\\\d{5}\", , , , \"51234567\", , , [8]], [, , \"18[01]\\\\d{8}\", , , , \"18001112222\", , , [11]], [, , \"19\\\\d{9}\", , , , \"19001112222\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GT\", 502, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-8]\"]], [\n      ,\n      \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"1\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GU: [, [, , \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"671(?:2\\\\d\\\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[478])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\", , , , \"6713001234\", , , , [7]], [\n      ,\n      ,\n      \"671(?:2\\\\d\\\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[478])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"6713001234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"GU\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"671$1\", , 1, , , [, , , , , , , , , [-1]], , \"671\", [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]]],\n    GW: [, [, , \"[49]\\\\d{8}|4\\\\d{6}\", , , , , , , [7, 9]], [, , \"443\\\\d{6}\", , , , \"443201234\", , , [9]], [, , \"9(?:5\\\\d|6[569]|77)\\\\d{6}\", , , , \"955012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"40\\\\d{5}\", , , , \"4012345\", , , [7]], \"GW\", 245, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    GY: [, [, , \"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\", , , , , , , [7]], [\n      ,\n      ,\n      \"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|50[0-6]|77[1-57])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2201234\"\n    ], [, , \"510\\\\d{4}|(?:6\\\\d|7[0-5])\\\\d{5}\", , , , \"6091234\"], [, , \"(?:289|8(?:00|6[28]|88|99))\\\\d{4}\", , , , \"2891234\"], [, , \"9008\\\\d{3}\", , , , \"9008123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"515\\\\d{4}\", , , , \"5151234\"], \"GY\", 592, \"001\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    HK: [, [, , \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\", , , , , , , [5, 6, 7, 8, 9, 11]], [\n      ,\n      ,\n      \"(?:2(?:[13-9]\\\\d|2[013-9])\\\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\\\d|8(?:4[0-8]|[579]\\\\d|6[0-2]))|58(?:0[1-9]|1[2-9]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"21234567\",\n      ,\n      ,\n      [8]\n    ], [, , \"(?:4(?:44[0-25-9]|6(?:1[0-7]|4[0-57-9]|6[0-4])|7(?:4[0-2]|6[0-5]))|5(?:73[0-6]|95[0-8])|6(?:26[013-8]|66[0-3])|70(?:7[1-8]|8[0-4])|84(?:4[0-2]|8[0-35-9])|9(?:29[013-9]|39[014-9]|59[0-4]|899))\\\\d{4}|(?:4(?:4[0-35-9]|6[02357-9]|7[05])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\\\d|[268][0-57-9]|7[0-79])|70[1-49]|84[0-39]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\\\d))\\\\d{5}\", , , , \"51234567\", , , [8]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [\n      ,\n      ,\n      \"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\",\n      ,\n      ,\n      ,\n      \"90012345678\",\n      ,\n      ,\n      [5, 6, 7, 8, 11]\n    ], [, , , , , , , , , [-1]], [, , \"8(?:1[0-4679]\\\\d|2(?:[0-36]\\\\d|7[0-4])|3(?:[034]\\\\d|2[09]|70))\\\\d{4}\", , , , \"81123456\", , , [8]], [, , , , , , , , , [-1]], \"HK\", 852, \"00(?:30|5[09]|[126-9]?)\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]], , [\n      ,\n      ,\n      \"7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\\\d|1[18]|7[27-9])|3(?:[0-38]\\\\d|7[0-369]|9[2357-9])|47\\\\d|5(?:[178]\\\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\\\d)|7(?:[27]\\\\d|8[7-9])|8(?:[23689]\\\\d|7[1-9])|9(?:[025]\\\\d|6[0-246-8]|7[0-36-9]|8[238]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"71123456\",\n      ,\n      ,\n      [8]\n    ], , , [, , , , , , , , , [-1]], [, , \"30(?:0[1-9]|[15-7]\\\\d|2[047]|89)\\\\d{4}\", , , , \"30161234\", , , [8]], , , [, , , , , , , , , [-1]]],\n    HN: [, [, , \"8\\\\d{10}|[237-9]\\\\d{7}\", , , , , , , [8, 11]], [\n      ,\n      ,\n      \"2(?:2(?:0[0-59]|1[1-9]|[23]\\\\d|4[02-7]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[578]|2[3-59]|3[13-9]|4[0-68]|5[1-3589])|5(?:0[2357-9]|1[1-356]|4[03-5]|5\\\\d|6[014-69]|7[04]|80)|6(?:[056]\\\\d|17|2[067]|3[047]|4[0-378]|[78][0-8]|9[01])|7(?:0[5-79]|6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"22123456\",\n      ,\n      ,\n      [8]\n    ], [, , \"[37-9]\\\\d{7}\", , , , \"91234567\", , , [8]], [, , \"8002\\\\d{7}\", , , , \"80021234567\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"HN\", 504, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]], [, , , , , , , , , [-1]], , , [, , \"8002\\\\d{7}\", , , , , , , [11]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    HR: [, [, , \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\", , , , , , , [6, 7, 8, 9]], [\n      ,\n      ,\n      \"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\",\n      ,\n      ,\n      ,\n      \"12345678\",\n      ,\n      ,\n      [8, 9],\n      [6, 7]\n    ], [, , \"9(?:(?:0[1-9]|[12589]\\\\d)\\\\d\\\\d|7(?:[0679]\\\\d\\\\d|5(?:[01]\\\\d|44|55|77|9[5-79])))\\\\d{4}|98\\\\d{6}\", , , , \"921234567\", , , [8, 9]], [, , \"80\\\\d{5,7}\", , , , \"800123456\", , , [7, 8, 9]], [, , \"6[01459]\\\\d{6}|6[01]\\\\d{4,5}\", , , , \"611234\", , , [6, 7, 8]], [, , , , , , , , , [-1]], [, , \"7[45]\\\\d{6}\", , , , \"74123456\", , , [8]], [, , , , , , , , , [-1]], \"HR\", 385, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\n      ,\n      \"(\\\\d)(\\\\d{4})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"1\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6|7[245]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-57]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"62\\\\d{6,7}|72\\\\d{6}\", , , , \"62123456\", , , [8, 9]], , , [, , , , , , , , , [-1]]],\n    HT: [, [, , \"(?:[2-489]\\\\d|55)\\\\d{6}\", , , , , , , [8]], [, , \"2(?:2\\\\d|5[1-5]|81|9[149])\\\\d{5}\", , , , \"22453300\"], [, , \"(?:[34]\\\\d|55)\\\\d{6}\", , , , \"34101234\"], [\n      ,\n      ,\n      \"8\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"80012345\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9(?:[67][0-4]|8[0-3589]|9\\\\d)\\\\d{5}\", , , , \"98901234\"], \"HT\", 509, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-589]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    HU: [, [, , \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\", , , , , , , [8, 9], [6, 7]], [, , \"(?:1\\\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\\\d{6}\", , , , \"12345678\", , , [8], [6, 7]], [, , \"(?:[257]0|3[01])\\\\d{7}\", , , , \"201234567\", , , [9]], [\n      ,\n      ,\n      \"(?:[48]0\\\\d|680[29])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"80123456\"\n    ], [, , \"9[01]\\\\d{6}\", , , , \"90123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"21\\\\d{7}\", , , , \"211234567\", , , [9]], \"HU\", 36, \"00\", \"06\", , , \"06\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]], , [, , , , , , , , , [-1]], , , [, , \"(?:[48]0\\\\d|680[29])\\\\d{5}\"], [, , \"38\\\\d{7}\", , , , \"381234567\", , , [9]], , , [, , , , , , , , , [-1]]],\n    ID: [, [\n      ,\n      ,\n      \"00[1-9]\\\\d{9,14}|(?:[1-36]|8\\\\d{5})\\\\d{6}|00\\\\d{9}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\n      [5, 6]\n    ], [\n      ,\n      ,\n      \"2[124]\\\\d{7,8}|619\\\\d{8}|2(?:1(?:14|500)|2\\\\d{3})\\\\d{3}|61\\\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}\",\n      ,\n      ,\n      ,\n      \"218350123\",\n      ,\n      ,\n      [7, 8, 9, 10, 11],\n      [5, 6]\n    ], [, , \"8[1-35-9]\\\\d{7,10}\", , , , \"812345678\", , , [9, 10, 11, 12]], [, , \"00(?:1803\\\\d{5,11}|7803\\\\d{7})|(?:177\\\\d|800)\\\\d{5,7}\", , , , \"8001234567\", , , [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [, , \"809\\\\d{7}\", , , , \"8091234567\", , , [10]], [, , \"804\\\\d{7}\", , , , \"8041234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ID\", 62, \"00[89]\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [, \"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{5,8})\",\n      \"$1 $2\",\n      [\"[2-79]\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3 $4\", [\"001\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [\n      ,\n      \"(\\\\d{2})(\\\\d{5,9})\",\n      \"$1 $2\",\n      [\"2[124]|[36]1\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], [, , , , , , , , , [-1]], , , [, , \"001803\\\\d{5,11}|(?:007803\\\\d|8071)\\\\d{6}\", , , , , , , [10, 11, 12, 13, 14, 15, 16, 17]], [\n      ,\n      ,\n      \"(?:1500|8071\\\\d{3})\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"8071123456\",\n      ,\n      ,\n      [7, 10]\n    ], , , [, , , , , , , , , [-1]]],\n    IE: [, [, , \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\", , , , , , , [7, 8, 9, 10], [5, 6]], [, , \"(?:1\\\\d|21)\\\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\\\d|7)|5(?:0[45]|1\\\\d|8)|6(?:1\\\\d|[237-9])|9(?:1\\\\d|[35-9]))\\\\d{5}|(?:23|4(?:[1-469]|8\\\\d)|5[23679]|6[4-6]|7[14]|9[04])\\\\d{7}\", , , , \"2212345\", , , , [5, 6]], [, , \"8(?:22|[35-9]\\\\d)\\\\d{6}\", , , , \"850123456\", , , [9]], [, , \"1800\\\\d{6}\", , , , \"1800123456\", , , [10]], [\n      ,\n      ,\n      \"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"1520123456\",\n      ,\n      ,\n      [10]\n    ], [, , \"18[59]0\\\\d{6}\", , , , \"1850123456\", , , [10]], [, , \"700\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"76\\\\d{7}\", , , , \"761234567\", , , [9]], \"IE\", 353, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"81\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"18[59]0\\\\d{6}\", , , , , , , [10]], [, , \"818\\\\d{6}\", , , , \"818123456\", , , [9]], , , [, , \"88210[1-9]\\\\d{4}|8(?:[35-79]5\\\\d\\\\d|8(?:[013-9]\\\\d\\\\d|2(?:[01][1-9]|[2-9]\\\\d)))\\\\d{5}\", , , , \"8551234567\", , , [10]]],\n    IL: [, [, , \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\", , , , , , , [\n      7,\n      8,\n      9,\n      10,\n      11,\n      12\n    ]], [, , \"153\\\\d{8,9}|29[1-9]\\\\d{5}|(?:2[0-8]|[3489]\\\\d)\\\\d{6}\", , , , \"21234567\", , , [8, 11, 12], [7]], [, , \"55(?:410|57[0-289])\\\\d{4}|5(?:(?:[0-2][02-9]|[36]\\\\d|[49][2-9]|8[3-7])\\\\d|5(?:01|2\\\\d|3[0-3]|4[34]|5[0-25689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\\\d{5}\", , , , \"502345678\", , , [9]], [, , \"1(?:255|80[019]\\\\d{3})\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"1212\\\\d{4}|1(?:200|9(?:0[0-2]|19))\\\\d{6}\", , , , \"1919123456\", , , [8, 10]], [, , \"1700\\\\d{6}\", , , , \"1700123456\", , , [10]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"7(?:38(?:0\\\\d|5[0-2569]|88)|8(?:33|55|77|81)\\\\d)\\\\d{4}|7(?:18|2[23]|3[237]|47|6[258]|7\\\\d|82|9[2-9])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"771234567\",\n      ,\n      ,\n      [9]\n    ], \"IL\", 972, \"0(?:0|1[2-9])\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [, \"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]], , [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      \"1700\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [10]\n    ], [, , \"1599\\\\d{6}\", , , , \"1599123456\", , , [10]], , , [, , \"151\\\\d{8,9}\", , , , \"15112340000\", , , [11, 12]]],\n    IM: [\n      ,\n      [, , \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", , , , , , , [10], [6]],\n      [, , \"1624(?:230|[5-8]\\\\d\\\\d)\\\\d{3}\", , , , \"1624756789\", , , , [6]],\n      [, , \"76245[06]\\\\d{4}|7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\", , , , \"7924123456\"],\n      [, , \"808162\\\\d{4}\", , , , \"8081624567\"],\n      [, , \"8(?:440[49]06|72299\\\\d)\\\\d{3}|(?:8(?:45|70)|90[0167])624\\\\d{4}\", , , , \"9016247890\"],\n      [, , , , , , , , , [-1]],\n      [, , \"70\\\\d{8}\", , , , \"7012345678\"],\n      [, , \"56\\\\d{8}\", , , , \"5612345678\"],\n      \"IM\",\n      44,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"([25-8]\\\\d{5})$|0\",\n      \"1624$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"74576|(?:16|7[56])24\",\n      [, , , , , , , , , [-1]],\n      [, , \"3440[49]06\\\\d{3}|(?:3(?:08162|3\\\\d{4}|45624|7(?:0624|2299))|55\\\\d{4})\\\\d{4}\", , , , \"5512345678\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    IN: [, [, , \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\", , , , , , , [8, 9, 10, 11, 12, 13], [6, 7]], [\n      ,\n      ,\n      \"2717(?:[2-7]\\\\d|95)\\\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\\\d|4(?:20[24]|72[2-8])|552[1-7])\\\\d{6}|(?:11|33|4[04]|80)[2-7]\\\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\\\d)\\\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\\\d[2-7]\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"7410410123\",\n      ,\n      ,\n      [10],\n      [6, 7, 8]\n    ], [\n      ,\n      ,\n      \"(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\\\d|7[02-8])\\\\d{5}|(?:6(?:[09]\\\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\\\d\\\\d)\\\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\\\d|7(?:[235689]\\\\d|4[0189]))|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]|881))[0189]\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"8123456789\",\n      ,\n      ,\n      [10]\n    ], [, , \"000800\\\\d{7}|1(?:600\\\\d{6}|80(?:0\\\\d{4,9}|3\\\\d{9}))\", , , , \"1800123456\"], [, , \"186[12]\\\\d{9}\", , , , \"1861123456789\", , , [13]], [, , \"1860\\\\d{7}\", , , , \"18603451234\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IN\", 91, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{7})\", \"$1\", [\"575\"]], [, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], , , 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], , , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"140\"],\n      ,\n      ,\n      1\n    ], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\", , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\n        \"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\n        \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\n        \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"\n      ],\n      \"0$1\",\n      ,\n      1\n    ], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\n      \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\n      \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\n      \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"\n    ], \"0$1\", , 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], , , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3 $4\",\n      [\"0\"]\n    ], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"], , , 1]], [[, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], , , 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], , , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], , , 1], [\n      ,\n      \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\n      \"0$1\",\n      ,\n      1\n    ], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\n        \"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\n        \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\n        \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"\n      ],\n      \"0$1\",\n      ,\n      1\n    ], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\n      \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\n      \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\n      \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"\n    ], \"0$1\", , 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], , , 1], [\n      ,\n      \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3 $4\",\n      [\"18\"],\n      ,\n      ,\n      1\n    ]], [, , , , , , , , , [-1]], , , [, , \"1(?:600\\\\d{6}|800\\\\d{4,9})|(?:000800|18(?:03\\\\d\\\\d|6(?:0|[12]\\\\d\\\\d)))\\\\d{7}\"], [, , \"140\\\\d{7}\", , , , \"1409305260\", , , [10]], , , [, , , , , , , , , [-1]]],\n    IO: [, [, , \"3\\\\d{6}\", , , , , , , [7]], [, , \"37\\\\d{5}\", , , , \"3709100\"], [, , \"38\\\\d{5}\", , , , \"3801234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IO\", 246, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    IQ: [, [\n      ,\n      ,\n      \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 9, 10],\n      [6, 7]\n    ], [, , \"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\", , , , \"12345678\", , , [8, 9], [6, 7]], [, , \"7[3-9]\\\\d{8}\", , , , \"7912345678\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IQ\", 964, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    IR: [\n      ,\n      [, , \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\", , , , , , , [4, 5, 6, 7, 10], [8]],\n      [, , \"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\\\d{7}|[16]\\\\d{3}(?:\\\\d{4})?|[289]\\\\d{3}(?:\\\\d(?:\\\\d{3})?)?)|94(?:000[09]|(?:12\\\\d|30[0-2])\\\\d|2(?:121|[2689]0\\\\d)|4(?:111|40\\\\d))\\\\d{4}\", , , , \"2123456789\", , , [6, 7, 10], [4, 5, 8]],\n      [, , \"9(?:(?:0(?:[0-35]\\\\d|4[4-6])|(?:[13]\\\\d|2[0-3])\\\\d)\\\\d|9(?:[0-46]\\\\d\\\\d|5[15]0|8(?:[12]\\\\d|88)|9(?:0[0-3]|[19]\\\\d|21|69|77|8[7-9])))\\\\d{5}\", , , , \"9123456789\", , , [10]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"IR\",\n      98,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"9(?:4440\\\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))\", , , , , , , [4, 5, 10]],\n      [\n        ,\n        ,\n        \"96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])\",\n        ,\n        ,\n        ,\n        \"9601\",\n        ,\n        ,\n        [4, 5]\n      ],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    IS: [, [, , \"(?:38\\\\d|[4-9])\\\\d{6}\", , , , , , , [7, 9]], [, , \"(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\\\d{4}\", , , , \"4101234\", , , [7]], [, , \"(?:38[589]\\\\d\\\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\\\d)|7(?:5[057]|[6-9]\\\\d)|8(?:2[0-59]|[3-69]\\\\d|8[238]))\\\\d{4}\", , , , \"6111234\"], [, , \"80[0-8]\\\\d{4}\", , , , \"8001234\", , , [7]], [\n      ,\n      ,\n      \"90(?:0\\\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"9001234\",\n      ,\n      ,\n      [7]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"49[0-24-79]\\\\d{4}\", , , , \"4921234\", , , [7]], \"IS\", 354, \"00|1(?:0(?:01|[12]0)|100)\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"809\\\\d{4}\", , , , \"8091234\", , , [7]], , , [, , \"(?:689|8(?:7[18]|80)|95[48])\\\\d{4}\", , , , \"6891234\", , , [7]]],\n    IT: [, [, , \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\", , , , , , , [6, 7, 8, 9, 10, 11, 12]], [\n      ,\n      ,\n      \"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\",\n      ,\n      ,\n      ,\n      \"0212345678\",\n      ,\n      ,\n      [6, 7, 8, 9, 10, 11]\n    ], [, , \"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\", , , , \"3123456789\", , , [9, 10]], [, , \"80(?:0\\\\d{3}|3)\\\\d{3}\", , , , \"800123456\", , , [6, 9]], [, , \"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", , , , \"899123456\", , , [6, 8, 9, 10]], [, , \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", , , , \"848123456\", , , [6, 9]], [, , \"1(?:78\\\\d|99)\\\\d{6}\", , , , \"1781234567\", , , [9, 10]], [, , \"55\\\\d{8}\", , , , \"5512345678\", , , [10]], \"IT\", 39, \"00\", , , , , , , , [\n      [, \"(\\\\d{4,5})\", \"$1\", [\"1(?:0|9[246])\", \"1(?:0|9(?:2[2-9]|[46]))\"]],\n      [, \"(\\\\d{6})\", \"$1\", [\"1(?:1|92)\"]],\n      [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]],\n      [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],\n      [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]],\n      [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]|43\"]],\n      [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]],\n      [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]],\n      [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]],\n      [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]\n    ], [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n      \"$1 $2 $3\",\n      [\"1(?:44|[679])|[378]|43\"]\n    ], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], [, , , , , , , , , [-1]], 1, , [, , \"848\\\\d{6}\", , , , , , , [9]], [, , , , , , , , , [-1]], , , [, , \"3[2-8]\\\\d{9,10}\", , , , \"33101234501\", , , [11, 12]]],\n    JE: [, [, , \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", , , , , , , [10], [6]], [, , \"1534[0-24-8]\\\\d{5}\", , , , \"1534456789\", , , , [6]], [\n      ,\n      ,\n      \"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"7797712345\"\n    ], [, , \"80(?:07(?:35|81)|8901)\\\\d{4}\", , , , \"8007354567\"], [, , \"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\", , , , \"9018105678\"], [, , , , , , , , , [-1]], [, , \"701511\\\\d{4}\", , , , \"7015115678\"], [, , \"56\\\\d{8}\", , , , \"5612345678\"], \"JE\", 44, \"00\", \"0\", , , \"([0-24-8]\\\\d{5})$|0\", \"1534$1\", , , , , [, , \"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", , , , \"7640123456\"], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"5512345678\"\n    ], , , [, , , , , , , , , [-1]]],\n    JM: [, [, , \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"8766060\\\\d{3}|(?:658(?:2(?:[0-8]\\\\d|9[0-46-9])|[3-9]\\\\d\\\\d)|876(?:52[35]|6(?:0[1-3579]|1[0235-9]|[23]\\\\d|40|5[06]|6[2-589]|7[0-25-9]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468])))\\\\d{4}\", , , , \"8765230123\", , , , [7]], [\n      ,\n      ,\n      \"(?:658295|876(?:2(?:0[1-9]|[13-9]\\\\d|2[013-9])|[348]\\\\d\\\\d|5(?:0[1-9]|[1-9]\\\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"8762101234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"JM\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"658|876\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ]],\n    JO: [, [, , \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\", , , , , , , [8, 9]], [\n      ,\n      ,\n      \"87(?:000|90[01])\\\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"62001234\",\n      ,\n      ,\n      [8]\n    ], [, , \"7(?:[78][0-25-9]|9\\\\d)\\\\d{6}\", , , , \"790123456\", , , [9]], [, , \"80\\\\d{6}\", , , , \"80012345\", , , [8]], [, , \"9\\\\d{7}\", , , , \"90012345\", , , [8]], [, , \"85\\\\d{6}\", , , , \"85012345\", , , [8]], [, , \"70\\\\d{7}\", , , , \"700123456\", , , [9]], [, , , , , , , , , [-1]], \"JO\", 962, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], , [\n      ,\n      ,\n      \"74(?:66|77)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"746612345\",\n      ,\n      ,\n      [9]\n    ], , , [, , , , , , , , , [-1]], [, , \"8(?:10|8\\\\d)\\\\d{5}\", , , , \"88101234\", , , [8]], , , [, , , , , , , , , [-1]]],\n    JP: [, [, , \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\", , , , , , , [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [, , \"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\", , , , \"312345678\", , , [9]], [\n      ,\n      ,\n      \"[7-9]0[1-9]\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"9012345678\",\n      ,\n      ,\n      [10]\n    ], [, , \"00777(?:[01]|5\\\\d)\\\\d\\\\d|(?:00(?:7778|882[1245])|(?:120|800\\\\d)\\\\d\\\\d)\\\\d{4}|00(?:37|66|78)\\\\d{6,13}\", , , , \"120123456\"], [, , \"990\\\\d{6}\", , , , \"990123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"60\\\\d{7}\", , , , \"601234567\", , , [9]], [, , \"50[1-9]\\\\d{7}\", , , , \"5012345678\", , , [10]], \"JP\", 81, \"010\", \"0\", , , \"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\", \"$1\", , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"007\", \"0077\", \"00777\", \"00777[01]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\n      ,\n      \"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\n      \"0$1\"\n    ], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\"60\"],\n      \"0$1\"\n    ], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\n        \"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\n        \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\n        \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"\n      ],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\", \"$1-$2-$3\", [\"007\", \"0077\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"008\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\", \"$1-$2-$3\", [\"0\"]], [\n      ,\n      \"(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\",\n      \"$1-$2-$3\",\n      [\"0\"]\n    ]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\n      ,\n      \"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\n        \"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\n        \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\n        \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"\n      ],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], [, , \"20\\\\d{8}\", , , , \"2012345678\", , , [10]], , , [, , \"00(?:777(?:[01]|(?:5|8\\\\d)\\\\d)|882[1245]\\\\d\\\\d)\\\\d\\\\d|00(?:37|66|78)\\\\d{6,13}\"], [, , \"570\\\\d{6}\", , , , \"570123456\", , , [9]], , , [, , , , , , , , , [-1]]],\n    KE: [, [, , \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\", , , , , , , [7, 8, 9, 10]], [\n      ,\n      ,\n      \"(?:4[245]|5[1-79]|6[01457-9])\\\\d{5,7}|(?:4[136]|5[08]|62)\\\\d{7}|(?:[24]0|66)\\\\d{6,7}\",\n      ,\n      ,\n      ,\n      \"202012345\",\n      ,\n      ,\n      [7, 8, 9]\n    ], [, , \"(?:1(?:0[0-8]|1[0-7]|2[014]|30)|7\\\\d\\\\d)\\\\d{6}\", , , , \"712123456\", , , [9]], [, , \"800[02-8]\\\\d{5,6}\", , , , \"800223456\", , , [9, 10]], [, , \"900[02-9]\\\\d{5}\", , , , \"900223456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KE\", 254, \"000\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KG: [, [\n      ,\n      ,\n      \"8\\\\d{9}|[235-9]\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [9, 10],\n      [5, 6]\n    ], [, , \"312(?:5[0-79]\\\\d|9(?:[0-689]\\\\d|7[0-24-9]))\\\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\", , , , \"312123456\", , , [9], [5, 6]], [, , \"312(?:58\\\\d|973)\\\\d{3}|(?:2(?:0[0-35]|2\\\\d)|5[0-24-7]\\\\d|600|7(?:[07]\\\\d|55)|88[08]|9(?:12|9[05-9]))\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"800\\\\d{6,7}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KG\", 996, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KH: [\n      ,\n      [, , \"1\\\\d{9}|[1-9]\\\\d{7,8}\", , , , , , , [8, 9, 10], [6, 7]],\n      [\n        ,\n        ,\n        \"23(?:4(?:[2-4]|[56]\\\\d)|[568]\\\\d\\\\d)\\\\d{4}|23[236-9]\\\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\\\d)\\\\d{5}|6\\\\d{5,6})\",\n        ,\n        ,\n        ,\n        \"23756789\",\n        ,\n        ,\n        [8, 9],\n        [6, 7]\n      ],\n      [, , \"(?:(?:1[28]|3[18]|9[67])\\\\d|6[016-9]|7(?:[07-9]|[16]\\\\d)|8(?:[013-79]|8\\\\d))\\\\d{6}|(?:1\\\\d|9[0-57-9])\\\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\\\d{5}\", , , , \"91234567\", , , [8, 9]],\n      [, , \"1800(?:1\\\\d|2[019])\\\\d{4}\", , , , \"1800123456\", , , [10]],\n      [, , \"1900(?:1\\\\d|2[09])\\\\d{4}\", , , , \"1900123456\", , , [10]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"KH\",\n      855,\n      \"00[14-9]\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    KI: [, [, , \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\", , , , , , , [5, 8]], [, , \"(?:[24]\\\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\\\d\\\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\\\d{3}\", , , , \"31234\"], [\n      ,\n      ,\n      \"(?:6200[01]|7(?:310[1-9]|5(?:02[03-9]|12[0-47-9]|22[0-7]|[34](?:0[1-9]|8[02-9])|50[1-9])))\\\\d{3}|(?:63\\\\d\\\\d|7(?:(?:[0146-9]\\\\d|2[0-689])\\\\d|3(?:[02-9]\\\\d|1[1-9])|5(?:[0-2][013-9]|[34][1-79]|5[1-9]|[6-9]\\\\d)))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"72001234\",\n      ,\n      ,\n      [8]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"30(?:0[01]\\\\d\\\\d|12(?:11|20))\\\\d\\\\d\", , , , \"30010000\", , , [8]], \"KI\", 686, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KM: [, [, , \"[3478]\\\\d{6}\", , , , , , , [7], [4]], [, , \"7[4-7]\\\\d{5}\", , , , \"7712345\", , , , [4]], [, , \"[34]\\\\d{6}\", , , , \"3212345\"], [, , , , , , , , , [-1]], [, , \"8\\\\d{6}\", , , , \"8001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KM\", 269, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3\",\n      [\"[3478]\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KN: [, [, , \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\\\d{4}\", , , , \"8692361234\", , , , [7]], [, , \"869(?:48[89]|55[6-8]|66\\\\d|76[02-7])\\\\d{4}\", , , , \"8697652917\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"KN\", 1, \"011\", \"1\", , , \"([2-7]\\\\d{6})$|1\", \"869$1\", , , , , [, , , , , , , , , [-1]], , \"869\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KP: [, [, , \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\", , , , , , , [8, 10], [6, 7]], [, , \"(?:(?:195|2)\\\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\\\d{6}\", , , , \"21234567\", , , , [6, 7]], [, , \"19[1-3]\\\\d{7}\", , , , \"1921234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KP\", 850, \"00|99\", \"0\", , , \"0\", , , , [[\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"8\"],\n      \"0$1\"\n    ], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"238[02-9]\\\\d{4}|2(?:[0-24-9]\\\\d|3[0-79])\\\\d{5}\", , , , , , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KR: [, [, , \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\", , , , , , , [5, 6, 8, 9, 10, 11, 12, 13, 14], [3, 4, 7]], [\n      ,\n      ,\n      \"(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\\\d{2,3}\",\n      ,\n      ,\n      ,\n      \"22123456\",\n      ,\n      ,\n      [5, 6, 8, 9, 10],\n      [3, 4, 7]\n    ], [, , \"1(?:05(?:[0-8]\\\\d|9[0-6])|22[13]\\\\d)\\\\d{4,5}|1(?:0[0-46-9]|[16-9]\\\\d|2[013-9])\\\\d{6,7}\", , , , \"1020000000\", , , [9, 10]], [, , \"00(?:308\\\\d{6,7}|798\\\\d{7,9})|(?:00368|[38]0)\\\\d{7}\", , , , \"801234567\", , , [9, 11, 12, 13, 14]], [, , \"60[2-9]\\\\d{6}\", , , , \"602345678\", , , [9]], [, , , , , , , , , [-1]], [, , \"50\\\\d{8,9}\", , , , \"5012345678\", , , [10, 11]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], \"KR\", 82, \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"0\", , , \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\", , , , [[\n      ,\n      \"(\\\\d{5})\",\n      \"$1\",\n      [\"1[016-9]1\", \"1[016-9]11\", \"1[016-9]114\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]0|8\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"003\", \"0030\"]], [\n      ,\n      \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\n      \"$1-$2-$3\",\n      [\"5\"],\n      \"0$1\",\n      \"0$CC-$1\"\n    ], [, \"(\\\\d{5})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{5})(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], [\n      [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"],\n      [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]],\n      [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]0|8\"], \"0$1\", \"0$CC-$1\"],\n      [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"],\n      [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"],\n      [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\", \"0$CC-$1\"]\n    ], [, , \"15\\\\d{7,8}\", , , , \"1523456789\", , , [9, 10]], , , [, , \"00(?:3(?:08\\\\d{6,7}|68\\\\d{7})|798\\\\d{7,9})\", , , , , , , [11, 12, 13, 14]], [, , \"1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[0168]|88)|8(?:00|33|55|77|99))\\\\d{4}\", , , , \"15441234\", , , [8]], , , [, , , , , , , , , [-1]]],\n    KW: [, [, , \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\", , , , , , , [7, 8]], [, , \"2(?:[23]\\\\d\\\\d|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7]))\\\\d{4}\", , , , \"22345678\", , , [8]], [\n      ,\n      ,\n      \"(?:41\\\\d\\\\d|5(?:(?:[05]\\\\d|1[0-7]|6[56])\\\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\\\d)\\\\d|1(?:00|11|6[16])|2[26]2|3[36]3|4[46]4|7(?:0[013-9]|[67]\\\\d)|8[68]8|9(?:[069]\\\\d|3[039]))|9(?:(?:[04679]\\\\d|8[057-9])\\\\d|1(?:1[01]|99)|2(?:00|2\\\\d)|3(?:00|3[03])|5(?:00|5\\\\d)))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"50012345\",\n      ,\n      ,\n      [8]\n    ], [, , \"18\\\\d{5}\", , , , \"1801234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KW\", 965, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KY: [, [, , \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [\n      ,\n      ,\n      \"345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|[48]8)|9(?:14|4[035-9]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"3452221234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\\\d{4}\", , , , \"3453231234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"(?:345976|900[2-9]\\\\d\\\\d)\\\\d{4}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"KY\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"345$1\", , , , , [, , \"345849\\\\d{4}\", , , , \"3458491234\"], , \"345\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    KZ: [, [, , \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\", , , , , , , [10, 14], [5, 6, 7]], [\n      ,\n      ,\n      \"(?:33622|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9]|97)|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]|59))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[2-4]\\\\d|5[139])|4(?:2\\\\d|3[1-35-9]|59)|5(?:[23]\\\\d|4[0-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59))))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"7123456789\",\n      ,\n      ,\n      [10],\n      [5, 6, 7]\n    ], [, , \"7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\\\d{7}\", , , , \"7710009998\", , , [10]], [, , \"8(?:00|108\\\\d{3})\\\\d{7}\", , , , \"8001234567\"], [, , \"809\\\\d{7}\", , , , \"8091234567\", , , [10]], [, , , , , , , , , [-1]], [, , \"808\\\\d{7}\", , , , \"8081234567\", , , [10]], [, , \"751\\\\d{7}\", , , , \"7511234567\", , , [10]], \"KZ\", 7, \"810\", \"8\", , , \"8\", , \"8~10\", , , , [, , , , , , , , , [-1]], , \"33|7\", [, , \"751\\\\d{7}\", , , , , , , [10]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LA: [, [, , \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\", , , , , , , [8, 9, 10], [6]], [\n      ,\n      ,\n      \"(?:2[13]|[35-7][14]|41|8[1468])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"21212862\",\n      ,\n      ,\n      [8],\n      [6]\n    ], [, , \"208[78]\\\\d{6}|(?:20[23579]|30[24])\\\\d{7}\", , , , \"2023123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LA\", 856, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[0135-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"30[0135-9]\\\\d{6}\", , , , \"301234567\", , , [9]], , , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ]],\n    LB: [, [, , \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\", , , , , , , [7, 8]], [, , \"7(?:62|8[0-7]|9[04-9])\\\\d{4}|(?:[14-69]\\\\d|2(?:[14-69]\\\\d|[78][1-9])|7[2-57]|8[02-9])\\\\d{5}\", , , , \"1123456\"], [, , \"793(?:[01]\\\\d|2[0-4])\\\\d{3}|(?:(?:3|81)\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[12]))\\\\d{5}\", , , , \"71123456\"], [, , , , , , , , , [-1]], [, , \"9[01]\\\\d{6}\", , , , \"90123456\", , , [8]], [, , \"80\\\\d{6}\", , , , \"80123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LB\", 961, \"00\", \"0\", , , \"0\", , , , [[\n      ,\n      \"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LC: [\n      ,\n      [, , \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [, , \"758(?:234|4(?:30|5\\\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\\\d{4}\", , , , \"7584305678\", , , , [7]],\n      [, , \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[0-3])|812)\\\\d{4}\", , , , \"7582845678\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , , , , , , , , [-1]],\n      \"LC\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"([2-8]\\\\d{6})$|1\",\n      \"758$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"758\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    LI: [, [, , \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\", , , , , , , [7, 9]], [\n      ,\n      ,\n      \"(?:2(?:01|1[27]|2[02]|3\\\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2345678\",\n      ,\n      ,\n      [7]\n    ], [, , \"(?:6(?:(?:4[5-9]|5[0-469])\\\\d|6(?:[024-6]\\\\d|[17]0|3[7-9]))\\\\d|7(?:[37-9]\\\\d|42|56))\\\\d{4}\", , , , \"660234567\"], [, , \"8002[28]\\\\d\\\\d|80(?:05\\\\d|9)\\\\d{4}\", , , , \"8002222\"], [, , \"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d\\\\d\", , , , \"9002222\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LI\", 423, \"00\", \"0\", , , \"(1001)|0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"69\"],\n      ,\n      \"$CC $1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"], , \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"870(?:28|87)\\\\d\\\\d\", , , , \"8702812\", , , [7]], , , [, , \"697(?:42|56|[78]\\\\d)\\\\d{4}\", , , , \"697861234\", , , [9]]],\n    LK: [, [, , \"[1-9]\\\\d{8}\", , , , , , , [9], [7]], [, , \"(?:12[2-9]|602|8[12]\\\\d|9(?:1\\\\d|22|9[245]))\\\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\\\d{6}\", , , , \"112345678\", , , , [7]], [, , \"7(?:[0-25-8]\\\\d|4[0-4])\\\\d{6}\", , , , \"712345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], \"LK\", 94, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"1973\\\\d{5}\", , , , \"197312345\"], , , [, , , , , , , , , [-1]]],\n    LR: [, [, , \"(?:[245]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\", , , , , , , [7, 8, 9]], [, , \"2\\\\d{7}\", , , , \"21234567\", , , [8]], [, , \"(?:(?:(?:22|33)0|555|(?:77|88)\\\\d)\\\\d|4(?:240|[67]))\\\\d{5}|[56]\\\\d{6}\", , , , \"770123456\", , , [7, 9]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"332(?:02|[34]\\\\d)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"332021234\",\n      ,\n      ,\n      [9]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LR\", 231, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4[67]|[56]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-578]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LS: [, [, , \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\", , , , , , , [8]], [, , \"2\\\\d{7}\", , , , \"22123456\"], [, , \"[56]\\\\d{7}\", , , , \"50123456\"], [, , \"800[1256]\\\\d{4}\", , , , \"80021234\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LS\", 266, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LT: [\n      ,\n      [, , \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\", , , , , , , [8]],\n      [, , \"(?:3[1478]|4[124-6]|52)\\\\d{6}\", , , , \"31234567\"],\n      [, , \"6\\\\d{7}\", , , , \"61234567\"],\n      [, , \"80[02]\\\\d{5}\", , , , \"80012345\"],\n      [, , \"9(?:0[0239]|10)\\\\d{5}\", , , , \"90012345\"],\n      [, , \"808\\\\d{5}\", , , , \"80812345\"],\n      [, , \"70[05]\\\\d{5}\", , , , \"70012345\"],\n      [, , \"[89]01\\\\d{5}\", , , , \"80123456\"],\n      \"LT\",\n      370,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"[08]\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(0-$1)\", , 1], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0 $1\", , 1], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(0-$1)\", , 1], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(0-$1)\", , 1]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"70[67]\\\\d{5}\", , , , \"70712345\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    LU: [, [, , \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\", , , , , , , [4, 5, 6, 7, 8, 9, 10, 11]], [\n      ,\n      ,\n      \"(?:35[013-9]|80[2-9]|90[89])\\\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\\\d|8[13-9]|9[2-579])\\\\d{2,9}\",\n      ,\n      ,\n      ,\n      \"27123456\"\n    ], [, , \"6(?:[269][18]|5[1568]|7[189]|81)\\\\d{6}\", , , , \"628123456\", , , [9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"90[015]\\\\d{5}\", , , , \"90012345\", , , [8]], [, , \"801\\\\d{5}\", , , , \"80112345\", , , [8]], [, , , , , , , , , [-1]], [, , \"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\", , , , \"20201234\", , , [4, 5, 6, 7, 8, 9, 10]], \"LU\", 352, \"00\", , , , \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\", , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"], , \"$CC $1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3\",\n      [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],\n      ,\n      \"$CC $1\"\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"], , \"$CC $1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\n      \"$1 $2 $3 $4\",\n      [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"],\n      ,\n      \"$CC $1\"\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LV: [, [, , \"(?:[268]\\\\d|90)\\\\d{6}\", , , , , , , [8]], [, , \"6\\\\d{7}\", , , , \"63123456\"], [, , \"23(?:23[0-57-9]|33[0238])\\\\d{3}|2(?:[0-24-9]\\\\d\\\\d|3(?:0[07]|[14-9]\\\\d|2[024-9]|3[0-24-9]))\\\\d{4}\", , , , \"21234567\"], [, , \"80\\\\d{6}\", , , , \"80123456\"], [, , \"90\\\\d{6}\", , , , \"90123456\"], [, , \"81\\\\d{6}\", , , , \"81123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LV\", 371, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[269]|8[01]\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    LY: [\n      ,\n      [, , \"[2-9]\\\\d{8}\", , , , , , , [9], [7]],\n      [, , \"(?:2(?:0[56]|[1-6]\\\\d|7[124579]|8[124])|3(?:1\\\\d|2[2356])|4(?:[17]\\\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\\\d|5[2-57]|8[1-5])|7(?:[13]\\\\d|2[13-79])|8(?:[124]\\\\d|5[124]|84))\\\\d{6}\", , , , \"212345678\", , , , [7]],\n      [, , \"9[1-6]\\\\d{7}\", , , , \"912345678\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"LY\",\n      218,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    MA: [, [, , \"[5-8]\\\\d{8}\", , , , , , , [9]], [, , \"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\", , , , \"520123456\"], [, , \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\", , , , \"650123456\"], [, , \"80[0-7]\\\\d{6}\", , , , \"801234567\"], [, , \"89\\\\d{7}\", , , , \"891234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"592401234\"\n    ], \"MA\", 212, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MC: [\n      ,\n      [, , \"(?:[3489]|6\\\\d)\\\\d{7}\", , , , , , , [8, 9]],\n      [, , \"(?:870|9[2-47-9]\\\\d)\\\\d{5}\", , , , \"99123456\", , , [8]],\n      [, , \"4(?:[469]\\\\d|5[1-9])\\\\d{5}|(?:3|6\\\\d)\\\\d{7}\", , , , \"612345678\"],\n      [, , \"(?:800|90\\\\d)\\\\d{5}\", , , , \"90123456\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"MC\",\n      377,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"87\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]],\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [\n        ,\n        \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n        \"$1 $2 $3 $4 $5\",\n        [\"6\"],\n        \"0$1\"\n      ]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"8[07]0\\\\d{5}\", , , , , , , [8]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    MD: [, [, , \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\", , , , , , , [8]], [, , \"(?:(?:2[1-9]|3[1-79])\\\\d|5(?:33|5[257]))\\\\d{5}\", , , , \"22212345\"], [, , \"562\\\\d{5}|(?:6\\\\d|7[16-9])\\\\d{6}\", , , , \"62112345\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"90[056]\\\\d{5}\", , , , \"90012345\"], [, , \"808\\\\d{5}\", , , , \"80812345\"], [, , , , , , , , , [-1]], [, , \"3[08]\\\\d{6}\", , , , \"30123456\"], \"MD\", 373, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"22|3\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"803\\\\d{5}\", , , , \"80312345\"], , , [, , , , , , , , , [-1]]],\n    ME: [, [, , \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\", , , , , , , [8, 9], [6]], [, , \"(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\\\d{5}\", , , , \"30234567\", , , [8], [6]], [, , \"6(?:[07-9]\\\\d|3[024]|6[0-25])\\\\d{5}\", , , , \"67622901\", , , [8]], [, , \"80(?:[0-2578]|9\\\\d)\\\\d{5}\", , , , \"80080002\"], [\n      ,\n      ,\n      \"9(?:4[1568]|5[178])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"94515151\",\n      ,\n      ,\n      [8]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"78[1-49]\\\\d{5}\", , , , \"78108780\", , , [8]], \"ME\", 382, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"77[1-9]\\\\d{5}\", , , , \"77273012\", , , [8]], , , [, , , , , , , , , [-1]]],\n    MF: [, [, , \"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\", , , , , , , [9]], [, , \"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\", , , , \"590271234\"], [\n      ,\n      ,\n      \"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"690001234\"\n    ], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\", , , , \"976012345\"], \"MF\", 590, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MG: [\n      ,\n      [, , \"[23]\\\\d{8}\", , , , , , , [9], [7]],\n      [, , \"2072[29]\\\\d{4}|20(?:2\\\\d|4[47]|5[3467]|6[279]|7[356]|8[268]|9[2457])\\\\d{5}\", , , , \"202123456\", , , , [7]],\n      [, , \"3[2-47-9]\\\\d{7}\", , , , \"321234567\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"22\\\\d{7}\", , , , \"221234567\"],\n      \"MG\",\n      261,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"([24-9]\\\\d{6})$|0\",\n      \"20$1\",\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    MH: [, [, , \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\", , , , , , , [7]], [, , \"(?:247|528|625)\\\\d{4}\", , , , \"2471234\"], [, , \"(?:(?:23|54)5|329|45[35-8])\\\\d{4}\", , , , \"2351234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"635\\\\d{4}\", , , , \"6351234\"], \"MH\", 692, \"011\", \"1\", , , \"1\", , , , [[\n      ,\n      \"(\\\\d{3})(\\\\d{4})\",\n      \"$1-$2\",\n      [\"[2-6]\"]\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MK: [, [, , \"[2-578]\\\\d{7}\", , , , , , , [8], [6, 7]], [, , \"(?:(?:2(?:62|77)0|3444)\\\\d|4[56]440)\\\\d{3}|(?:34|4[357])700\\\\d{3}|(?:2(?:[0-3]\\\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\\\d{5}\", , , , \"22012345\", , , , [6, 7]], [\n      ,\n      ,\n      \"7(?:3555|(?:474|9[019]7)7)\\\\d{3}|7(?:[0-25-8]\\\\d\\\\d|3(?:[1-48]\\\\d|6[01]|7[01578])|4(?:2\\\\d|60|7[01578])|9(?:[2-4]\\\\d|5[01]|7[015]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"72345678\"\n    ], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"5\\\\d{7}\", , , , \"50012345\"], [, , \"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\", , , , \"80123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MK\", 389, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    ML: [, [, , \"[24-9]\\\\d{7}\", , , , , , , [8]], [\n      ,\n      ,\n      \"2(?:07[0-8]|12[67])\\\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"20212345\"\n    ], [, , \"2(?:0(?:01|79)|17\\\\d)\\\\d{4}|(?:5[01]|[679]\\\\d|8[2-49])\\\\d{6}\", , , , \"65012345\"], [, , \"80\\\\d{6}\", , , , \"80012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ML\", 223, \"00\", , , , , , , , [[, \"(\\\\d{4})\", \"$1\", [\"67[057-9]|74[045]\", \"67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [, , , , , , , , , [-1]], , , [, , \"80\\\\d{6}\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MM: [\n      ,\n      [, , \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\", , , , , , , [6, 7, 8, 9, 10], [5]],\n      [\n        ,\n        ,\n        \"(?:1(?:(?:12|[28]\\\\d|3[56]|7[3-6]|9[0-6])\\\\d|4(?:2[29]|62|7[0-2]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\\\d|[26]2|7[0-2]|83)|51\\\\d\\\\d)|4(?:2(?:2\\\\d\\\\d|48[013])|3(?:20\\\\d|4(?:70|83)|56)|420\\\\d|5(?:2\\\\d|470))|6(?:0(?:[23]|88\\\\d)|(?:124|[56]2\\\\d)\\\\d|2472|3(?:20\\\\d|470)|4(?:2[04]\\\\d|472)|7(?:3\\\\d\\\\d|4[67]0|8(?:[01459]\\\\d|8))))\\\\d{4}|5(?:2(?:2\\\\d{5,6}|47[02]\\\\d{4})|(?:3472|4(?:2(?:1|86)|470)|522\\\\d|6(?:20\\\\d|483)|7(?:20\\\\d|48[01])|8(?:20\\\\d|47[02])|9(?:20\\\\d|470))\\\\d{4})|7(?:(?:0470|4(?:25\\\\d|470)|5(?:202|470|96\\\\d))\\\\d{4}|1(?:20\\\\d{4,5}|4(?:70|83)\\\\d{4}))|8(?:1(?:2\\\\d{5,6}|4(?:10|7[01]\\\\d)\\\\d{3})|2(?:2\\\\d{5,6}|(?:320|490\\\\d)\\\\d{3})|(?:3(?:2\\\\d\\\\d|470)|4[24-7]|5(?:(?:2\\\\d|51)\\\\d|4(?:[1-35-9]\\\\d|4[0-57-9]))|6[23])\\\\d{4})|(?:1[2-6]\\\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|(?:[35]2|64)\\\\d))\\\\d{4}|25\\\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\\\d{4}\",\n        ,\n        ,\n        ,\n        \"1234567\",\n        ,\n        ,\n        [6, 7, 8, 9],\n        [5]\n      ],\n      [, , \"(?:17[01]|9(?:2(?:[0-4]|[56]\\\\d\\\\d)|(?:3(?:[0-36]|4\\\\d)|(?:6\\\\d|8[89]|9[4-8])\\\\d|7(?:3|40|[5-9]\\\\d))\\\\d|4(?:(?:[0245]\\\\d|[1379])\\\\d|88)|5[0-6])\\\\d)\\\\d{4}|9[69]1\\\\d{6}|9(?:[68]\\\\d|9[089])\\\\d{5}\", , , , \"92123456\", , , [7, 8, 9, 10]],\n      [, , \"80080(?:0[1-9]|2\\\\d)\\\\d{3}\", , , , \"8008001234\", , , [10]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"1333\\\\d{4}|[12]468\\\\d{4}\", , , , \"13331234\", , , [8]],\n      \"MM\",\n      95,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [\n        ,\n        \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n        \"$1 $2 $3\",\n        [\"4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]\"],\n        \"0$1\"\n      ], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|452|678|86\", \"[12]|452|6788|86\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [\n        ,\n        \"(\\\\d)(\\\\d{5})(\\\\d{4})\",\n        \"$1 $2 $3\",\n        [\"9\"],\n        \"0$1\"\n      ]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    MN: [, [, , \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\", , , , , , , [8, 9, 10], [4, 5, 6]], [, , \"[12]2[1-3]\\\\d{5,6}|(?:(?:[12](?:1|27)|5[368])\\\\d\\\\d|7(?:0(?:[0-5]\\\\d|7[078]|80)|128))\\\\d{4}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\\\d{6,7}\", , , , \"53123456\", , , , [4, 5, 6]], [, , \"(?:83[01]|92[039])\\\\d{5}|(?:5[05]|6[069]|8[015689]|9[013-9])\\\\d{6}\", , , , \"88123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"712[0-79]\\\\d{4}|7(?:1[013-9]|[25-9]\\\\d)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"75123456\",\n      ,\n      ,\n      [8]\n    ], \"MN\", 976, \"001\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MO: [, [\n      ,\n      ,\n      \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7, 8]\n    ], [, , \"(?:28[2-9]|8(?:11|[2-57-9]\\\\d))\\\\d{5}\", , , , \"28212345\", , , [8]], [, , \"6800[0-79]\\\\d{3}|6(?:[235]\\\\d\\\\d|6(?:0[0-5]|[1-9]\\\\d)|8(?:0[1-9]|[14-8]\\\\d|2[5-9]|[39][0-4]))\\\\d{4}\", , , , \"66123456\", , , [8]], [, , \"0800\\\\d{3}\", , , , \"0800501\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MO\", 853, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MP: [, [\n      ,\n      ,\n      \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [10],\n      [7]\n    ], [, , \"670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", , , , \"6702345678\", , , , [7]], [, , \"670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", , , , \"6702345678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"MP\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"670$1\", , 1, , , [, , , , , , , , , [-1]], , \"670\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MQ: [, [, , \"(?:596\\\\d|7091)\\\\d{5}|(?:69|[89]\\\\d)\\\\d{7}\", , , , , , , [9]], [, , \"(?:596(?:[03-7]\\\\d|1[05]|2[7-9]|8[0-39]|9[04-9])|80[6-9]\\\\d\\\\d|9(?:477[6-9]|767[4589]))\\\\d{4}\", , , , \"596301234\"], [, , \"(?:69[67]\\\\d\\\\d|7091[0-3])\\\\d{4}\", , , , \"696201234\"], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\"], [, , \"8[129]\\\\d{7}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"9(?:397[0-3]|477[0-5]|76(?:6\\\\d|7[0-367]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"976612345\"\n    ], \"MQ\", 596, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-79]|8(?:0[6-9]|[36])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MR: [\n      ,\n      [, , \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\", , , , , , , [8]],\n      [, , \"(?:25[08]|35\\\\d|45[1-7])\\\\d{5}\", , , , \"35123456\"],\n      [, , \"[2-4][0-46-9]\\\\d{6}\", , , , \"22123456\"],\n      [, , \"800\\\\d{5}\", , , , \"80012345\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"MR\",\n      222,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    MS: [, [, , \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"6644(?:1[0-3]|91)\\\\d{4}\", , , , \"6644912345\", , , , [7]], [, , \"664(?:3(?:49|9[1-6])|49[2-6])\\\\d{4}\", , , , \"6644923456\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"MS\", 1, \"011\", \"1\", , , \"([34]\\\\d{6})$|1\", \"664$1\", , , , , [, , , , , , , , , [-1]], , \"664\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MT: [, [, , \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\", , , , , , , [8]], [, , \"20(?:3[1-4]|6[059])\\\\d{4}|2(?:0[19]|[1-357]\\\\d|60)\\\\d{5}\", , , , \"21001234\"], [, , \"(?:7(?:210|[79]\\\\d\\\\d)|9(?:[29]\\\\d\\\\d|69[67]|8(?:1[1-3]|89|97)))\\\\d{4}\", , , , \"96961234\"], [, , \"800(?:02|[3467]\\\\d)\\\\d{3}\", , , , \"80071234\"], [\n      ,\n      ,\n      \"5(?:0(?:0(?:37|43)|(?:6\\\\d|70|9[0168])\\\\d)|[12]\\\\d0[1-5])\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"50037123\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3550\\\\d{4}\", , , , \"35501234\"], \"MT\", 356, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]], , [, , \"7117\\\\d{4}\", , , , \"71171234\"], , , [, , , , , , , , , [-1]], [, , \"501\\\\d{5}\", , , , \"50112345\"], , , [, , , , , , , , , [-1]]],\n    MU: [, [, , \"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\", , , , , , , [7, 8, 10]], [, , \"(?:2(?:[0346-8]\\\\d|1[0-7])|4(?:[013568]\\\\d|2[4-8]|71)|54(?:[3-5]\\\\d|71)|6\\\\d\\\\d|8(?:14|3[129]))\\\\d{4}\", , , , \"54480123\", , , [7, 8]], [\n      ,\n      ,\n      \"5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\\\d{4}|(?:5(?:2[5-9]|4[3-689]|[57]\\\\d|8[0-689]|9[0-8])|7(?:0[0-4]|3[013]))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"52512345\",\n      ,\n      ,\n      [8]\n    ], [, , \"802\\\\d{7}|80[0-2]\\\\d{4}\", , , , \"8001234\", , , [7, 10]], [, , \"30\\\\d{5}\", , , , \"3012345\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3(?:20|9\\\\d)\\\\d{4}\", , , , \"3201234\", , , [7]], \"MU\", 230, \"0(?:0|[24-7]0|3[03])\", , , , , , \"020\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57]\"]], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MV: [, [, , \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\", , , , , , , [7, 10]], [\n      ,\n      ,\n      \"(?:3(?:0[0-4]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"6701234\",\n      ,\n      ,\n      [7]\n    ], [, , \"(?:46[46]|[79]\\\\d\\\\d)\\\\d{4}\", , , , \"7712345\", , , [7]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"900\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MV\", 960, \"0(?:0|19)\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[34679]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"4(?:0[01]|50)\\\\d{4}\", , , , \"4001234\", , , [7]], , , [, , , , , , , , , [-1]]],\n    MW: [, [, , \"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\", , , , , , , [7, 9]], [\n      ,\n      ,\n      \"(?:1[2-9]|2[12]\\\\d\\\\d)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"1234567\"\n    ], [, , \"111\\\\d{6}|(?:31|77|[89][89])\\\\d{7}\", , , , \"991234567\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MW\", 265, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MX: [, [, , \"[2-9]\\\\d{9}\", , , , , , , [10], [7, 8]], [\n      ,\n      ,\n      \"657[12]\\\\d{6}|(?:2(?:0[01]|2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"2001234567\",\n      ,\n      ,\n      ,\n      [7, 8]\n    ], [, , \"657[12]\\\\d{6}|(?:2(?:2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[267][1-9]|3[1-8]|[45]\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[0-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\", , , , \"2221234567\", , , , [7, 8]], [\n      ,\n      ,\n      \"8(?:00|88)\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"8001234567\"\n    ], [, , \"900\\\\d{7}\", , , , \"9001234567\"], [, , \"300\\\\d{7}\", , , , \"3001234567\"], [, , \"500\\\\d{7}\", , , , \"5001234567\"], [, , , , , , , , , [-1]], \"MX\", 52, \"0[09]\", , , , , , \"00\", , [[, \"(\\\\d{5})\", \"$1\", [\"53\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"]]], [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MY: [, [\n      ,\n      ,\n      \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 9, 10],\n      [6, 7]\n    ], [, , \"4270\\\\d{4}|(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\\\d|9[0-57])\\\\d|4(?:2[0-689]|[3-79]\\\\d|8[1-35689])|5(?:2[0-589]|[3468]\\\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\\\d|[3489][0-8]))\\\\d{5}\", , , , \"323856789\", , , [8, 9], [6, 7]], [\n      ,\n      ,\n      \"1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\\\d{4}|1(?:0(?:[23568]\\\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\\\d\\\\d|6(?:0[5-9]|[1-9]\\\\d)|7(?:[0-4]\\\\d|5[0-7]))|(?:[269]\\\\d|[37][1-9]|4[235-9])\\\\d|5(?:31|9\\\\d\\\\d)|8(?:1[23]|[236]\\\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"123456789\",\n      ,\n      ,\n      [9, 10]\n    ], [, , \"1[378]00\\\\d{6}\", , , , \"1300123456\", , , [10]], [, , \"1600\\\\d{6}\", , , , \"1600123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"15(?:4(?:6[0-4]\\\\d|8(?:0[125]|[17]\\\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\\\d))\\\\d{4}\", , , , \"1546012345\", , , [10]], \"MY\", 60, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [\n      ,\n      \"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n      \"$1-$2 $3\",\n      [\"3\"],\n      \"0$1\"\n    ], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    MZ: [\n      ,\n      [, , \"(?:2|8\\\\d)\\\\d{7}\", , , , , , , [8, 9]],\n      [, , \"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\", , , , \"21123456\", , , [8]],\n      [, , \"8[2-79]\\\\d{7}\", , , , \"821234567\", , , [9]],\n      [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"MZ\",\n      258,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    NA: [, [, , \"[68]\\\\d{7,8}\", , , , , , , [8, 9]], [\n      ,\n      ,\n      \"64426\\\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\\\d{4,5}|6(?:1(?:(?:0\\\\d|2[0189]|3[24-69]|4[5-9])\\\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"61221234\"\n    ], [, , \"(?:60|8[1245])\\\\d{7}\", , , , \"811234567\", , , [9]], [, , \"80\\\\d{7}\", , , , \"800123456\", , , [9]], [, , \"8701\\\\d{5}\", , , , \"870123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"8(?:3\\\\d\\\\d|86)\\\\d{5}\", , , , \"88612345\"], \"NA\", 264, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]]],\n    NC: [, [, , \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\", , , , , , , [6]], [, , \"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\", , , , \"201234\"], [, , \"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\", , , , \"751234\"], [, , \"050\\\\d{3}\", , , , \"050012\"], [, , \"36\\\\d{4}\", , , , \"366711\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NC\", 687, \"00\", , , , , , , , [[, \"(\\\\d{3})\", \"$1\", [\"5[6-8]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ]],\n    NE: [\n      ,\n      [, , \"[027-9]\\\\d{7}\", , , , , , , [8]],\n      [, , \"2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\", , , , \"20201234\"],\n      [, , \"(?:23|7[0467]|[89]\\\\d)\\\\d{6}\", , , , \"93123456\"],\n      [, , \"08\\\\d{6}\", , , , \"08123456\"],\n      [, , \"09\\\\d{6}\", , , , \"09123456\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"NE\",\n      227,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[0467]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    NF: [, [, , \"[13]\\\\d{5}\", , , , , , , [6], [5]], [, , \"(?:1(?:06|17|28|39)|3[0-2]\\\\d)\\\\d{3}\", , , , \"106609\", , , , [5]], [, , \"(?:14|3[58])\\\\d{4}\", , , , \"381234\", , , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NF\", 672, \"00\", , , , \"([0-258]\\\\d{4})$\", \"3$1\", , , [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    NG: [, [\n      ,\n      ,\n      \"38\\\\d{6}|[78]\\\\d{9,13}|(?:20|9\\\\d)\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 10, 11, 12, 13, 14],\n      [6, 7]\n    ], [, , \"(?:20(?:[1259]\\\\d|3[013-9]|4[1-8]|6[024-689]|7[1-79]|8[2-9])|38)\\\\d{6}\", , , , \"2033123456\", , , [8, 10], [6, 7]], [, , \"(?:702[0-24-9]|819[01])\\\\d{6}|(?:7(?:0[13-9]|[12]\\\\d)|8(?:0[1-9]|1[0-8])|9(?:0[1-9]|1[1-6]))\\\\d{7}\", , , , \"8021234567\", , , [10]], [, , \"800\\\\d{7,11}\", , , , \"80017591759\", , , [10, 11, 12, 13, 14]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NG\", 234, \"009\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"3\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n      \"$1 $2 $3\",\n      [\"[7-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"20[129]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"700\\\\d{7,11}\", , , , \"7001234567\", , , [10, 11, 12, 13, 14]], , , [, , , , , , , , , [-1]]],\n    NI: [, [, , \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\", , , , , , , [8]], [, , \"2\\\\d{7}\", , , , \"21234567\"], [\n      ,\n      ,\n      \"(?:5(?:5[0-7]|[78]\\\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\\\d)\\\\d)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"81234567\"\n    ], [, , \"1800\\\\d{4}\", , , , \"18001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NI\", 505, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    NL: [, [, , \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\", , , , , , , [5, 6, 7, 8, 9, 10, 11]], [\n      ,\n      ,\n      \"(?:1(?:[035]\\\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\\\d\\\\d)\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"101234567\",\n      ,\n      ,\n      [9]\n    ], [, , \"(?:6[1-58]|970\\\\d)\\\\d{7}\", , , , \"612345678\", , , [9, 11]], [, , \"800\\\\d{4,7}\", , , , \"8001234\", , , [7, 8, 9, 10]], [, , \"90[069]\\\\d{4,7}\", , , , \"9061234\", , , [7, 8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:85|91)\\\\d{7}\", , , , \"851234567\", , , [9]], \"NL\", 31, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})\", \"$1\", [\"1[238]|[34]\"]], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"14\"]], [, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\n      \"$1 $2 $3\",\n      [\"9\"],\n      \"0$1\"\n    ]], [, , \"66\\\\d{7}\", , , , \"662345678\", , , [9]], , , [, , \"140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)\\\\d\", , , , , , , [5, 6]], [, , \"140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\\\d{6})\\\\d\", , , , \"14020\", , , [5, 6, 9]], , , [, , , , , , , , , [-1]]],\n    NO: [, [, , \"(?:0|[2-9]\\\\d{3})\\\\d{4}\", , , , , , , [5, 8]], [, , \"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\", , , , \"21234567\", , , [8]], [\n      ,\n      ,\n      \"(?:4[015-8]|9\\\\d)\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"40612345\",\n      ,\n      ,\n      [8]\n    ], [, , \"80[01]\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"82[09]\\\\d{5}\", , , , \"82012345\", , , [8]], [, , \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", , , , \"81021234\", , , [8]], [, , \"880\\\\d{5}\", , , , \"88012345\", , , [8]], [, , \"85[0-5]\\\\d{5}\", , , , \"85012345\", , , [8]], \"NO\", 47, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]\"]]], , [, , , , , , , , , [-1]], 1, \"[02-689]|7[0-8]\", [, , , , , , , , , [-1]], [, , \"(?:0[235-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\", , , , \"02000\"], , , [\n      ,\n      ,\n      \"81[23]\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"81212345\",\n      ,\n      ,\n      [8]\n    ]],\n    NP: [, [, , \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\", , , , , , , [8, 10, 11], [6, 7]], [, , \"(?:1[0-6]\\\\d|99[02-6])\\\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\\\d{5}\", , , , \"14567890\", , , [8], [6, 7]], [, , \"9(?:00|6[0-3]|7[024-6]|8[0-24-68])\\\\d{7}\", , , , \"9841234567\", , , [10]], [, , \"1(?:66001|800\\\\d\\\\d)\\\\d{5}\", , , , \"16600101234\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NP\", 977, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{6})\",\n      \"$1-$2\",\n      [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{5})\", \"$1-$2-$3\", [\"1\"]]], [[, \"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    NR: [, [, , \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\", , , , , , , [7]], [, , \"444\\\\d{4}\", , , , \"4441234\"], [, , \"(?:55[3-9]|666|8\\\\d\\\\d)\\\\d{4}\", , , , \"5551234\"], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NR\", 674, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    NU: [\n      ,\n      [, , \"(?:[4-7]|888\\\\d)\\\\d{3}\", , , , , , , [4, 7]],\n      [, , \"[47]\\\\d{3}\", , , , \"7012\", , , [4]],\n      [, , \"(?:[56]|888[1-9])\\\\d{3}\", , , , \"8884012\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"NU\",\n      683,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    NZ: [\n      ,\n      [, , \"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\", , , , , , , [5, 6, 7, 8, 9, 10]],\n      [, , \"240\\\\d{5}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{6}\", , , , \"32345678\", , , [8], [7]],\n      [, , \"2(?:[0-27-9]\\\\d|6)\\\\d{6,7}|2(?:1\\\\d|75)\\\\d{5}\", , , , \"211234567\", , , [8, 9, 10]],\n      [, , \"508\\\\d{6,7}|80\\\\d{6,8}\", , , , \"800123456\", , , [8, 9, 10]],\n      [, , \"(?:1[13-57-9]\\\\d{5}|50(?:0[08]|30|66|77|88))\\\\d{3}|90\\\\d{6,8}\", , , , \"900123456\", , , [7, 8, 9, 10]],\n      [, , , , , , , , , [-1]],\n      [\n        ,\n        ,\n        \"70\\\\d{7}\",\n        ,\n        ,\n        ,\n        \"701234567\",\n        ,\n        ,\n        [9]\n      ],\n      [, , , , , , , , , [-1]],\n      \"NZ\",\n      64,\n      \"0(?:0|161)\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      \"00\",\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|8|90\", \"50(?:[0367]|88)|8|90\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[589]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"8(?:1[16-9]|22|3\\\\d|4[045]|5[459]|6[235-9]|7[0-3579]|90)\\\\d{2,7}\", , , , \"83012378\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    OM: [, [, , \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\", , , , , , , [7, 8, 9]], [, , \"2[1-6]\\\\d{6}\", , , , \"23123456\", , , [8]], [, , \"(?:1505|90[1-9]\\\\d)\\\\d{4}|(?:7[126-9]|9[1-9])\\\\d{6}\", , , , \"92123456\", , , [8]], [, , \"8007\\\\d{4,5}|(?:500|800[05])\\\\d{4}\", , , , \"80071234\"], [, , \"900\\\\d{5}\", , , , \"90012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"OM\", 968, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{3})(\\\\d{4,6})\",\n      \"$1 $2\",\n      [\"[58]\"]\n    ], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PA: [, [, , \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\", , , , , , , [7, 8, 10, 11]], [\n      ,\n      ,\n      \"(?:1(?:0\\\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[058]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[07-9]\\\\d|1[0-7]|2[0-5]|33|4[0-79]|5[0-35]|6[068])|4(?:00|3[0-579]|4\\\\d|7[0-57-9])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[0156]|7[0-24-9]|8[5-9]|90)|8(?:09|2[89]|3\\\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\\\d))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"2001234\",\n      ,\n      ,\n      [7]\n    ], [, , \"(?:1[16]1|21[89]|6\\\\d{3}|8(?:1[01]|7[23]))\\\\d{4}\", , , , \"61234567\", , , [7, 8]], [, , \"800\\\\d{4,5}|(?:00800|800\\\\d)\\\\d{6}\", , , , \"8001234\"], [, , \"(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\\\d{4}\", , , , \"8601234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PA\", 507, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PE: [, [\n      ,\n      ,\n      \"(?:[14-8]|9\\\\d)\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 9],\n      [6, 7]\n    ], [, , \"(?:(?:(?:4[34]|5[14])[0-8]|687)\\\\d|7(?:173|(?:3[0-8]|55)\\\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[0569]|[56]0)))\\\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\\\d{6}\", , , , \"11234567\", , , [8], [6, 7]], [, , \"9\\\\d{8}\", , , , \"912345678\", , , [9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"805\\\\d{5}\", , , , \"80512345\", , , [8]], [, , \"801\\\\d{5}\", , , , \"80112345\", , , [8]], [, , \"80[24]\\\\d{5}\", , , , \"80212345\", , , [8]], [, , , , , , , , , [-1]], \"PE\", 51, \"00|19(?:1[124]|77|90)00\", \"0\", \" Anexo \", , \"0\", , \"00\", , [[\n      ,\n      \"(\\\\d{3})(\\\\d{5})\",\n      \"$1 $2\",\n      [\"80\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PF: [\n      ,\n      [, , \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\", , , , , , , [6, 8, 9]],\n      [, , \"4(?:0[4-689]|9[4-68])\\\\d{5}\", , , , \"40412345\", , , [8]],\n      [, , \"8[7-9]\\\\d{6}\", , , , \"87123456\", , , [8]],\n      [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\", , , [9]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"499\\\\d{5}\", , , , \"49901234\", , , [8]],\n      \"PF\",\n      689,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"44\\\\d{4}\", , , , , , , [6]],\n      [, , \"44\\\\d{4}\", , , , \"440123\", , , [6]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    PG: [, [, , \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\", , , , , , , [7, 8]], [, , \"(?:(?:3[0-2]|4[257]|5[34]|9[78])\\\\d|64[1-9]|85[02-46-9])\\\\d{4}\", , , , \"3123456\", , , [7]], [, , \"(?:7\\\\d|8[1-38])\\\\d{6}\", , , , \"70123456\", , , [8]], [\n      ,\n      ,\n      \"180\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"1801234\",\n      ,\n      ,\n      [7]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"2(?:0[0-57]|7[568])\\\\d{4}\", , , , \"2751234\", , , [7]], \"PG\", 675, \"00|140[1-3]\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]], , [, , \"27[01]\\\\d{4}\", , , , \"2700123\", , , [7]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PH: [, [, , \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\", , , , , , , [6, 8, 9, 10, 11, 12, 13], [4, 5, 7]], [\n      ,\n      ,\n      \"(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\\\d{3}|88(?:22\\\\d\\\\d|42))\\\\d{4}|(?:2|8[2-8]\\\\d\\\\d)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"232345678\",\n      ,\n      ,\n      [6, 8, 9, 10],\n      [4, 5, 7]\n    ], [, , \"(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\\\d|4[2-9]|8[135-9]|9[1-9]))\\\\d{7}\", , , , \"9051234567\", , , [10]], [, , \"1800\\\\d{7,9}\", , , , \"180012345678\", , , [11, 12, 13]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PH\", 63, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [\n      ,\n      \"(\\\\d{4})(\\\\d{4,6})\",\n      \"$1 $2\",\n      [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PK: [, [\n      ,\n      ,\n      \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 9, 10, 11, 12],\n      [5, 6, 7]\n    ], [, , \"(?:(?:21|42)[2-9]|58[126])\\\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\\\d{5,6}\", , , , \"2123456789\", , , [9, 10], [5, 6, 7, 8]], [, , \"3(?:[0-247]\\\\d|3[0-79]|55|64)\\\\d{7}\", , , , \"3012345678\", , , [10]], [, , \"800\\\\d{5}(?:\\\\d{3})?\", , , , \"80012345\", , , [8, 11]], [, , \"900\\\\d{5}\", , , , \"90012345\", , , [8]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"122\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"122044444\",\n      ,\n      ,\n      [9]\n    ], [, , , , , , , , , [-1]], \"PK\", 92, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{6,7})\",\n      \"$1 $2\",\n      [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"21111825888\",\n      ,\n      ,\n      [11, 12]\n    ], , , [, , , , , , , , , [-1]]],\n    PL: [, [, , \"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\", , , , , , , [6, 7, 8, 9, 10]], [, , \"47\\\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\\\d{6}|1(?:[0-8]\\\\d{5}|9\\\\d{3}(?:\\\\d{2})?))\", , , , \"123456789\", , , [7, 9]], [, , \"21(?:1[013-5]|2\\\\d|3[4-9])\\\\d{5}|(?:45|5[0137]|6[069]|7[2389]|88)\\\\d{7}\", , , , \"512345678\", , , [9]], [, , \"800\\\\d{6,7}\", , , , \"800123456\", , , [9, 10]], [, , \"70[01346-8]\\\\d{6}\", , , , \"701234567\", , , [9]], [\n      ,\n      ,\n      \"801\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"801234567\",\n      ,\n      ,\n      [9]\n    ], [, , , , , , , , , [-1]], [, , \"39\\\\d{7}\", , , , \"391234567\", , , [9]], \"PL\", 48, \"00\", , , , , , , , [\n      [, \"(\\\\d{5})\", \"$1\", [\"19\"]],\n      [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|20|64\"]],\n      [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],\n      [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]\n    ], , [, , \"64\\\\d{4,7}\", , , , \"641234567\", , , [6, 7, 8, 9]], , , [, , , , , , , , , [-1]], [, , \"804\\\\d{6}\", , , , \"804123456\", , , [9]], , , [, , , , , , , , , [-1]]],\n    PM: [, [, , \"[45]\\\\d{5}|(?:708|8\\\\d\\\\d)\\\\d{6}\", , , , , , , [6, 9]], [, , \"(?:4[1-35-9]|5[0-47-9]|80[6-9]\\\\d\\\\d)\\\\d{4}\", , , , \"430123\"], [, , \"(?:4[02-489]|5[02-9]|708(?:4[0-5]|5[0-6]))\\\\d{4}\", , , , \"551234\"], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\", , , [9]], [\n      ,\n      ,\n      \"8[129]\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"810123456\",\n      ,\n      ,\n      [9]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PM\", 508, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PR: [, [, , \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", , , , , , , [10], [7]], [, , \"(?:787|939)[2-9]\\\\d{6}\", , , , \"7872345678\", , , , [7]], [, , \"(?:787|939)[2-9]\\\\d{6}\", , , , \"7872345678\", , , , [7]], [\n      ,\n      ,\n      \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"8002345678\"\n    ], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"PR\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , \"787|939\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PS: [, [\n      ,\n      ,\n      \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8, 9, 10],\n      [7]\n    ], [, , \"(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\\\d{5}\", , , , \"22234567\", , , [8], [7]], [, , \"5[69]\\\\d{7}\", , , , \"599123456\", , , [9]], [, , \"1800\\\\d{6}\", , , , \"1800123456\", , , [10]], [, , , , , , , , , [-1]], [, , \"1700\\\\d{6}\", , , , \"1700123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PS\", 970, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PT: [\n      ,\n      [, , \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\", , , , , , , [9]],\n      [, , \"2(?:[12]\\\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\\\d{6}\", , , , \"212345678\"],\n      [, , \"6(?:[06]92(?:30|9\\\\d)|[35]92(?:[049]\\\\d|3[034]))\\\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\\\d\\\\d|480))\\\\d{5}\", , , , \"912345678\"],\n      [, , \"80[02]\\\\d{6}\", , , , \"800123456\"],\n      [, , \"(?:6(?:0[178]|4[68])\\\\d|76(?:0[1-57]|1[2-47]|2[237]))\\\\d{5}\", , , , \"760123456\"],\n      [, , \"80(?:8\\\\d|9[1579])\\\\d{5}\", , , , \"808123456\"],\n      [, , \"884[0-4689]\\\\d{5}\", , , , \"884123456\"],\n      [, , \"30\\\\d{7}\", , , , \"301234567\"],\n      \"PT\",\n      351,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]],\n      ,\n      [, , \"6(?:222\\\\d|8988)\\\\d{4}\", , , , \"622212345\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"70(?:38[01]|596|(?:7\\\\d|8[17])\\\\d)\\\\d{4}\", , , , \"707123456\"],\n      ,\n      ,\n      [, , \"600\\\\d{6}|6[06]92(?:0\\\\d|3[349]|49)\\\\d{3}\", , , , \"600110000\"]\n    ],\n    PW: [, [, , \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\", , , , , , , [7]], [, , \"(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\\\d{4}\", , , , \"2771234\"], [\n      ,\n      ,\n      \"(?:(?:46|83)[0-5]|6[2-4689]0)\\\\d{4}|(?:45|77|88)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"6201234\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PW\", 680, \"01[12]\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    PY: [, [, , \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\", , , , , , , [6, 7, 8, 9, 10, 11], [5]], [\n      ,\n      ,\n      \"(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\\\d|6[1-578]|75|8[0-8])|858)\\\\d{5,6}\",\n      ,\n      ,\n      ,\n      \"212345678\",\n      ,\n      ,\n      [7, 8, 9],\n      [5, 6]\n    ], [, , \"9(?:51|6[129]|7[1-6]|8[1-7]|9[1-5])\\\\d{6}\", , , , \"961456789\", , , [9]], [, , \"9800\\\\d{5,7}\", , , , \"98000123456\", , , [9, 10, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"8700[0-4]\\\\d{4}\", , , , \"870012345\", , , [9]], \"PY\", 595, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n      \"$1 $2 $3\",\n      [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\n      \"(0$1)\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-7])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"[2-9]0\\\\d{4,7}\", , , , \"201234567\", , , [6, 7, 8, 9]], , , [, , , , , , , , , [-1]]],\n    QA: [, [, , \"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\", , , , , , , [7, 8, 9, 11]], [\n      ,\n      ,\n      \"4(?:1111|2022)\\\\d{3}|4(?:[04]\\\\d\\\\d|14[0-6]|999)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"44123456\",\n      ,\n      ,\n      [8]\n    ], [, , \"[35-7]\\\\d{7}\", , , , \"33123456\", , , [8]], [, , \"800\\\\d{4}|(?:0080[01]|800)\\\\d{6}\", , , , \"8001234\", , , [7, 9, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"QA\", 974, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[16]|8\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]], , [, , \"2[16]\\\\d{5}\", , , , \"2123456\", , , [7]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    RE: [, [, , \"709\\\\d{6}|(?:26|[689]\\\\d)\\\\d{7}\", , , , , , , [9]], [, , \"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\", , , , \"262161234\"], [\n      ,\n      ,\n      \"(?:69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"692123456\"\n    ], [, , \"80\\\\d{7}\", , , , \"801234567\"], [, , \"89[1-37-9]\\\\d{6}\", , , , \"891123456\"], [, , \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , \"9(?:399[0-3]|479[0-5]|76(?:2[278]|3[0-37]))\\\\d{4}\", , , , \"939901234\"], \"RE\", 262, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[26-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    RO: [, [, , \"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\", , , , , , , [6, 9]], [\n      ,\n      ,\n      \"[23][13-6]\\\\d{7}|(?:2(?:19\\\\d|[3-6]\\\\d9)|31\\\\d\\\\d)\\\\d\\\\d\",\n      ,\n      ,\n      ,\n      \"211234567\"\n    ], [, , \"(?:630|702)0\\\\d{5}|(?:6(?:00|2\\\\d)|7(?:0[013-9]|1[0-3]|[2-7]\\\\d|8[03-8]|9[0-39]))\\\\d{6}\", , , , \"712034567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"90[0136]\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"801\\\\d{6}\", , , , \"801123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RO\", 40, \"00\", \"0\", \" int \", , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[236-9]\"],\n      \"0$1\"\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:37\\\\d|80[578])\\\\d{6}\", , , , \"372123456\", , , [9]], , , [, , , , , , , , , [-1]]],\n    RS: [, [, , \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\", , , , , , , [6, 7, 8, 9, 10, 11, 12], [4, 5]], [, , \"(?:11[1-9]\\\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\\\d))\\\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\\\d{4,9}\", , , , \"10234567\", , , [7, 8, 9, 10, 11, 12], [4, 5, 6]], [, , \"6(?:[0-689]|7\\\\d)\\\\d{6,7}\", , , , \"601234567\", , , [8, 9, 10]], [\n      ,\n      ,\n      \"800\\\\d{3,9}\",\n      ,\n      ,\n      ,\n      \"80012345\"\n    ], [, , \"(?:78\\\\d|90[0169])\\\\d{3,7}\", , , , \"90012345\", , , [6, 7, 8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RS\", 381, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"7[06]\\\\d{4,10}\", , , , \"700123456\"], , , [, , , , , , , , , [-1]]],\n    RU: [, [, , \"8\\\\d{13}|[347-9]\\\\d{9}\", , , , , , , [10, 14], [7]], [\n      ,\n      ,\n      \"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"3011234567\",\n      ,\n      ,\n      [10],\n      [7]\n    ], [, , \"9\\\\d{9}\", , , , \"9123456789\", , , [10]], [, , \"8(?:0[04]|108\\\\d{3})\\\\d{7}\", , , , \"8001234567\"], [, , \"80[39]\\\\d{7}\", , , , \"8091234567\", , , [10]], [, , , , , , , , , [-1]], [, , \"808\\\\d{7}\", , , , \"8081234567\", , , [10]], [, , , , , , , , , [-1]], \"RU\", 7, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"[0-79]\"]], [\n      ,\n      \"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\n      \"8 ($1)\",\n      ,\n      1\n    ], [, \"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2-$3-$4\",\n      [\"[349]|8(?:[02-7]|1[1-8])\"],\n      \"8 ($1)\",\n      ,\n      1\n    ], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], [[, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\", , 1], [\n      ,\n      \"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\n      \"8 ($1)\",\n      ,\n      1\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\", , 1], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], [, , , , , , , , , [-1]], 1, \"3[04-689]|[489]\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    RW: [, [, , \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\", , , , , , , [8, 9]], [, , \"(?:06|2[23568]\\\\d)\\\\d{6}\", , , , \"250123456\"], [, , \"7[237-9]\\\\d{7}\", , , , \"720123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [\n      ,\n      ,\n      \"900\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"900123456\",\n      ,\n      ,\n      [9]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RW\", 250, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SA: [, [, , \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\", , , , , , , [9, 10], [7]], [, , \"1(?:1\\\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\", , , , \"112345678\", , , [9], [7]], [\n      ,\n      ,\n      \"579[01]\\\\d{5}|5(?:[013-689]\\\\d|7[0-8])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"512345678\",\n      ,\n      ,\n      [9]\n    ], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"925\\\\d{6}\", , , , \"925012345\", , , [9]], [, , \"920\\\\d{6}\", , , , \"920012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SA\", 966, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"811\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"8110123456\",\n      ,\n      ,\n      [10]\n    ], , , [, , , , , , , , , [-1]]],\n    SB: [, [, , \"[6-9]\\\\d{6}|[1-6]\\\\d{4}\", , , , , , , [5, 7]], [, , \"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\", , , , \"40123\", , , [5]], [, , \"48\\\\d{3}|(?:(?:6[89]|7[1-9]|8[4-9])\\\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\\\d{4}\", , , , \"7421234\"], [, , \"1[38]\\\\d{3}\", , , , \"18123\", , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5[12]\\\\d{3}\", , , , \"51123\", , , [5]], \"SB\", 677, \"0[01]\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])\"]]], , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SC: [, [, , \"(?:[2489]\\\\d|64)\\\\d{5}\", , , , , , , [7]], [, , \"4[2-46]\\\\d{5}\", , , , \"4217123\"], [, , \"2[125-8]\\\\d{5}\", , , , \"2510123\"], [, , \"800[08]\\\\d{3}\", , , , \"8000000\"], [, , \"85\\\\d{5}\", , , , \"8512345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"971\\\\d{4}|(?:64|95)\\\\d{5}\", , , , \"6412345\"], \"SC\", 248, \"010|0[0-2]\", , , , , , \"00\", , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SD: [, [, , \"[19]\\\\d{8}\", , , , , , , [9]], [\n      ,\n      ,\n      \"1(?:5\\\\d|8[35-7])\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"153123456\"\n    ], [, , \"(?:1[0-2]|9[0-3569])\\\\d{7}\", , , , \"911231234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SD\", 249, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SE: [, [, , \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\", , , , , , , [6, 7, 8, 9, 10, 12]], [\n      ,\n      ,\n      \"(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\\\d)\\\\d|90[1-9])\\\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\\\d{5,6}\",\n      ,\n      ,\n      ,\n      \"8123456\",\n      ,\n      ,\n      [7, 8, 9]\n    ], [, , \"7[02369]\\\\d{7}\", , , , \"701234567\", , , [9]], [, , \"20\\\\d{4,7}\", , , , \"20123456\", , , [6, 7, 8, 9]], [, , \"649\\\\d{6}|99[1-59]\\\\d{4}(?:\\\\d{3})?|9(?:00|39|44)[1-8]\\\\d{3,6}\", , , , \"9001234567\", , , [7, 8, 9, 10]], [, , \"77[0-7]\\\\d{6}\", , , , \"771234567\", , , [9]], [, , \"75[1-8]\\\\d{6}\", , , , \"751234567\", , , [9]], [, , , , , , , , , [-1]], \"SE\", 46, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\n      \"$1-$2 $3\",\n      [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\"], [\n      ,\n      \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n      \"$1-$2 $3 $4\",\n      [\"8\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"20\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"9(?:00|39|44|9)\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"]], [\n      ,\n      \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"8\"]\n    ], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1 $2 $3\", [\"9(?:00|39|44)\"]], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"10|7\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [\n      ,\n      \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]\n    ], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]]], [, , \"74[02-9]\\\\d{6}\", , , , \"740123456\", , , [9]], , , [, , , , , , , , , [-1]], [, , \"10[1-8]\\\\d{6}\", , , , \"102345678\", , , [9]], , , [, , \"(?:25[245]|67[3-68])\\\\d{9}\", , , , \"254123456789\", , , [12]]],\n    SG: [, [, , \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\", , , , , , , [8, 10, 11]], [\n      ,\n      ,\n      \"662[0-24-9]\\\\d{4}|6(?:[0-578]\\\\d|6[013-57-9]|9[0-35-9])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"61234567\",\n      ,\n      ,\n      [8]\n    ], [, , \"896[0-4]\\\\d{4}|(?:8(?:0[1-9]|[1-8]\\\\d|9[0-5])|9[0-8]\\\\d)\\\\d{5}\", , , , \"81234567\", , , [8]], [, , \"(?:18|8)00\\\\d{7}\", , , , \"18001234567\", , , [10, 11]], [, , \"1900\\\\d{7}\", , , , \"19001234567\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:3[12]\\\\d|666)\\\\d{5}\", , , , \"31234567\", , , [8]], \"SG\", 65, \"0[0-3]\\\\d\", , , , , , , , [[, \"(\\\\d{4,5})\", \"$1\", [\"1[013-9]|77\", \"1(?:[013-8]|9(?:0[1-9]|[1-9]))|77\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\n      ,\n      \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"7\"]\n    ], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"7000\\\\d{7}\", , , , \"70001234567\", , , [11]], , , [, , , , , , , , , [-1]]],\n    SH: [\n      ,\n      [, , \"(?:[256]\\\\d|8)\\\\d{3}\", , , , , , , [4, 5]],\n      [, , \"2(?:[0-57-9]\\\\d|6[4-9])\\\\d\\\\d\", , , , \"22158\"],\n      [, , \"[56]\\\\d{4}\", , , , \"51234\", , , [5]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"262\\\\d\\\\d\", , , , \"26212\", , , [5]],\n      \"SH\",\n      290,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      1,\n      \"[256]\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    SI: [\n      ,\n      [, , \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\", , , , , , , [5, 6, 7, 8]],\n      [, , \"(?:[1-357][2-8]|4[24-8])\\\\d{6}\", , , , \"12345678\", , , [8], [7]],\n      [, , \"65(?:[178]\\\\d|5[56]|6[01])\\\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\\\d{6}\", , , , \"31234567\", , , [8]],\n      [, , \"80\\\\d{4,6}\", , , , \"80123456\", , , [6, 7, 8]],\n      [, , \"89[1-3]\\\\d{2,5}|90\\\\d{4,6}\", , , , \"90123456\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"(?:59\\\\d\\\\d|8(?:1(?:[67]\\\\d|8[0-589])|2(?:0\\\\d|2[0-37-9]|8[0-2489])|3[389]\\\\d))\\\\d{4}\", , , , \"59012345\", , , [8]],\n      \"SI\",\n      386,\n      \"00|10(?:22|66|88|99)\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      \"00\",\n      ,\n      [[, \"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    SJ: [, [\n      ,\n      ,\n      \"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [5, 8]\n    ], [, , \"79\\\\d{6}\", , , , \"79123456\", , , [8]], [, , \"(?:4[015-8]|9\\\\d)\\\\d{6}\", , , , \"41234567\", , , [8]], [, , \"80[01]\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"82[09]\\\\d{5}\", , , , \"82012345\", , , [8]], [, , \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", , , , \"81021234\", , , [8]], [, , \"880\\\\d{5}\", , , , \"88012345\", , , [8]], [, , \"85[0-5]\\\\d{5}\", , , , \"85012345\", , , [8]], \"SJ\", 47, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , \"79\", [, , , , , , , , , [-1]], [, , \"(?:0[235-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\", , , , \"02000\"], , , [, , \"81[23]\\\\d{5}\", , , , \"81212345\", , , [8]]],\n    SK: [, [\n      ,\n      ,\n      \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [6, 7, 9]\n    ], [, , \"(?:2(?:16|[2-9]\\\\d{3})|(?:(?:[3-5][1-8]\\\\d|819)\\\\d|601[1-5])\\\\d)\\\\d{4}|(?:2|[3-5][1-8])1[67]\\\\d{3}|[3-5][1-8]16\\\\d\\\\d\", , , , \"221234567\"], [, , \"909[1-9]\\\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\\\d)\\\\d{6}\", , , , \"912123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"9(?:00|[78]\\\\d)\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"8[5-9]\\\\d{7}\", , , , \"850123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"6(?:02|5[0-4]|9[0-6])\\\\d{6}\", , , , \"690123456\", , , [9]], \"SK\", 421, \"00\", \"0\", , , \"0\", , , , [[\n      ,\n      \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\n      \"$1 $2 $3\",\n      [\"21\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"909\", \"9090\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [\n      ,\n      \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n      \"$1/$2 $3 $4\",\n      [\"2\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [, , \"9090\\\\d{3}\", , , , \"9090123\", , , [7]], , , [, , \"9090\\\\d{3}|(?:602|8(?:00|[5-9]\\\\d)|9(?:00|[78]\\\\d))\\\\d{6}\", , , , , , , [7, 9]], [, , \"96\\\\d{7}\", , , , \"961234567\", , , [9]], , , [, , , , , , , , , [-1]]],\n    SL: [, [, , \"(?:[237-9]\\\\d|66)\\\\d{6}\", , , , , , , [8], [6]], [, , \"22[2-4][2-9]\\\\d{4}\", , , , \"22221234\", , , , [6]], [, , \"(?:25|3[0-5]|66|7[2-9]|8[08]|9[09])\\\\d{6}\", , , , \"25123456\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SL\", 232, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SM: [\n      ,\n      [, , \"(?:0549|[5-7]\\\\d)\\\\d{6}\", , , , , , , [8, 10], [6]],\n      [, , \"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\", , , , \"0549886377\", , , [10], [6]],\n      [, , \"6[16]\\\\d{6}\", , , , \"66661212\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , \"7[178]\\\\d{6}\", , , , \"71123456\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"5[158]\\\\d{6}\", , , , \"58001110\", , , [8]],\n      \"SM\",\n      378,\n      \"00\",\n      ,\n      ,\n      ,\n      \"([89]\\\\d{5})$\",\n      \"0549$1\",\n      ,\n      ,\n      [[, \"(\\\\d{6})\", \"$1\", [\"[89]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]],\n      [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    SN: [, [, , \"(?:[378]\\\\d|93)\\\\d{7}\", , , , , , , [9]], [, , \"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\\\d{5}\", , , , \"301012345\"], [\n      ,\n      ,\n      \"7(?:(?:[06-8]\\\\d|[19]0|21)\\\\d|5(?:0[01]|[19]0|2[25]|3[36]|[4-7]\\\\d|8[35]))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"701234567\"\n    ], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , \"88[4689]\\\\d{6}\", , , , \"884123456\"], [, , \"81[02468]\\\\d{6}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , \"(?:3(?:392|9[01]\\\\d)\\\\d|93(?:3[13]0|929))\\\\d{4}\", , , , \"933301234\"], \"SN\", 221, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SO: [, [, , \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\", , , , , , , [6, 7, 8, 9]], [\n      ,\n      ,\n      \"(?:1\\\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\\\d{5}|(?:[134]\\\\d|8[125])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"4012345\",\n      ,\n      ,\n      [6, 7]\n    ], [, , \"(?:(?:15|(?:3[59]|4[89]|6\\\\d|7[79]|8[08])\\\\d|9(?:0\\\\d|[2-9]))\\\\d|2(?:4\\\\d|8))\\\\d{5}|(?:[67]\\\\d\\\\d|904)\\\\d{5}\", , , , \"71123456\", , , [7, 8, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SO\", 252, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [, \"(\\\\d{6})\", \"$1\", [\"[134]\"]], [, \"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [\n      ,\n      \"(\\\\d)(\\\\d{7})\",\n      \"$1 $2\",\n      [\"(?:2|90)4|[67]\"]\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[348]|64|79|90\"]], [, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6[0-35-9]|77|9[2-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SR: [, [, , \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\", , , , , , , [6, 7]], [, , \"(?:2[1-3]|3[0-7]|(?:4|68)\\\\d|5[2-58])\\\\d{4}\", , , , \"211234\"], [, , \"(?:7[124-7]|8[124-9])\\\\d{5}\", , , , \"7412345\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"56\\\\d{4}\", , , , \"561234\", , , [6]], \"SR\", 597, \"00\", , , , , , , , [[\n      ,\n      \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n      \"$1-$2-$3\",\n      [\"56\"]\n    ], [, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SS: [, [, , \"[19]\\\\d{8}\", , , , , , , [9]], [, , \"1[89]\\\\d{7}\", , , , \"181234567\"], [, , \"(?:12|9[1257-9])\\\\d{7}\", , , , \"977123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SS\", 211, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ]],\n    ST: [, [, , \"(?:22|9\\\\d)\\\\d{5}\", , , , , , , [7]], [, , \"22\\\\d{5}\", , , , \"2221234\"], [, , \"900[5-9]\\\\d{3}|9(?:0[1-9]|[89]\\\\d)\\\\d{4}\", , , , \"9812345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ST\", 239, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SV: [, [, , \"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\", , , , , , , [7, 8, 11]], [\n      ,\n      ,\n      \"2(?:79(?:0[0347-9]|[1-9]\\\\d)|89(?:0[024589]|[1-9]\\\\d))\\\\d{3}|2(?:[1-69]\\\\d|[78][0-8])\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"21234567\",\n      ,\n      ,\n      [8]\n    ], [, , \"[67]\\\\d{7}\", , , , \"70123456\", , , [8]], [, , \"800\\\\d{8}|80[01]\\\\d{4}\", , , , \"8001234\", , , [7, 11]], [, , \"900\\\\d{4}(?:\\\\d{4})?\", , , , \"9001234\", , , [7, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SV\", 503, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SX: [\n      ,\n      [, , \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [\n        ,\n        ,\n        \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\",\n        ,\n        ,\n        ,\n        \"7215425678\",\n        ,\n        ,\n        ,\n        [7]\n      ],\n      [, , \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\", , , , \"7215205678\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , , , , , , , , [-1]],\n      \"SX\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"(5\\\\d{6})$|1\",\n      \"721$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"721\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    SY: [, [, , \"[1-359]\\\\d{8}|[1-5]\\\\d{7}\", , , , , , , [8, 9], [6, 7]], [, , \"21\\\\d{6,7}|(?:1(?:[14]\\\\d|[2356])|2[235]|3(?:[13]\\\\d|4)|4[134]|5[1-3])\\\\d{6}\", , , , \"112345678\", , , , [6, 7]], [, , \"(?:50|9[1-689])\\\\d{7}\", , , , \"944567890\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SY\", 963, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-4]|5[1-3]\"], \"0$1\", , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"[59]\"],\n      \"0$1\",\n      ,\n      1\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    SZ: [, [, , \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\", , , , , , , [8, 9]], [, , \"[23][2-5]\\\\d{6}\", , , , \"22171234\", , , [8]], [, , \"7[6-9]\\\\d{6}\", , , , \"76123456\", , , [8]], [, , \"0800\\\\d{4}\", , , , \"08001234\", , , [8]], [, , \"900\\\\d{6}\", , , , \"900012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"70\\\\d{6}\", , , , \"70012345\", , , [8]], \"SZ\", 268, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]], , [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      \"0800\\\\d{4}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [8]\n    ], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TA: [, [, , \"8\\\\d{3}\", , , , , , , [4]], [, , \"8\\\\d{3}\", , , , \"8999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TA\", 290, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , \"8\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TC: [\n      ,\n      [, , \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [, , \"649(?:266|712|9(?:4\\\\d|50))\\\\d{4}\", , , , \"6497121234\", , , , [7]],\n      [, , \"649(?:2(?:3[129]|4[1-79])|3\\\\d\\\\d|4[34][1-3])\\\\d{4}\", , , , \"6492311234\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"],\n      [, , , , , , , , , [-1]],\n      [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"],\n      [, , \"649(?:71[01]|966)\\\\d{4}\", , , , \"6497101234\", , , , [7]],\n      \"TC\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"([2-479]\\\\d{6})$|1\",\n      \"649$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"649\",\n      [\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        [-1]\n      ],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    TD: [, [, , \"(?:22|[689]\\\\d|77)\\\\d{6}\", , , , , , , [8]], [, , \"22(?:[37-9]0|5[0-5]|6[89])\\\\d{4}\", , , , \"22501234\"], [, , \"(?:[69]\\\\d|77|8[56])\\\\d{6}\", , , , \"63012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TD\", 235, \"00|16\", , , , , , \"00\", , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[26-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TG: [, [, , \"[279]\\\\d{7}\", , , , , , , [8]], [\n      ,\n      ,\n      \"2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"22212345\"\n    ], [, , \"(?:7[0-29]|9[0-36-9])\\\\d{6}\", , , , \"90112345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TG\", 228, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TH: [, [, , \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\", , , , , , , [8, 9, 10, 13]], [, , \"(?:1[0689]|2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\", , , , \"21234567\", , , [8]], [\n      ,\n      ,\n      \"67(?:1[0-8]|2[4-7])\\\\d{5}|(?:14|6[1-6]|[89]\\\\d)\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"812345678\",\n      ,\n      ,\n      [9]\n    ], [, , \"(?:001800\\\\d|1800)\\\\d{6}\", , , , \"1800123456\", , , [10, 13]], [, , \"1900\\\\d{6}\", , , , \"1900123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"6[08]\\\\d{7}\", , , , \"601234567\", , , [9]], \"TH\", 66, \"00[1-9]\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TJ: [, [, , \"[0-57-9]\\\\d{8}\", , , , , , , [9], [3, 5, 6, 7]], [\n      ,\n      ,\n      \"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"372123456\",\n      ,\n      ,\n      ,\n      [3, 5, 6, 7]\n    ], [, , \"(?:33[03-9]|4(?:1[18]|4[02-479])|81[1-9])\\\\d{6}|(?:[09]\\\\d|1[0178]|2[02]|[34]0|5[05]|7[01578]|8[078])\\\\d{7}\", , , , \"917123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TJ\", 992, \"810\", , , , , , \"8~10\", , [[, \"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"44[02-479]|[34]7\"]], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[1245]|3[12])\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]], , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TK: [, [, , \"[2-47]\\\\d{3,6}\", , , , , , , [4, 5, 6, 7]], [, , \"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\", , , , \"3101\"], [, , \"7[2-4]\\\\d{2,5}\", , , , \"7290\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TK\", 690, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TL: [, [, , \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\", , , , , , , [7, 8]], [, , \"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\", , , , \"2112345\", , , [7]], [\n      ,\n      ,\n      \"7[2-8]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"77212345\",\n      ,\n      ,\n      [8]\n    ], [, , \"80\\\\d{5}\", , , , \"8012345\", , , [7]], [, , \"90\\\\d{5}\", , , , \"9012345\", , , [7]], [, , , , , , , , , [-1]], [, , \"70\\\\d{5}\", , , , \"7012345\", , , [7]], [, , , , , , , , , [-1]], \"TL\", 670, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TM: [, [, , \"(?:[1-6]\\\\d|71)\\\\d{6}\", , , , , , , [8]], [, , \"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\", , , , \"12345678\"], [\n      ,\n      ,\n      \"(?:6\\\\d|71)\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"66123456\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TM\", 993, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[67]\"], \"8 $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TN: [, [, , \"[2-57-9]\\\\d{7}\", , , , , , , [8]], [, , \"81200\\\\d{3}|(?:3[0-2]|7\\\\d)\\\\d{6}\", , , , \"30010123\"], [\n      ,\n      ,\n      \"3(?:001|[12]40)\\\\d{4}|(?:(?:[259]\\\\d|4[0-8])\\\\d|3(?:1[1-35]|6[0-4]|91))\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"20123456\"\n    ], [, , \"8010\\\\d{4}\", , , , \"80101234\"], [, , \"88\\\\d{6}\", , , , \"88123456\"], [, , \"8[12]10\\\\d{4}\", , , , \"81101234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TN\", 216, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TO: [, [, , \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\", , , , , , , [5, 7]], [, , \"(?:2\\\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\\\d{3}\", , , , \"20123\", , , [5]], [\n      ,\n      ,\n      \"(?:5(?:4[0-5]|5[4-6])|6(?:[09]\\\\d|3[02]|8[15-9])|(?:7\\\\d|8[46-9])\\\\d|999)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"7715123\",\n      ,\n      ,\n      [7]\n    ], [, , \"0800\\\\d{3}\", , , , \"0800222\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"55[0-37-9]\\\\d{4}\", , , , \"5510123\", , , [7]], \"TO\", 676, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TR: [, [, , \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [7, 10, 12, 13]], [\n      ,\n      ,\n      \"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"2123456789\",\n      ,\n      ,\n      [10]\n    ], [, , \"561(?:011|61\\\\d)\\\\d{4}|5(?:0[15-7]|1[06]|24|[34]\\\\d|5[1-59]|9[46])\\\\d{7}\", , , , \"5012345678\", , , [10]], [, , \"8(?:00\\\\d{7}(?:\\\\d{2,3})?|11\\\\d{7})\", , , , \"8001234567\", , , [10, 12, 13]], [, , \"(?:8[89]8|900)\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , \"592(?:21[12]|461)\\\\d{4}\", , , , \"5922121234\", , , [10]], [, , \"850\\\\d{7}\", , , , \"8500123456\", , , [10]], \"TR\", 90, \"00\", \"0\", , , \"0\", , , , [\n      [, \"(\\\\d{3})(\\\\d)(\\\\d{3})\", \"$1 $2 $3\", [\"444\"], , , 1],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", , 1],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\", , 1],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\", , 1],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", , 1]\n    ], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\", , 1], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n      \"$1 $2 $3 $4\",\n      [\"[24][1-8]|3[1-9]\"],\n      \"(0$1)\",\n      ,\n      1\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", , 1]], [, , \"512\\\\d{7}\", , , , \"5123456789\", , , [10]], , , [, , \"(?:444|811\\\\d{3})\\\\d{4}\", , , , , , , [7, 10]], [, , \"444\\\\d{4}\", , , , \"4441444\", , , [7]], , , [, , , , , , , , , [-1]]],\n    TT: [, [, , \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"868(?:2(?:01|1[5-9]|[23]\\\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\", , , , \"8682211234\", , , , [7]], [\n      ,\n      ,\n      \"868(?:(?:2[5-9]|3\\\\d)\\\\d|4(?:3[0-6]|[6-9]\\\\d)|6(?:20|78|8\\\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\\\d))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"8682911234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"TT\", 1, \"011\", \"1\", , , \"([2-46-8]\\\\d{6})$|1\", \"868$1\", , , , , [, , , , , , , , , [-1]], , \"868\", [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], , , [, , \"868619\\\\d{4}\", , , , \"8686191234\", , , , [7]]],\n    TV: [, [, , \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\", , , , , , , [5, 6, 7]], [, , \"2[02-9]\\\\d{3}\", , , , \"20123\", , , [5]], [, , \"(?:7[01]\\\\d|90)\\\\d{4}\", , , , \"901234\", , , [6, 7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TV\", 688, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    TW: [, [\n      ,\n      ,\n      \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [7, 8, 9, 10, 11]\n    ], [\n      ,\n      ,\n      \"(?:2[2-8]\\\\d|370|55[01]|7[1-9])\\\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\\\d)|1[023]\\\\d)\\\\d{4,5}|(?:[239]\\\\d\\\\d|4(?:0[56]|12|49))\\\\d{5})|6(?:[01]\\\\d{7}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|8(?:(?:2(?:3\\\\d|4[0-269]|[578]0|66)|36[24-9]|90\\\\d\\\\d)\\\\d{4}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|(?:2(?:2(?:0\\\\d\\\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\\\d|1[0-4])|(?:4\\\\d|5[0-49]|6[0-29]|7[0-5])\\\\d)\\\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\\\d\\\\d|4(?:2(?:[089]\\\\d|7[1-9])|(?:3[0-4]|[78]\\\\d|9[01])\\\\d))\\\\d)\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"221234567\",\n      ,\n      ,\n      [8, 9]\n    ], [, , \"(?:40001[0-2]|9[0-8]\\\\d{4})\\\\d{3}\", , , , \"912345678\", , , [9]], [, , \"80[0-79]\\\\d{6}|800\\\\d{5}\", , , , \"800123456\", , , [8, 9]], [, , \"20(?:[013-9]\\\\d\\\\d|2)\\\\d{4}\", , , , \"203123456\", , , [7, 9]], [, , , , , , , , , [-1]], [, , \"99\\\\d{7}\", , , , \"990123456\", , , [9]], [, , \"7010(?:[0-2679]\\\\d|3[0-7]|8[0-5])\\\\d{5}|70\\\\d{8}\", , , , \"7012345678\", , , [10, 11]], \"TW\", 886, \"0(?:0[25-79]|19)\", \"0\", \"#\", , \"0\", , , , [[, \"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [\n      ,\n      \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"50[0-46-9]\\\\d{6}\", , , , \"500123456\", , , [9]], , , [, , , , , , , , , [-1]]],\n    TZ: [\n      ,\n      [, , \"(?:[25-8]\\\\d|41|90)\\\\d{7}\", , , , , , , [9]],\n      [, , \"2[2-8]\\\\d{7}\", , , , \"222345678\"],\n      [, , \"(?:6[125-9]|7[13-9])\\\\d{7}\", , , , \"621234567\"],\n      [, , \"80[08]\\\\d{6}\", , , , \"800123456\"],\n      [, , \"90\\\\d{7}\", , , , \"900123456\"],\n      [, , \"8(?:40|6[01])\\\\d{6}\", , , , \"840123456\"],\n      [, , , , , , , , , [-1]],\n      [, , \"41\\\\d{7}\", , , , \"412345678\"],\n      \"TZ\",\n      255,\n      \"00[056]\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , \"(?:8(?:[04]0|6[01])|90\\\\d)\\\\d{6}\"],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    UA: [, [, , \"[89]\\\\d{9}|[3-9]\\\\d{8}\", , , , , , , [9, 10], [5, 6, 7]], [\n      ,\n      ,\n      \"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"311234567\",\n      ,\n      ,\n      [9],\n      [5, 6, 7]\n    ], [, , \"790\\\\d{6}|(?:39|50|6[36-8]|7[1-357]|9[1-9])\\\\d{7}\", , , , \"501234567\", , , [9]], [, , \"800[1-8]\\\\d{5,6}\", , , , \"800123456\"], [, , \"900[239]\\\\d{5,6}\", , , , \"900212345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"89[1-579]\\\\d{6}\", , , , \"891234567\", , , [9]], \"UA\", 380, \"00\", \"0\", , , \"0\", , \"0~0\", , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [\n      ,\n      \"(\\\\d{4})(\\\\d{5})\",\n      \"$1 $2\",\n      [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\n      \"0$1\"\n    ], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    UG: [, [, , \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\", , , , , , , [9], [5, 6, 7]], [\n      ,\n      ,\n      \"20(?:(?:240|30[67])\\\\d|6(?:00[0-2]|30[0-4]))\\\\d{3}|(?:20(?:[017]\\\\d|2[5-9]|3[1-4]|5[0-4]|6[15-9])|[34]\\\\d{3})\\\\d{5}\",\n      ,\n      ,\n      ,\n      \"312345678\",\n      ,\n      ,\n      ,\n      [5, 6, 7]\n    ], [, , \"72[48]0\\\\d{5}|7(?:[015-8]\\\\d|2[067]|36|4[0-6]|9[89])\\\\d{6}\", , , , \"712345678\"], [, , \"800[1-3]\\\\d{5}\", , , , \"800123456\"], [, , \"90[1-3]\\\\d{6}\", , , , \"901123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UG\", 256, \"00[057]\", \"0\", , , \"0\", , , , [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    US: [, [\n      ,\n      ,\n      \"[2-9]\\\\d{9}|3\\\\d{6}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [10],\n      [7]\n    ], [\n      ,\n      ,\n      \"(?:3052(?:0[0-8]|[1-9]\\\\d)|5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:305[3-9]|472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"2015550123\",\n      ,\n      ,\n      ,\n      [7]\n    ], [\n      ,\n      ,\n      \"(?:3052(?:0[0-8]|[1-9]\\\\d)|5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:305[3-9]|472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"2015550123\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , \"305209\\\\d{4}\", , , , \"3052090123\", , , , [7]], \"US\", 1, \"011\", \"1\", , , \"1\", , , 1, [\n      [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], , , 1],\n      [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[24-9]|3(?:[02-9]|1[1-9])\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], , , 1]\n    ], [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], , , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-9]\"]]], [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    UY: [, [, , \"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\", , , , , , , [6, 7, 8, 9, 10, 11, 12, 13]], [, , \"(?:1(?:770|9(?:20|[89]7))|(?:2\\\\d|4[2-7])\\\\d\\\\d)\\\\d{4}\", , , , \"21231234\", , , [8], [7]], [, , \"9[1-9]\\\\d{6}\", , , , \"94231234\", , , [8]], [\n      ,\n      ,\n      \"0004\\\\d{2,9}|(?:405|80[05])\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"8001234\"\n    ], [, , \"90[0-8]\\\\d{4}\", , , , \"9001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UY\", 598, \"0(?:0|1[3-9]\\\\d)\", \"0\", \" int. \", , \"0\", , \"00\", , [[, \"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[49]0|8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3 $4\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ]],\n    UZ: [, [, , \"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\", , , , , , , [9]], [, , \"(?:55\\\\d\\\\d|6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|[69]\\\\d\\\\d|7(?:[23]\\\\d|7[69]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|(?:1[12]|[68]\\\\d)\\\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|9(?:22|5[1-9])))\\\\d{5}\", , , , \"669050123\"], [\n      ,\n      ,\n      \"(?:(?:[25]0|33|88|9[0-57-9])\\\\d{3}|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:(?:11|7\\\\d)\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\\\d)\\\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079])))|7(?:[07]\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07]))))\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"912345678\"\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UZ\", 998, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    VA: [, [, , \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\", , , , , , , [6, 7, 8, 9, 10, 11, 12]], [, , \"06698\\\\d{1,6}\", , , , \"0669812345\", , , [6, 7, 8, 9, 10, 11]], [, , \"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\", , , , \"3123456789\", , , [9, 10]], [\n      ,\n      ,\n      \"80(?:0\\\\d{3}|3)\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"800123456\",\n      ,\n      ,\n      [6, 9]\n    ], [, , \"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", , , , \"899123456\", , , [6, 8, 9, 10]], [, , \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", , , , \"848123456\", , , [6, 9]], [, , \"1(?:78\\\\d|99)\\\\d{6}\", , , , \"1781234567\", , , [9, 10]], [, , \"55\\\\d{8}\", , , , \"5512345678\", , , [10]], \"VA\", 39, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , \"06698\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"3[2-8]\\\\d{9,10}\", , , , \"33101234501\", , , [11, 12]]],\n    VC: [\n      ,\n      [, , \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", , , , , , , [10], [7]],\n      [, , \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\", , , , \"7842661234\", , , , [7]],\n      [, , \"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\\\d{4}\", , , , \"7844301234\", , , , [7]],\n      [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"],\n      [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"],\n      [, , , , , , , , , [-1]],\n      [\n        ,\n        ,\n        \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n        ,\n        ,\n        ,\n        \"5002345678\"\n      ],\n      [, , \"78451[0-2]\\\\d{4}\", , , , \"7845101234\", , , , [7]],\n      \"VC\",\n      1,\n      \"011\",\n      \"1\",\n      ,\n      ,\n      \"([2-7]\\\\d{6})$|1\",\n      \"784$1\",\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      \"784\",\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    VE: [\n      ,\n      [, , \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\", , , , , , , [10], [7]],\n      [, , \"(?:2(?:12|3[457-9]|[467]\\\\d|[58][1-9]|9[1-6])|[4-6]00)\\\\d{7}\", , , , \"2121234567\", , , , [7]],\n      [, , \"4(?:1[24-8]|2[46])\\\\d{7}\", , , , \"4121234567\"],\n      [, , \"800\\\\d{7}\", , , , \"8001234567\"],\n      [, , \"90[01]\\\\d{7}\", , , , \"9001234567\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"VE\",\n      58,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\", \"$CC $1\"]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"501\\\\d{7}\", , , , \"5010123456\", , , , [7]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    VG: [, [, , \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", , , , , , , [10], [7]], [, , \"284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\\\d{4}\", , , , \"2842291234\", , , , [7]], [, , \"284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|9[69])|5(?:4[0-7]|68|9[69]))\\\\d{4}\", , , , \"2843001234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [\n      ,\n      ,\n      \"900[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"9002345678\"\n    ], [, , , , , , , , , [-1]], [, , \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"VG\", 1, \"011\", \"1\", , , \"([2-578]\\\\d{6})$|1\", \"284$1\", , , , , [, , , , , , , , , [-1]], , \"284\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    VI: [, [, , \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\", , , , , , , [10], [7]], [\n      ,\n      ,\n      \"340(?:2(?:0\\\\d|10|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\\\d)|884|998)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"3406421234\",\n      ,\n      ,\n      ,\n      [7]\n    ], [, , \"340(?:2(?:0\\\\d|10|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\\\d)|884|998)\\\\d{4}\", , , , \"3406421234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\",\n      ,\n      ,\n      ,\n      \"5002345678\"\n    ], [, , , , , , , , , [-1]], \"VI\", 1, \"011\", \"1\", , , \"([2-9]\\\\d{6})$|1\", \"340$1\", , 1, , , [, , , , , , , , , [-1]], , \"340\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    VN: [, [, , \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\", , , , , , , [7, 8, 9, 10]], [, , \"2(?:0[3-9]|1[0-689]|2[0-25-9]|[38][2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|9[0-4679])\\\\d{7}\", , , , \"2101234567\", , , [10]], [, , \"(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\\\d{6}|(?:3\\\\d|5[1689]|7[06-9]|8[1-8]|9[0-8])\\\\d{7}\", , , , \"912345678\", , , [9]], [\n      ,\n      ,\n      \"1800\\\\d{4,6}|12(?:0[13]|28)\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"1800123456\",\n      ,\n      ,\n      [8, 9, 10]\n    ], [, , \"1900\\\\d{4,6}\", , , , \"1900123456\", , , [8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"672\\\\d{6}\", , , , \"672012345\", , , [9]], \"VN\", 84, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[17]99\"], \"0$1\", , 1], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"69\"], \"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], , , 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\", , 1], [\n      ,\n      \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"2[48]\"],\n      \"0$1\",\n      ,\n      1\n    ], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", , 1]], [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], , , 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\", , 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", , 1]], [, , , , , , , , , [-1]], , , [, , \"[17]99\\\\d{4}|69\\\\d{5,6}\", , , , , , , [7, 8]], [\n      ,\n      ,\n      \"(?:[17]99|80\\\\d)\\\\d{4}|69\\\\d{5,6}\",\n      ,\n      ,\n      ,\n      \"1992000\",\n      ,\n      ,\n      [7, 8]\n    ], , , [, , , , , , , , , [-1]]],\n    VU: [\n      ,\n      [, , \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\", , , , , , , [5, 7]],\n      [, , \"(?:38[0-8]|48[4-9])\\\\d\\\\d|(?:2[02-9]|3[4-7]|88)\\\\d{3}\", , , , \"22123\", , , [5]],\n      [, , \"(?:[58]\\\\d|7[013-7])\\\\d{5}\", , , , \"5912345\", , , [7]],\n      [, , \"81[18]\\\\d\\\\d\", , , , \"81123\", , , [5]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"9(?:0[1-9]|1[01])\\\\d{4}\", , , , \"9010123\", , , [7]],\n      \"VU\",\n      678,\n      \"00\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , \"(?:3[03]|900\\\\d)\\\\d{3}\", , , , \"30123\"],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    WF: [, [, , \"(?:40|72|8\\\\d{4})\\\\d{4}|[89]\\\\d{5}\", , , , , , , [6, 9]], [, , \"72\\\\d{4}\", , , , \"721234\", , , [6]], [, , \"(?:72|8[23])\\\\d{4}\", , , , \"821234\", , , [6]], [, , \"80[0-5]\\\\d{6}\", , , , \"800012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"9[23]\\\\d{4}\", , , , \"921234\", , , [6]], \"WF\", 681, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[47-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"[48]0\\\\d{4}\", , , , \"401234\", , , [6]]],\n    WS: [\n      ,\n      [, , \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\", , , , , , , [5, 6, 7, 10]],\n      [, , \"6[1-9]\\\\d{3}|(?:[2-5]|60)\\\\d{4}\", , , , \"22123\", , , [5, 6]],\n      [, , \"(?:7[1-35-7]|8(?:[3-7]|9\\\\d{3}))\\\\d{5}\", , , , \"7212345\", , , [7, 10]],\n      [, , \"800\\\\d{3}\", , , , \"800123\", , , [6]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"WS\",\n      685,\n      \"0\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    XK: [\n      ,\n      [, , \"2\\\\d{7,8}|3\\\\d{7,11}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\", , , , , , , [8, 9, 10, 11, 12]],\n      [, , \"38\\\\d{6,10}|(?:2[89]|39)(?:0\\\\d{5,6}|[1-9]\\\\d{5})\", , , , \"28012345\"],\n      [, , \"4[3-9]\\\\d{6}\", , , , \"43201234\", , , [8]],\n      [, , \"800\\\\d{5}\", , , , \"80001234\", , , [8]],\n      [, , \"900\\\\d{5}\", , , , \"90001234\", , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"XK\",\n      383,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2|39\"], \"0$1\"], [\n        ,\n        \"(\\\\d{2})(\\\\d{7,10})\",\n        \"$1 $2\",\n        [\"3\"],\n        \"0$1\"\n      ]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    YE: [, [, , \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\", , , , , , , [7, 8, 9], [6]], [, , \"78[0-7]\\\\d{4}|17\\\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\\\d{5}\", , , , \"1234567\", , , [7, 8], [6]], [, , \"7[01378]\\\\d{7}\", , , , \"712345678\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"YE\", 967, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7(?:[24-6]|8[0-7])\"], \"0$1\"], [\n      ,\n      \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n      \"$1 $2 $3\",\n      [\"7\"],\n      \"0$1\"\n    ]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    YT: [\n      ,\n      [, , \"7093\\\\d{5}|(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\", , , , , , , [9]],\n      [, , \"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\", , , , \"269601234\"],\n      [, , \"(?:639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\\\d{4}\", , , , \"639012345\"],\n      [, , \"80\\\\d{7}\", , , , \"801234567\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\", , , , \"939801234\"],\n      \"YT\",\n      262,\n      \"00\",\n      \"0\",\n      ,\n      ,\n      \"0\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    ZA: [, [, , \"[1-79]\\\\d{8}|8\\\\d{4,9}\", , , , , , , [5, 6, 7, 8, 9, 10]], [, , \"(?:2(?:0330|4302)|52087)0\\\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\", , , , \"101234567\", , , [9]], [\n      ,\n      ,\n      \"(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\\\d{3}|8[1-4]\\\\d{3,7}|(?:2[27]|47|54)4950\\\\d{3}|(?:1(?:049[2-4]|9[12]\\\\d\\\\d)|(?:6\\\\d\\\\d|7(?:[0-46-9]\\\\d|5[0-4]))\\\\d\\\\d|8(?:5\\\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\\\d{3}|(?:12|[2-5]1)492\\\\d{4}\",\n      ,\n      ,\n      ,\n      \"711234567\",\n      ,\n      ,\n      [5, 6, 7, 8, 9]\n    ], [, , \"80\\\\d{7}\", , , , \"801234567\", , , [9]], [, , \"(?:86[2-9]|9[0-2]\\\\d)\\\\d{6}\", , , , \"862345678\", , , [9]], [, , \"860\\\\d{6}\", , , , \"860123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\\\d)\\\\d{5}\", , , , \"871234567\", , , [9]], \"ZA\", 27, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [\n      ,\n      \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"[1-9]\"],\n      \"0$1\"\n    ], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"861\\\\d{6,7}\", , , , \"861123456\", , , [9, 10]], , , [, , , , , , , , , [-1]]],\n    ZM: [, [, , \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\", , , , , , , [9], [6]], [, , \"21[1-8]\\\\d{6}\", , , , \"211234567\", , , , [6]], [, , \"(?:7[5-79]|9[5-8])\\\\d{7}\", , , , \"955123456\"], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"63\\\\d{7}\", , , , \"630123456\"], \"ZM\", 260, \"00\", \"0\", , , \"0\", , , , [\n      [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[1-9]\"]],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"],\n      [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]\n    ], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    ZW: [, [, , \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\", , , , , , , [5, 6, 7, 8, 9, 10], [3, 4]], [\n      ,\n      ,\n      \"(?:1(?:(?:3\\\\d|9)\\\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\\\d\\\\d|[56](?:[14]\\\\d\\\\d|20)|7(?:[089]|2[03]|[35]\\\\d\\\\d))\\\\d|4(?:2\\\\d\\\\d|8))\\\\d|1(?:2|[39]\\\\d{4}))|3(?:(?:123|(?:29\\\\d|92)\\\\d)\\\\d\\\\d|7(?:[19]|[56]\\\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\\\d{3}|83)|5(?:25\\\\d\\\\d|[78])|[689]\\\\d)|6(?:(?:[16-8]21|28|52[013])\\\\d\\\\d|[39])|8(?:[1349]28|523)\\\\d\\\\d)\\\\d{3}|(?:4\\\\d\\\\d|9[2-9])\\\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\\\d|7[1-7])\\\\d|2(?:[278]\\\\d|92)|58(?:2\\\\d|3))|3(?:[26]|9\\\\d{3})|5(?:4\\\\d|5)\\\\d\\\\d)\\\\d|6(?:(?:(?:[0-246]|[78]\\\\d)\\\\d|37)\\\\d|5[2-8]))\\\\d\\\\d|(?:2(?:[569]\\\\d|8[2-57-9])|3(?:[013-59]\\\\d|8[37])|6[89]8)\\\\d{3}\",\n      ,\n      ,\n      ,\n      \"1312345\",\n      ,\n      ,\n      ,\n      [3, 4]\n    ], [, , \"7(?:[1278]\\\\d|3[1-9])\\\\d{6}\", , , , \"712345678\", , , [9]], [, , \"80(?:[01]\\\\d|20|8[0-8])\\\\d{3}\", , , , \"8001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"86(?:1[12]|22|30|44|55|77|8[368])\\\\d{6}\", , , , \"8686123456\", , , [10]], \"ZW\", 263, \"00\", \"0\", , , \"0\", , , , [\n      [, \"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"],\n      [, \"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"],\n      [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"],\n      [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"],\n      [\n        ,\n        \"(\\\\d{2})(\\\\d{3,5})\",\n        \"$1 $2\",\n        [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\n        \"0$1\"\n      ],\n      [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"],\n      [, \"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]\n    ], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    800: [\n      ,\n      [, , \"(?:00|[1-9]\\\\d)\\\\d{6}\", , , , , , , [8]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , \"(?:00|[1-9]\\\\d)\\\\d{6}\", , , , \"12345678\"],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      \"001\",\n      800,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      1,\n      [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]],\n      ,\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]],\n      [, , , , , , , , , [-1]],\n      ,\n      ,\n      [, , , , , , , , , [-1]]\n    ],\n    808: [, [, , \"[1-9]\\\\d{7}\", , , , , , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"[1-9]\\\\d{7}\", , , , \"12345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 808, , , , , , , , 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    870: [, [, , \"7\\\\d{11}|[235-7]\\\\d{8}\", , , , , , , [9, 12]], [, , , , , , , , , [-1]], [, , \"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\", , , , \"301234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"2\\\\d{8}\",\n      ,\n      ,\n      ,\n      \"201234567\",\n      ,\n      ,\n      [9]\n    ], \"001\", 870, , , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-7]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    878: [, [, , \"10\\\\d{10}\", , , , , , , [12]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"10\\\\d{10}\", , , , \"101234567890\"], \"001\", 878, , , , , , , , 1, [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    881: [, [\n      ,\n      ,\n      \"6\\\\d{9}|[0-36-9]\\\\d{8}\",\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [9, 10]\n    ], [, , , , , , , , , [-1]], [, , \"6\\\\d{9}|[0-36-9]\\\\d{8}\", , , , \"612345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 881, , , , , , , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-37-9]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{5,6})\", \"$1 $2 $3\", [\"6\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    882: [, [, , \"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\", , , , , , , [7, 8, 9, 10, 11, 12]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",\n      ,\n      ,\n      ,\n      \"3421234\",\n      ,\n      ,\n      [7, 8, 9, 10, 12]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\", , , , \"390123456789\"], \"001\", 882, , , , , , , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"49\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1[36]|9\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [\n      ,\n      \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n      \"$1 $2 $3\",\n      [\"16\"]\n    ], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|23|3(?:[15]|4[57])|4|51\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [, \"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-35]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"348[57]\\\\d{7}\", , , , \"34851234567\", , , [11]]],\n    883: [, [, , \"(?:[1-4]\\\\d|51)\\\\d{6,10}\", , , , , , , [8, 9, 10, 11, 12]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      \"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\",\n      ,\n      ,\n      ,\n      \"510012345\"\n    ], \"001\", 883, , , , , , , , 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3\", [\"[14]|2[24-689]|3[02-689]|51[24-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"21\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[235]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]],\n    888: [, [, , \"\\\\d{11}\", , , , , , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      ,\n      [-1]\n    ], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 888, , , , , , , , 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"\\\\d{11}\", , , , \"12345678901\"], , , [, , , , , , , , , [-1]]],\n    979: [, [, , \"[1359]\\\\d{8}\", , , , , , , [9], [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"[1359]\\\\d{8}\", , , , \"123456789\", , , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 979, , , , , , , , 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]]\n  };\n  function K() {\n    this.g = {};\n  }\n  K.h = void 0;\n  K.g = function() {\n    return K.h ? K.h : K.h = new K();\n  };\n  var Ea = { 0: \"0\", 1: \"1\", 2: \"2\", 3: \"3\", 4: \"4\", 5: \"5\", 6: \"6\", 7: \"7\", 8: \"8\", 9: \"9\", \"\\uFF10\": \"0\", \"\\uFF11\": \"1\", \"\\uFF12\": \"2\", \"\\uFF13\": \"3\", \"\\uFF14\": \"4\", \"\\uFF15\": \"5\", \"\\uFF16\": \"6\", \"\\uFF17\": \"7\", \"\\uFF18\": \"8\", \"\\uFF19\": \"9\", \"\\u0660\": \"0\", \"\\u0661\": \"1\", \"\\u0662\": \"2\", \"\\u0663\": \"3\", \"\\u0664\": \"4\", \"\\u0665\": \"5\", \"\\u0666\": \"6\", \"\\u0667\": \"7\", \"\\u0668\": \"8\", \"\\u0669\": \"9\", \"\\u06F0\": \"0\", \"\\u06F1\": \"1\", \"\\u06F2\": \"2\", \"\\u06F3\": \"3\", \"\\u06F4\": \"4\", \"\\u06F5\": \"5\", \"\\u06F6\": \"6\", \"\\u06F7\": \"7\", \"\\u06F8\": \"8\", \"\\u06F9\": \"9\" }, Fa = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"+\": \"+\",\n    \"*\": \"*\",\n    \"#\": \"#\"\n  }, Ga = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"\\uFF10\": \"0\",\n    \"\\uFF11\": \"1\",\n    \"\\uFF12\": \"2\",\n    \"\\uFF13\": \"3\",\n    \"\\uFF14\": \"4\",\n    \"\\uFF15\": \"5\",\n    \"\\uFF16\": \"6\",\n    \"\\uFF17\": \"7\",\n    \"\\uFF18\": \"8\",\n    \"\\uFF19\": \"9\",\n    \"\\u0660\": \"0\",\n    \"\\u0661\": \"1\",\n    \"\\u0662\": \"2\",\n    \"\\u0663\": \"3\",\n    \"\\u0664\": \"4\",\n    \"\\u0665\": \"5\",\n    \"\\u0666\": \"6\",\n    \"\\u0667\": \"7\",\n    \"\\u0668\": \"8\",\n    \"\\u0669\": \"9\",\n    \"\\u06F0\": \"0\",\n    \"\\u06F1\": \"1\",\n    \"\\u06F2\": \"2\",\n    \"\\u06F3\": \"3\",\n    \"\\u06F4\": \"4\",\n    \"\\u06F5\": \"5\",\n    \"\\u06F6\": \"6\",\n    \"\\u06F7\": \"7\",\n    \"\\u06F8\": \"8\",\n    \"\\u06F9\": \"9\",\n    A: \"2\",\n    B: \"2\",\n    C: \"2\",\n    D: \"3\",\n    E: \"3\",\n    F: \"3\",\n    G: \"4\",\n    H: \"4\",\n    I: \"4\",\n    J: \"5\",\n    K: \"5\",\n    L: \"5\",\n    M: \"6\",\n    N: \"6\",\n    O: \"6\",\n    P: \"7\",\n    Q: \"7\",\n    R: \"7\",\n    S: \"7\",\n    T: \"8\",\n    U: \"8\",\n    V: \"8\",\n    W: \"9\",\n    X: \"9\",\n    Y: \"9\",\n    Z: \"9\"\n  }, Ha = RegExp(\"[+\\uFF0B]+\"), L = RegExp(\"^[+\\uFF0B]+\"), Ia = RegExp(\"([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])\"), Ja = RegExp(\"[+\\uFF0B0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]\"), Ka = /[\\\\\\/] *x/, La = RegExp(\"[^0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9A-Za-z#]+$\"), Ma = /(?:.*?[A-Za-z]){3}.*/, Na = RegExp(\"^\\\\+([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]|[\\\\-\\\\.\\\\(\\\\)]?)*[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]|[\\\\-\\\\.\\\\(\\\\)]?)*$\"), Oa = RegExp(\"^([A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]+((\\\\-)*[A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])*\\\\.)*[A-Za-z]+((\\\\-)*[A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9])*\\\\.?$\");\n  function M(a) {\n    return \"([0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]{1,\" + a + \"})\";\n  }\n  function Pa() {\n    return \";ext=\" + M(\"20\") + \"|[ \\xA0\\\\t,]*(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\" + (M(\"20\") + \"#?|[ \\xA0\\\\t,]*(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"9\") + \"#?|[- ]+\") + (M(\"6\") + \"#|[ \\xA0\\\\t]*(?:,{2}|;)[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"15\") + \"#?|[ \\xA0\\\\t]*(?:,)+[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\") + (M(\"9\") + \"#?\");\n  }\n  var Qa = new RegExp(\"(?:\" + Pa() + \")$\", \"i\"), Ra = new RegExp(\"^[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]{2}$|^[+\\uFF0B]*(?:[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E*]*[0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]){3,}[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E*A-Za-z0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9]*(?:\" + Pa() + \")?$\", \"i\"), Sa = /(\\$\\d)/, Ta = /^\\(?\\$1\\)?$/;\n  function Ua(a) {\n    return 2 > a.length ? false : N(Ra, a);\n  }\n  function Va(a) {\n    return N(Ma, a) ? O(a, Ga) : O(a, Ea);\n  }\n  function Wa(a) {\n    var b = Va(a.toString());\n    E(a);\n    a.g(b);\n  }\n  function Xa(a) {\n    return null != a && (1 != x(a, 9) || -1 != u(a, 9)[0]);\n  }\n  function O(a, b) {\n    for (var c = new D(), d, e = a.length, f = 0; f < e; ++f) d = a.charAt(f), d = b[d.toUpperCase()], null != d && c.g(d);\n    return c.toString();\n  }\n  function Ya(a) {\n    return 0 == a.length || Ta.test(a);\n  }\n  function P(a) {\n    return null != a && isNaN(a) && a.toUpperCase() in Da;\n  }\n  K.prototype.format = function(a, b) {\n    if (0 == r(a, 2) && q(a, 5)) {\n      var c = w(a, 5);\n      if (0 < c.length) return c;\n    }\n    c = w(a, 1);\n    var d = Q(a);\n    if (0 == b) return Za(c, 0, d, \"\");\n    if (!(c in J)) return d;\n    var e = R(this, c, S(c));\n    a = q(a, 3) && 0 != r(a, 3).length ? 3 == b ? \";ext=\" + r(a, 3) : q(e, 13) ? r(e, 13) + w(a, 3) : \" ext. \" + w(a, 3) : \"\";\n    a: {\n      e = 0 == u(e, 20).length || 2 == b ? u(e, 19) : u(e, 20);\n      for (var f, g = e.length, h = 0; h < g; ++h) {\n        f = e[h];\n        var l = x(f, 3);\n        if (0 == l || 0 == d.search(r(f, 3, l - 1))) {\n          if (l = new RegExp(r(f, 1)), N(l, d)) {\n            e = f;\n            break a;\n          }\n        }\n      }\n      e = null;\n    }\n    null != e && (g = e, e = w(g, 2), f = new RegExp(r(g, 1)), w(\n      g,\n      5\n    ), g = w(g, 4), d = 2 == b && null != g && 0 < g.length ? d.replace(f, e.replace(Sa, g)) : d.replace(f, e), 3 == b && (d = d.replace(RegExp(\"^[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]+\"), \"\"), d = d.replace(RegExp(\"[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]+\", \"g\"), \"-\")));\n    return Za(c, b, d, a);\n  };\n  function R(a, b, c) {\n    return \"001\" == c ? T(a, \"\" + b) : T(a, c);\n  }\n  function Q(a) {\n    if (!q(a, 2)) return \"\";\n    var b = \"\" + r(a, 2);\n    return q(a, 4) && r(a, 4) && 0 < w(a, 8) ? Array(w(a, 8) + 1).join(\"0\") + b : b;\n  }\n  function Za(a, b, c, d) {\n    switch (b) {\n      case 0:\n        return \"+\" + a + c + d;\n      case 1:\n        return \"+\" + a + \" \" + c + d;\n      case 3:\n        return \"tel:+\" + a + \"-\" + c + d;\n      default:\n        return c + d;\n    }\n  }\n  function U(a, b) {\n    switch (b) {\n      case 4:\n        return r(a, 5);\n      case 3:\n        return r(a, 4);\n      case 1:\n        return r(a, 3);\n      case 0:\n      case 2:\n        return r(a, 2);\n      case 5:\n        return r(a, 6);\n      case 6:\n        return r(a, 8);\n      case 7:\n        return r(a, 7);\n      case 8:\n        return r(a, 21);\n      case 9:\n        return r(a, 25);\n      case 10:\n        return r(a, 28);\n      default:\n        return r(a, 1);\n    }\n  }\n  function $a(a, b) {\n    var c = ab(a, b);\n    a = R(a, w(b, 1), c);\n    if (null == a) return -1;\n    b = Q(b);\n    return bb(b, a);\n  }\n  function bb(a, b) {\n    return V(a, r(b, 1)) ? V(a, r(b, 5)) ? 4 : V(a, r(b, 4)) ? 3 : V(a, r(b, 6)) ? 5 : V(a, r(b, 8)) ? 6 : V(a, r(b, 7)) ? 7 : V(a, r(b, 21)) ? 8 : V(a, r(b, 25)) ? 9 : V(a, r(b, 28)) ? 10 : V(a, r(b, 2)) ? r(b, 18) || V(a, r(b, 3)) ? 2 : 0 : !r(b, 18) && V(a, r(b, 3)) ? 1 : -1 : -1;\n  }\n  function T(a, b) {\n    if (null == b) return null;\n    b = b.toUpperCase();\n    var c = a.g[b];\n    if (null == c) {\n      c = Da[b];\n      if (null == c) return null;\n      c = new C().g(H.m(), c);\n      a.g[b] = c;\n    }\n    return c;\n  }\n  function V(a, b) {\n    var c = a.length;\n    return 0 < x(b, 9) && -1 == u(b, 9).indexOf(c) ? false : N(w(b, 2), a);\n  }\n  function cb(a, b) {\n    var c = ab(a, b);\n    var d = w(b, 1);\n    var e = R(a, d, c);\n    null == e || \"001\" != c && d != db(a, c) ? e = false : (a = Q(b), e = -1 != bb(a, e));\n    return e;\n  }\n  function ab(a, b) {\n    if (null == b) return null;\n    var c = w(b, 1);\n    c = J[c];\n    if (null == c) a = null;\n    else if (1 == c.length) a = c[0];\n    else a: {\n      b = Q(b);\n      for (var d, e = c.length, f = 0; f < e; f++) {\n        d = c[f];\n        var g = T(a, d);\n        if (q(g, 23)) {\n          if (0 == b.search(r(g, 23))) {\n            a = d;\n            break a;\n          }\n        } else if (-1 != bb(b, g)) {\n          a = d;\n          break a;\n        }\n      }\n      a = null;\n    }\n    return a;\n  }\n  function S(a) {\n    a = J[a];\n    return null == a ? \"ZZ\" : a[0];\n  }\n  function db(a, b) {\n    a = T(a, b);\n    if (null == a) throw Error(\"Invalid region code: \" + b);\n    return w(a, 10);\n  }\n  function W(a, b, c, d) {\n    var e = U(c, d), f = 0 == x(e, 9) ? u(r(c, 1), 9) : u(e, 9);\n    e = u(e, 10);\n    if (2 == d) if (Xa(U(c, 0))) a = U(c, 1), Xa(a) && (f = f.concat(0 == x(a, 9) ? u(r(c, 1), 9) : u(a, 9)), f.sort(), 0 == e.length ? e = u(a, 10) : (e = e.concat(u(a, 10)), e.sort()));\n    else return W(a, b, c, 1);\n    if (-1 == f[0]) return 5;\n    b = b.length;\n    if (-1 < e.indexOf(b)) return 4;\n    c = f[0];\n    return c == b ? 0 : c > b ? 2 : f[f.length - 1] < b ? 3 : -1 < f.indexOf(b, 1) ? 0 : 5;\n  }\n  function X(a, b, c) {\n    var d = Q(b);\n    b = w(b, 1);\n    if (!(b in J)) return 1;\n    b = R(a, b, S(b));\n    return W(a, d, b, c);\n  }\n  function eb(a, b) {\n    a = a.toString();\n    if (0 == a.length || \"0\" == a.charAt(0)) return 0;\n    for (var c, d = a.length, e = 1; 3 >= e && e <= d; ++e) if (c = parseInt(a.substring(0, e), 10), c in J) return b.g(a.substring(e)), c;\n    return 0;\n  }\n  function fb(a, b, c, d, e, f) {\n    if (0 == b.length) return 0;\n    b = new D(b);\n    var g;\n    null != c && (g = r(c, 11));\n    null == g && (g = \"NonMatch\");\n    var h = b.toString();\n    if (0 == h.length) g = 20;\n    else if (L.test(h)) h = h.replace(L, \"\"), E(b), b.g(Va(h)), g = 1;\n    else {\n      h = new RegExp(g);\n      Wa(b);\n      g = b.toString();\n      if (0 == g.search(h)) {\n        h = g.match(h)[0].length;\n        var l = g.substring(h).match(Ia);\n        l && null != l[1] && 0 < l[1].length && \"0\" == O(l[1], Ea) ? g = false : (E(b), b.g(g.substring(h)), g = true);\n      } else g = false;\n      g = g ? 5 : 20;\n    }\n    e && t(f, 6, g);\n    if (20 != g) {\n      if (2 >= b.h.length) throw Error(\"Phone number too short after IDD\");\n      a = eb(b, d);\n      if (0 != a) return t(f, 1, a), a;\n      throw Error(\"Invalid country calling code\");\n    }\n    if (null != c && (g = w(c, 10), h = \"\" + g, l = b.toString(), 0 == l.lastIndexOf(h, 0) && (h = new D(l.substring(h.length)), l = r(c, 1), l = new RegExp(w(l, 2)), gb(h, c, null), h = h.toString(), !N(l, b.toString()) && N(l, h) || 3 == W(a, b.toString(), c, -1)))) return d.g(h), e && t(f, 6, 10), t(f, 1, g), g;\n    t(f, 1, 0);\n    return 0;\n  }\n  function gb(a, b, c) {\n    var d = a.toString(), e = d.length, f = r(b, 15);\n    if (0 != e && null != f && 0 != f.length) {\n      var g = new RegExp(\"^(?:\" + f + \")\");\n      if (e = g.exec(d)) {\n        f = new RegExp(w(r(b, 1), 2));\n        var h = N(f, d), l = e.length - 1;\n        b = r(b, 16);\n        if (null == b || 0 == b.length || null == e[l] || 0 == e[l].length) {\n          if (!h || N(f, d.substring(e[0].length))) null != c && 0 < l && null != e[l] && c.g(e[1]), a.set(d.substring(e[0].length));\n        } else if (d = d.replace(g, b), !h || N(f, d)) null != c && 0 < l && c.g(e[1]), a.set(d);\n      }\n    }\n  }\n  function Y(a, b, c) {\n    if (!P(c) && 0 < b.length && \"+\" != b.charAt(0)) throw Error(\"Invalid country calling code\");\n    return hb(a, b, c, true);\n  }\n  function hb(a, b, c, d) {\n    if (null == b) throw Error(\"The string supplied did not seem to be a phone number\");\n    if (250 < b.length) throw Error(\"The string supplied is too long to be a phone number\");\n    var e = new D();\n    var f = b.indexOf(\";phone-context=\");\n    if (-1 === f) f = null;\n    else if (f += 15, f >= b.length) f = \"\";\n    else {\n      var g = b.indexOf(\";\", f);\n      f = -1 !== g ? b.substring(f, g) : b.substring(f);\n    }\n    var h = f;\n    null == h ? g = true : 0 === h.length ? g = false : (g = Na.exec(h), h = Oa.exec(h), g = null !== g || null !== h);\n    if (!g) throw Error(\"The string supplied did not seem to be a phone number\");\n    null != f ? (\"+\" === f.charAt(0) && e.g(f), f = b.indexOf(\"tel:\"), e.g(b.substring(0 <= f ? f + 4 : 0, b.indexOf(\";phone-context=\")))) : (f = e.g, g = b ?? \"\", h = g.search(Ja), 0 <= h ? (g = g.substring(h), g = g.replace(La, \"\"), h = g.search(Ka), 0 <= h && (g = g.substring(0, h))) : g = \"\", f.call(e, g));\n    f = e.toString();\n    g = f.indexOf(\";isub=\");\n    0 < g && (E(e), e.g(f.substring(0, g)));\n    if (!Ua(e.toString())) throw Error(\"The string supplied did not seem to be a phone number\");\n    f = e.toString();\n    if (!(P(c) || null != f && 0 < f.length && L.test(f))) throw Error(\"Invalid country calling code\");\n    f = new I();\n    d && t(f, 5, b);\n    a: {\n      b = e.toString();\n      g = b.search(Qa);\n      if (0 <= g && Ua(b.substring(0, g))) {\n        h = b.match(Qa);\n        for (var l = h.length, A = 1; A < l; ++A) if (null != h[A] && 0 < h[A].length) {\n          E(e);\n          e.g(b.substring(0, g));\n          b = h[A];\n          break a;\n        }\n      }\n      b = \"\";\n    }\n    0 < b.length && t(f, 3, b);\n    g = T(a, c);\n    b = new D();\n    h = 0;\n    l = e.toString();\n    try {\n      h = fb(a, l, g, b, d, f);\n    } catch (ca) {\n      if (\"Invalid country calling code\" == ca.message && L.test(l)) {\n        if (l = l.replace(L, \"\"), h = fb(a, l, g, b, d, f), 0 == h) throw ca;\n      } else throw ca;\n    }\n    0 != h ? (e = S(h), e != c && (g = R(a, h, e))) : (Wa(e), b.g(e.toString()), null != c ? (h = w(g, 10), t(\n      f,\n      1,\n      h\n    )) : d && (delete f.h[6], f.g && delete f.g[6]));\n    if (2 > b.h.length) throw Error(\"The string supplied is too short to be a phone number\");\n    null != g && (c = new D(), e = new D(b.toString()), gb(e, g, c), a = W(a, e.toString(), g, -1), 2 != a && 4 != a && 5 != a && (b = e, d && 0 < c.toString().length && t(f, 7, c.toString())));\n    d = b.toString();\n    a = d.length;\n    if (2 > a) throw Error(\"The string supplied is too short to be a phone number\");\n    if (17 < a) throw Error(\"The string supplied is too long to be a phone number\");\n    if (1 < d.length && \"0\" == d.charAt(0)) {\n      t(f, 4, true);\n      for (a = 1; a < d.length - 1 && \"0\" == d.charAt(a); ) a++;\n      1 != a && t(f, 8, a);\n    }\n    t(f, 2, parseInt(d, 10));\n    return f;\n  }\n  function N(a, b) {\n    return (a = \"string\" == typeof a ? b.match(\"^(?:\" + a + \")$\") : b.match(a)) && a[0].length == b.length ? true : false;\n  }\n  ;\n  function ib(a) {\n    this.fa = RegExp(\"\\u2008\");\n    this.ja = \"\";\n    this.v = new D();\n    this.da = \"\";\n    this.s = new D();\n    this.ba = new D();\n    this.u = true;\n    this.ea = this.ca = this.la = false;\n    this.ga = K.g();\n    this.$ = 0;\n    this.h = new D();\n    this.ha = false;\n    this.o = \"\";\n    this.g = new D();\n    this.j = [];\n    this.ka = a;\n    this.l = jb(this, this.ka);\n  }\n  var kb = new H();\n  t(kb, 11, \"NA\");\n  var lb = RegExp(\"^[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*\\\\$1[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*(\\\\$\\\\d[-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E]*)*$\"), mb = /[- ]/;\n  function jb(a, b) {\n    var c = a.ga;\n    b = P(b) ? db(c, b) : 0;\n    a = T(a.ga, S(b));\n    return null != a ? a : kb;\n  }\n  function nb(a) {\n    for (var b = a.j.length, c = 0; c < b; ++c) {\n      var d = a.j[c], e = w(d, 1);\n      if (a.da == e) return false;\n      var f = a;\n      var g = d, h = w(g, 1);\n      E(f.v);\n      var l = f;\n      g = w(g, 2);\n      var A = \"999999999999999\".match(h)[0];\n      A.length < l.g.h.length ? l = \"\" : (l = A.replace(new RegExp(h, \"g\"), g), l = l.replace(RegExp(\"9\", \"g\"), \"\\u2008\"));\n      0 < l.length ? (f.v.g(l), f = true) : f = false;\n      if (f) return a.da = e, a.ha = mb.test(r(d, 4)), a.$ = 0, true;\n    }\n    return a.u = false;\n  }\n  function ob(a, b) {\n    for (var c = [], d = b.length - 3, e = a.j.length, f = 0; f < e; ++f) {\n      var g = a.j[f];\n      0 == x(g, 3) ? c.push(a.j[f]) : (g = r(g, 3, Math.min(d, x(g, 3) - 1)), 0 == b.search(g) && c.push(a.j[f]));\n    }\n    a.j = c;\n  }\n  function pb(a, b) {\n    a.s.g(b);\n    var c = b;\n    Ia.test(c) || 1 == a.s.h.length && Ha.test(c) ? (\"+\" == b ? (c = b, a.ba.g(b)) : (c = Ea[b], a.ba.g(c), a.g.g(c)), b = c) : (a.u = false, a.la = true);\n    if (!a.u) {\n      if (!a.la) {\n        if (qb(a)) {\n          if (rb(a)) return sb(a);\n        } else if (0 < a.o.length && (b = a.g.toString(), E(a.g), a.g.g(a.o), a.g.g(b), b = a.h.toString(), c = b.lastIndexOf(a.o), E(a.h), a.h.g(b.substring(0, c))), a.o != tb(a)) return a.h.g(\" \"), sb(a);\n      }\n      return a.s.toString();\n    }\n    switch (a.ba.h.length) {\n      case 0:\n      case 1:\n      case 2:\n        return a.s.toString();\n      case 3:\n        if (qb(a)) a.ea = true;\n        else return a.o = tb(a), ub(a);\n      default:\n        if (a.ea) return rb(a) && (a.ea = false), a.h.toString() + a.g.toString();\n        if (0 < a.j.length) {\n          b = vb(a, b);\n          c = wb(a);\n          if (0 < c.length) return c;\n          ob(a, a.g.toString());\n          return nb(a) ? xb(a) : a.u ? Z(a, b) : a.s.toString();\n        }\n        return ub(a);\n    }\n  }\n  function sb(a) {\n    a.u = true;\n    a.ea = false;\n    a.j = [];\n    a.$ = 0;\n    E(a.v);\n    a.da = \"\";\n    return ub(a);\n  }\n  function wb(a) {\n    for (var b = a.g.toString(), c = a.j.length, d = 0; d < c; ++d) {\n      var e = a.j[d], f = w(e, 1);\n      if (new RegExp(\"^(?:\" + f + \")$\").test(b) && (a.ha = mb.test(r(e, 4)), e = b.replace(new RegExp(f, \"g\"), r(e, 2)), e = Z(a, e), O(e, Fa) == a.ba)) return e;\n    }\n    return \"\";\n  }\n  function Z(a, b) {\n    var c = a.h.h.length;\n    return a.ha && 0 < c && \" \" != a.h.toString().charAt(c - 1) ? a.h + \" \" + b : a.h + b;\n  }\n  function ub(a) {\n    var b = a.g.toString();\n    if (3 <= b.length) {\n      for (var c = a.ca && 0 == a.o.length && 0 < x(a.l, 20) ? u(a.l, 20) : u(a.l, 19), d = c.length, e = 0; e < d; ++e) {\n        var f = c[e];\n        0 < a.o.length && Ya(w(f, 4)) && !r(f, 6) && !q(f, 5) || (0 != a.o.length || a.ca || Ya(w(f, 4)) || r(f, 6)) && lb.test(w(f, 2)) && a.j.push(f);\n      }\n      ob(a, b);\n      b = wb(a);\n      return 0 < b.length ? b : nb(a) ? xb(a) : a.s.toString();\n    }\n    return Z(a, b);\n  }\n  function xb(a) {\n    var b = a.g.toString(), c = b.length;\n    if (0 < c) {\n      for (var d = \"\", e = 0; e < c; e++) d = vb(a, b.charAt(e));\n      return a.u ? Z(a, d) : a.s.toString();\n    }\n    return a.h.toString();\n  }\n  function tb(a) {\n    var b = a.g.toString(), c = 0;\n    if (1 != r(a.l, 10)) var d = false;\n    else d = a.g.toString(), d = \"1\" == d.charAt(0) && \"0\" != d.charAt(1) && \"1\" != d.charAt(1);\n    d ? (c = 1, a.h.g(\"1\").g(\" \"), a.ca = true) : q(a.l, 15) && (d = new RegExp(\"^(?:\" + r(a.l, 15) + \")\"), d = b.match(d), null != d && null != d[0] && 0 < d[0].length && (a.ca = true, c = d[0].length, a.h.g(b.substring(0, c))));\n    E(a.g);\n    a.g.g(b.substring(c));\n    return b.substring(0, c);\n  }\n  function qb(a) {\n    var b = a.ba.toString(), c = new RegExp(\"^(?:\\\\+|\" + r(a.l, 11) + \")\");\n    c = b.match(c);\n    return null != c && null != c[0] && 0 < c[0].length ? (a.ca = true, c = c[0].length, E(a.g), a.g.g(b.substring(c)), E(a.h), a.h.g(b.substring(0, c)), \"+\" != b.charAt(0) && a.h.g(\" \"), true) : false;\n  }\n  function rb(a) {\n    if (0 == a.g.h.length) return false;\n    var b = new D(), c = eb(a.g, b);\n    if (0 == c) return false;\n    E(a.g);\n    a.g.g(b.toString());\n    b = S(c);\n    \"001\" == b ? a.l = T(a.ga, \"\" + c) : b != a.ka && (a.l = jb(a, b));\n    a.h.g(\"\" + c).g(\" \");\n    a.o = \"\";\n    return true;\n  }\n  function vb(a, b) {\n    var c = a.v.toString();\n    if (0 <= c.substring(a.$).search(a.fa)) {\n      var d = c.search(a.fa);\n      b = c.replace(a.fa, b);\n      E(a.v);\n      a.v.g(b);\n      a.$ = d;\n      return b.substring(0, a.$ + 1);\n    }\n    1 == a.j.length && (a.u = false);\n    a.da = \"\";\n    return a.s.toString();\n  }\n  ;\n  const yb = { FIXED_LINE: 0, MOBILE: 1, FIXED_LINE_OR_MOBILE: 2, TOLL_FREE: 3, PREMIUM_RATE: 4, SHARED_COST: 5, VOIP: 6, PERSONAL_NUMBER: 7, PAGER: 8, UAN: 9, VOICEMAIL: 10, UNKNOWN: -1 };\n  m(\"intlTelInputUtilsTemp\", {});\n  m(\"intlTelInputUtilsTemp.formatNumberAsYouType\", (a, b) => {\n    try {\n      const c = a.replace(/[^+0-9]/g, \"\"), d = new ib(b);\n      b = \"\";\n      for (let e = 0; e < c.length; e++) d.ja = pb(d, c.charAt(e)), b = d.ja;\n      return b;\n    } catch {\n      return a;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.formatNumber\", (a, b, c) => {\n    try {\n      const e = K.g(), f = Y(e, a, b);\n      var d = X(e, f, -1);\n      return 0 == d || 4 == d ? e.format(f, \"undefined\" === typeof c ? 0 : c) : a;\n    } catch {\n      return a;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getExampleNumber\", (a, b, c, d) => {\n    try {\n      const l = K.g();\n      a: {\n        var e = l;\n        if (P(a)) {\n          var f = U(T(e, a), c);\n          try {\n            if (q(f, 6)) {\n              var g = r(f, 6);\n              var h = hb(e, g, a, false);\n              break a;\n            }\n          } catch (A) {\n          }\n        }\n        h = null;\n      }\n      return l.format(h, d ? 0 : b ? 2 : 1);\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getExtension\", (a, b) => {\n    try {\n      return r(Y(K.g(), a, b), 3);\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getNumberType\", (a, b) => {\n    try {\n      const c = K.g(), d = Y(c, a, b);\n      return $a(c, d);\n    } catch {\n      return -99;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getValidationError\", (a, b) => {\n    if (!b) return 1;\n    try {\n      const c = K.g(), d = Y(c, a, b);\n      return X(c, d, -1);\n    } catch (c) {\n      return \"Invalid country calling code\" === c.message ? 1 : 3 >= a.length || \"Phone number too short after IDD\" === c.message || \"The string supplied is too short to be a phone number\" === c.message ? 2 : \"The string supplied is too long to be a phone number\" === c.message ? 3 : -99;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.isValidNumber\", (a, b, c) => {\n    try {\n      const d = K.g(), e = Y(d, a, b), f = cb(d, e);\n      if (c) {\n        const g = c.map((h) => yb[h]);\n        return f && g.includes($a(d, e));\n      }\n      return f;\n    } catch {\n      return false;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.isPossibleNumber\", (a, b, c) => {\n    try {\n      const d = K.g(), e = Y(d, a, b);\n      if (c) {\n        c.includes(\"FIXED_LINE_OR_MOBILE\") && (c.includes(\"MOBILE\") || c.push(\"MOBILE\"), c.includes(\"FIXED_LINE\") || c.push(\"FIXED_LINE\"));\n        for (let f of c) if (0 === X(d, e, yb[f])) return true;\n        return false;\n      }\n      return 0 === X(d, e, -1);\n    } catch {\n      return false;\n    }\n  });\n  m(\"intlTelInputUtilsTemp.getCoreNumber\", (a, b) => {\n    try {\n      return r(Y(K.g(), a, b), 2).toString();\n    } catch {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtilsTemp.numberFormat\", { E164: 0, INTERNATIONAL: 1, NATIONAL: 2, RFC3966: 3 });\n  m(\"intlTelInputUtilsTemp.numberType\", yb);\n  m(\"intlTelInputUtilsTemp.validationError\", { IS_POSSIBLE: 0, INVALID_COUNTRY_CODE: 1, TOO_SHORT: 2, TOO_LONG: 3, IS_POSSIBLE_LOCAL_ONLY: 4, INVALID_LENGTH: 5 });\n})();\nvar utils = window.intlTelInputUtilsTemp;\ndelete window.intlTelInputUtilsTemp;\nvar utils_default = utils;\n\n// src/js/intl-tel-input/intlTelInputWithUtils.ts\nintl_tel_input_default.utils = utils_default;\nvar intlTelInputWithUtils_default = intl_tel_input_default;\n\n// react/src/intl-tel-input/reactWithUtils.tsx\nimport React, { useRef, useEffect, forwardRef, useImperativeHandle, useCallback } from \"react\";\nvar IntlTelInput = forwardRef(function IntlTelInput2({\n  initialValue = \"\",\n  onChangeNumber = () => {\n  },\n  onChangeCountry = () => {\n  },\n  onChangeValidity = () => {\n  },\n  onChangeErrorCode = () => {\n  },\n  usePreciseValidation = false,\n  initOptions = {},\n  inputProps = {},\n  disabled = void 0\n}, ref) {\n  const inputRef = useRef(null);\n  const itiRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    getInstance: () => itiRef.current,\n    getInput: () => inputRef.current\n  }));\n  const update = useCallback(() => {\n    const num = itiRef.current?.getNumber() || \"\";\n    const countryIso = itiRef.current?.getSelectedCountryData().iso2 || \"\";\n    onChangeNumber(num);\n    onChangeCountry(countryIso);\n    if (itiRef.current) {\n      const isValid = usePreciseValidation ? itiRef.current.isValidNumberPrecise() : itiRef.current.isValidNumber();\n      if (isValid) {\n        onChangeValidity(true);\n        onChangeErrorCode(null);\n      } else {\n        const errorCode = itiRef.current.getValidationError();\n        onChangeValidity(false);\n        onChangeErrorCode(errorCode);\n      }\n    }\n  }, [onChangeCountry, onChangeErrorCode, onChangeNumber, onChangeValidity, usePreciseValidation]);\n  useEffect(() => {\n    if (inputRef.current) {\n      itiRef.current = intlTelInputWithUtils_default(inputRef.current, initOptions);\n    }\n    return () => {\n      itiRef.current?.destroy();\n    };\n  }, []);\n  useEffect(() => {\n    const inputRefCurrent = inputRef.current;\n    if (inputRefCurrent) {\n      inputRefCurrent.addEventListener(\"countrychange\", update);\n      itiRef.current.promise.then(update);\n    }\n    return () => {\n      if (inputRefCurrent) {\n        inputRefCurrent.removeEventListener(\"countrychange\", update);\n      }\n    };\n  }, [update]);\n  useEffect(() => {\n    if (itiRef.current && disabled !== void 0) {\n      itiRef.current.setDisabled(disabled);\n    }\n  }, [disabled]);\n  return /* @__PURE__ */ React.createElement(\n    \"input\",\n    {\n      type: \"tel\",\n      ref: inputRef,\n      onInput: update,\n      defaultValue: initialValue,\n      ...inputProps\n    }\n  );\n});\nvar reactWithUtils_default = IntlTelInput;\nexport {\n  reactWithUtils_default as default,\n  intlTelInputWithUtils_default as intlTelInput\n};\n"],"mappings":"AAAA;AACA,IAAIA,cAAc,GAAG,CACnB,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAClY,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,EACD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAChB,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,OAAO,CAAC,EACT,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,OAAO,CAAC,EACT,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CACtB,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAChC,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EACzC,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,EAAE,KAAK,CAAC,CACf,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAChD,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,EACD,CAAC,KAAK,EAAE,KAAK,CAAC,EACd,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,EACD,IAAI,EACJ,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,CAAC,KAAK,EAAE,KAAK,CAAC,CACf,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,EACD,IAAI,EACJ,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,EACD,IAAI,EACJ,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,IAAI,CAAC,CACP,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,CAAC,CACF,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,GAAG,EACH,EAAE,EACF,CAAC,KAAK,CAAC,CACR,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,IAAI,EACJ,CAAC,EACD,CAAC,OAAO,CAAC,CACV,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,IAAI,CACL,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,EACL,CAAC,EACD,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,GAAG,CACJ,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,EACD,CACE,IAAI;AACJ;AACA,KAAK,CACN,CACF;AACD,IAAIC,YAAY,GAAG,EAAE;AACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,cAAc,CAACG,MAAM,EAAED,CAAC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AC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MACjvB,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MACjB,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,KAAK,CAAC;MACZ,GAAG,EAAE,CAAC,KAAK,CAAC;MACZ,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,IAAI,CAAC;MACX,GAAG,EAAE,CAAC,KAAK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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}